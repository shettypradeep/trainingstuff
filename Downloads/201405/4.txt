From users-return-136472-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri May 30 21:16:49 2014
Return-Path: <users-return-136472-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9A9CC10ACE
	for <apmail-maven-users-archive@www.apache.org>; Fri, 30 May 2014 21:16:49 +0000 (UTC)
Received: (qmail 55554 invoked by uid 500); 30 May 2014 21:16:48 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 55466 invoked by uid 500); 30 May 2014 21:16:47 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 55458 invoked by uid 99); 30 May 2014 21:16:47 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 30 May 2014 21:16:47 +0000
X-ASF-Spam-Status: No, hits=2.2 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_NONE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of paulus.benedictus@gmail.com designates 209.85.192.47 as permitted sender)
Received: from [209.85.192.47] (HELO mail-qg0-f47.google.com) (209.85.192.47)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 30 May 2014 21:16:44 +0000
Received: by mail-qg0-f47.google.com with SMTP id j107so7042444qga.34
        for <users@maven.apache.org>; Fri, 30 May 2014 14:16:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=HfiesNZZ8dtGMLVTTYsuXmxvvPOqBYHmdJLNwxlyHDk=;
        b=sC+daR94fKxyLmUObF56AvvEadIe9e7dK8PgGVarjGPdoS3adj+yVNQPcU+nqHlWAr
         nYICVjYf+qynrSy7Gp/IMlfAEDIpbAbqGJGUdQzaVRFVDRetphLJf7ZPzio1LDW4Lxsz
         WAidn5n2ttO1XkHqGI8zzTu1Jxww0kpWGNJYch9pz+3oWRzk14NW0q+hHiGwbQrQeCsF
         vyGIPNghSaTNtp23Y+4unQXNovRrcOfkX34aqnwce+UoixOIVhlnmRZIqpBaoLOO+cBZ
         o1igKp/0Hk4b0o8d8/EghcaxrKW2ZIp6/Wc8GSn6cHHOuBYrH4Yh7doM8kkT4xGYWq28
         SohA==
MIME-Version: 1.0
X-Received: by 10.224.38.204 with SMTP id c12mr25694569qae.1.1401484580477;
 Fri, 30 May 2014 14:16:20 -0700 (PDT)
Sender: paulus.benedictus@gmail.com
Received: by 10.96.21.228 with HTTP; Fri, 30 May 2014 14:16:20 -0700 (PDT)
In-Reply-To: <003e01cf7c47$b0a2b850$11e828f0$@purelandsupply.com>
References: <003e01cf7c47$b0a2b850$11e828f0$@purelandsupply.com>
Date: Fri, 30 May 2014 16:16:20 -0500
X-Google-Sender-Auth: YJ4nRia_-99QyOtC_tfDzccUJgM
Message-ID: <CABLGb9wHCYGupoMJMy2CNVvLsUOF=n92PjBU51MUp53sKXzJSQ@mail.gmail.com>
Subject: Re: Unmanaged dependency question
From: Paul Benedict <pbenedict@apache.org>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a1134a5e093df3404faa48e93
X-Virus-Checked: Checked by ClamAV on apache.org

--001a1134a5e093df3404faa48e93
Content-Type: text/plain; charset=UTF-8

I don't think you should make a project for your sql jar. My guess is when
you build+install that, you're creating an empty and useless jar file and
overwriting the good one you already placed in your local repo. The
mvn:install:install-file thing works and is what I would expect as the
answer.


Cheers,
Paul


On Fri, May 30, 2014 at 3:42 PM, Matt Whiteman <mwhiteman@purelandsupply.com
> wrote:

> Hi,
>
>
>
> This has probably been answered before, but I haven't been able to find the
> answer and I'm hoping someone knows.
>
>
>
> I'm writing several apps that talk to a Microsoft SQL database, so I'm
> using
> the Hibernate dependency. Since Microsoft doesn't make the sqljdbc4 jar
> available on Maven, I've downloaded it, and I'm trying to make it an
> unmanaged dependency in its own standalone project so that I can simply
> reference it in other projects' pom files without having to deploy the jar
> to each one individually.
>
>
>
> I've followed the instructions for deploying an unmanaged dependency. As I
> am the only developer at my company (at this time), I do not have a
> separate
> Maven server setup. I was hoping to simply deploy the dependency and then
> run 'maven install' so that it copies everything needed into my .m2 folder.
> This is my directory setup:
>
>
>
> (This is the project directory for the sqljdbc4 unmanaged dependency)
>
> C:\dev\Github-repos\addons\sqljdbc4
>
>   +- pom.xml
>
>   +-src
>
>   +-repo
>
>
>
> I followed the instructions to use mvn deploy on the local sqljdbc4.jar
> file. I am using an artifactId of sqljdbc4, version 4.0, groupId of
> com.microsoft.sqlserver. After deployment, the repo directory does appear
> to
> be correctly populated:
>
>
>
> C:\dev\Github-repos\addons\sqljdbc4
>
>   +- pom.xml
>
>   +-src
>
>   +-repo
>
>        +-com
>
>            +-microsoft
>
>                   +-sqlserver
>
>                        +-sqljdbc4
>
>                                 +-maven-metadata
>
>                                 +-4.0
>
>                                       +-sqljdbc4-4.0.jar
>
>                                       +-sqljdbc4-4.0.pom
>
>
>
> Next, following the instructions, I go back into the pom.xml file and add
> the repository tag, so my pom.xml for this now looks like:
>
>
>
> <project xmlns="http://maven.apache.org/POM/4.0.0"
> xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
> xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
> http://maven.apache.org/xsd/maven-4.0.0.xsd
> <
> http://maven.apache.org/POM/4.0.0%20http:/maven.apache.org/xsd/maven-4.0.0
> .
> xsd> ">
>
>   <modelVersion>4.0.0</modelVersion>
>
>   <groupId>com.microsoft.sqlserver</groupId>
>
>   <artifactId>sqljdbc4</artifactId>
>
>   <version>4.0</version>
>
>
>
> <repositories>
>
>     <!--other repositories if any-->
>
>     <repository>
>
>         <id>project.local</id>
>
>         <name>project</name>
>
>         <url>file:${project.basedir}/repo</url>
>
>     </repository>
>
> </repositories>
>
> </project>
>
>
>
>
>
> Now, here is the problem. Since I want to use this as a dependency in other
> projects, I am trying to run 'maven install' so that it will push
> everything
> into my .m2 directory. The maven build is a success. However, the resulting
> sqljdbc4.jar file in the target directory and up in the m2 directory is
> only
> 2kb (whereas the original jar file is 571kb, none of the content made it
> in). As a result, projects that use this as a dependency build, but then
> throw a ClassNotFoundException at runtime, because the classes aren't
> there.
>
>
>
> I am building a separate project that uses this as a dependency:
>
>
>
> C:\dev\Github-repos\applications\myapp
>
>
>
> The pom.xml for this project uses the dependency correctly:
>
> <dependency>
>
>                 <groupId>com.microsoft.sqlserver</groupId>
>
>                 <artifactId>sqljdbc4</artifactId>
>
>                 <version>4.0</version>
>
> </dependency>
>
>
>
> I'm even using the maven assembly plugin to ensure a jar is built with all
> dependencies packaged in:
>
>
>
>                     <plugin>
>
>
> <artifactId>maven-assembly-plugin</artifactId>
>
>                                   <configuration>
>
>                                                 <descriptorRefs>
>
>
> <descriptorRef>jar-with-dependencies</descriptorRef>
>
>                                                 </descriptorRefs>
>
>                                     <archive>
>
>                                       <manifest>
>
>                                         <addClasspath>true</addClasspath>
>
>
> <mainClass>productfeeds.main.ProductFeedDriver</mainClass>
>
>                                       </manifest>
>
>                                     </archive>
>
>                                   </configuration>
>
>         <executions>
>
>           <execution>
>
>             <phase>package</phase>
>
>             <goals>
>
>               <goal>single</goal>
>
>             </goals>
>
>           </execution>
>
>         </executions>
>
>                                 </plugin>
>
>
>
>
>
> Any ideas what I'm doing wrong? I'm sure it's something really simple I've
> overlooked. If I don't make this a standalone dependency, and simply use
> 'mvn install:install-file -Dfile=sqljdbc4.jar
> -DgroupId=com.microsoft.sqlserver -DartifactId=sqljdbc4 -Dversion=4.0
> -Dpackaging=jar ', then everything works fine.
>
>
>
> Thanks,
>
>
>
> Matt
>
>
>
>

--001a1134a5e093df3404faa48e93--

