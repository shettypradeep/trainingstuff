From users-return-136339-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue May  6 10:54:35 2014
Return-Path: <users-return-136339-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 50B0111BB6
	for <apmail-maven-users-archive@www.apache.org>; Tue,  6 May 2014 10:54:35 +0000 (UTC)
Received: (qmail 72451 invoked by uid 500); 6 May 2014 10:54:14 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 72384 invoked by uid 500); 6 May 2014 10:54:13 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 72372 invoked by uid 99); 6 May 2014 10:54:13 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 06 May 2014 10:54:13 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of anders.g.hammar@gmail.com designates 74.125.82.176 as permitted sender)
Received: from [74.125.82.176] (HELO mail-we0-f176.google.com) (74.125.82.176)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 06 May 2014 10:54:08 +0000
Received: by mail-we0-f176.google.com with SMTP id q59so6338831wes.21
        for <users@maven.apache.org>; Tue, 06 May 2014 03:53:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=lIobZGZ43geqUcM56nmtniT2DK1J5ZDVaT/efsjGrLo=;
        b=d4Dii0+En+S49+prdzDNC8eJ4WwN+DNxAQXsOx2rsztcppmq7lmISVQnOGtn6MxnwT
         6mGYOmCx30EOMHsVOjteW6OwcnJdNxsw+9rMOjnldRmh/mEiNMMjAjbPC0ioaF9tUo3c
         OvzO6f1Cb4hq5YWSPiF7EssDcfoiZ+9wt90DyuK6S3i1ZWUthUN8Dx44J8kZtbg/4GAA
         uz8vVYpaB2e/wu+zWvuDbXWaxP5CH6x2UDeKvtkBVeah+jE+bSvArB4afCNck5jL218w
         3k/WUiANPEWP1zSd8QM3Pu1jGcWQHTs7W28NqFjGkVO+a8VwISGhw4p3zJ/owr13wgFr
         1XEg==
MIME-Version: 1.0
X-Received: by 10.180.89.1 with SMTP id bk1mr1862810wib.35.1399373627591; Tue,
 06 May 2014 03:53:47 -0700 (PDT)
Sender: anders.g.hammar@gmail.com
Received: by 10.194.200.162 with HTTP; Tue, 6 May 2014 03:53:47 -0700 (PDT)
In-Reply-To: <5368B651.2010205@abacus.ch>
References: <CAPCjjnFMA33p+MbvbM98Zd-M002c8--Phz=qP43KPBFYA933zw@mail.gmail.com>
	<CADVp3v_v6FY5EdGfp_YpN_W4v7XPgjbiHdZwCye5zFBfw6VQ3Q@mail.gmail.com>
	<CAPCjjnHJefP9Y_PvO7tgQCWfq+YXASBSqtKRXbqkSFRgoNKyng@mail.gmail.com>
	<5368884B.1050400@landrus.de>
	<CAPCjjnETY1RrbreWUDt6tWAS_nj=vR0sMFTZqkyC0mm+FSJHMg@mail.gmail.com>
	<5368B651.2010205@abacus.ch>
Date: Tue, 6 May 2014 12:53:47 +0200
X-Google-Sender-Auth: YET1RZIZPuORQg0yoiK-Y4xzyr4
Message-ID: <CAKDUN1tDrJ=var=u=jA8ry3FBiA2rR3hQ_t4mjBm=ijea8uJZA@mail.gmail.com>
Subject: Re: use separate mirrors for project dendencies and plugin
 dependencies ??
From: Anders Hammar <anders@hammar.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=f46d04447f85fb133104f8b90fb8
X-Virus-Checked: Checked by ClamAV on apache.org

--f46d04447f85fb133104f8b90fb8
Content-Type: text/plain; charset=UTF-8

>
> Presumably you are trying to separate artifacts used by plugins during
> your build (where you might use e.g. GPL licensed modules) from artifacts
> used as dependencies in your project proper (where using that same GPL
> licensed modules would make your legal department scream) by separating the
> repositories used to provide them.
>
> As far as I know/understand all artifacts are downloaded to the same local
> cache repository (~/.m2/repository), regardless of whether they were
> required by some plugin or as a dependency of your project.
>
> This makes them available for both purposes and thus obliterates all your
> efforts of keeping them separate.
>
> Maven Masters: Please correct me if I'm wrong.
>

I don't think this is correct with Maven 3. Maven 3 uses Aether which AFAIK
keeps the repository id for the artifact to verify from where it was
downloaded. Haven't verified for this use case though.

So, using Maven 3 it should be possible to specify one repository
declaration for your deps and one pluginRepository declaration (with a
different repo id) for your plugins (incl deps). If you msut use mirror
declarations, I would use this for the deps and add exclusions (using '!')
for any pluginRepository.

/Anders


>
> Cheers,
> Wolf
>
>
>>
>>
>> On Mon, May 5, 2014 at 11:59 PM, Christian Domsch <mail@landrus.de>
>> wrote:
>>
>>  Hi Dan,
>>>
>>> Did you consider using nexus? There you can setup any kind of strange
>>> repo
>>> setup your mind can come up with ;-) For your case, create one repo for
>>> your project stuff and one repo for your plugin stuff. Create a group for
>>> both for easy access and control access by authorization...
>>>
>>> Christian
>>>
>>>
>>> On 06.05.2014 06:29, Dan Tran wrote:
>>>
>>>  Thanks Barrie,
>>>>
>>>> Will see what I can can do.
>>>>
>>>>
>>>> On Mon, May 5, 2014 at 5:04 PM, Barrie Treloar <baerrach@gmail.com>
>>>> wrote:
>>>>
>>>>   On 6 May 2014 09:21, Dan Tran <dantran@gmail.com> wrote:
>>>>
>>>>>   for legal purpose ( btw, please dont drill me here), I would like to
>>>>> use
>>>>>
>>>>>> one mirror as a gate way for all of of my project dependencies,and
>>>>>>
>>>>>>  another
>>>>>
>>>>>  mirror as a gate way for all of my plugins and their dependencies
>>>>>>
>>>>>>
>>>>>> is it possible? Posting a settings.xml config here is very much
>>>>>>
>>>>>>  appreciated
>>>>>
>>>>>
>>>>> Having not done this, here is some more insane advice.
>>>>>
>>>>> I'd use three.
>>>>> One proxy to proxy the other two proxies.
>>>>> All developers point to the master proxy.
>>>>> You can then configure the master proxy to refer to the project
>>>>> dependencies proxy and another for plugins dependencies proxy.
>>>>>
>>>>> You might need a more sophisticated maven repository manager that you
>>>>> can
>>>>> restrict what is allowed in the proxies (i.e. it just doesn't go and
>>>>> grab
>>>>> stuff for you).
>>>>>
>>>>> You're going to have to do a lot of fiddling to get this to work.
>>>>> I'm not convinced it is going to give you what legal thinks it will...
>>>>>
>>>>> If you could write up what you tried and whether it worked it would be
>>>>> helpful for anyone else attempting the same thing...
>>>>>
>>>>>
>>>>>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--f46d04447f85fb133104f8b90fb8--

