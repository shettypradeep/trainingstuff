From users-return-136381-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri May 16 21:05:01 2014
Return-Path: <users-return-136381-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F18FA114ED
	for <apmail-maven-users-archive@www.apache.org>; Fri, 16 May 2014 21:05:01 +0000 (UTC)
Received: (qmail 85184 invoked by uid 500); 16 May 2014 20:39:53 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 81147 invoked by uid 500); 16 May 2014 20:39:50 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 26644 invoked by uid 99); 16 May 2014 20:24:57 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 16 May 2014 20:24:57 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of ctrueden.wisc@gmail.com designates 209.85.128.175 as permitted sender)
Received: from [209.85.128.175] (HELO mail-ve0-f175.google.com) (209.85.128.175)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 16 May 2014 20:24:48 +0000
Received: by mail-ve0-f175.google.com with SMTP id jw12so3676124veb.6
        for <users@maven.apache.org>; Fri, 16 May 2014 13:24:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date:message-id
         :subject:to:content-type;
        bh=DOBdvEuQ5M6IaU+UHEM7FSaPZHfbjfTmwYWLUJFcFrk=;
        b=D8rEfpajAf5ruWB2KUT7hz8fpNKJQnzbay797HoUljydZRYZkaHy7zx3YoydKAtJ1J
         ice5C3CCeq8BF2Zsmef+LTedLFGWFBlnK+SUe7PLAOL61kVeBgn218Nrs86I8oV1SfJr
         rvCMWSmslg8ETXR8cpaLgC+sE2mf667ihA/IzoGuhR+o7gGVw1CQT+HfuDEUJF1uSpz/
         wPg1wsjQhxnKBxKEqy+nnH6Hbv1oNXGWADSOhGqqni7pid4+mCDvmu6sEBfysgM71zhj
         2E+g38fyRCwz5MfY/g9hG2VwIFl7zPnukKOHj7ye9wXIJ8OITb/dBTg7OFZXDsfnH8ww
         HMyg==
X-Received: by 10.52.38.5 with SMTP id c5mr120967vdk.85.1400271865144; Fri, 16
 May 2014 13:24:25 -0700 (PDT)
MIME-Version: 1.0
Sender: ctrueden.wisc@gmail.com
Received: by 10.58.1.132 with HTTP; Fri, 16 May 2014 13:23:55 -0700 (PDT)
In-Reply-To: <CAMH6+az8EcyC9M2xP76wc9UAZeTZHXC9THPAPNw_K7aRaBJFiA@mail.gmail.com>
References: <CAMH6+az8EcyC9M2xP76wc9UAZeTZHXC9THPAPNw_K7aRaBJFiA@mail.gmail.com>
From: Curtis Rueden <ctrueden@wisc.edu>
Date: Fri, 16 May 2014 15:23:55 -0500
X-Google-Sender-Auth: oZjRXeFtU4YCTmpNz8INo04rDxo
Message-ID: <CADN69y=27oAmgmWTy0j9jU2ZD95jtB5LLm0aFihh4B1eKsMcfA@mail.gmail.com>
Subject: Re: Sharing of values across dependant projects?
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=bcaec51d25be1c6c9704f98a3330
X-Virus-Checked: Checked by ClamAV on apache.org

--bcaec51d25be1c6c9704f98a3330
Content-Type: text/plain; charset=UTF-8

Hi James,

> I have two projects - A and B. B depends on A.
>
> A is built with a number (call it a build number). B needs to which number
> is in A at the time B builds.
>
> Any ideas how to achieve this without any human intervention?

For B to query A at *runtime* of B: embed your build numbers in the JAR
manifest.

With the buildnumber-maven-plugin, it's something like this:
https://github.com/scijava/pom-scijava/blob/69b3520e486b2a3d65636833efe230b00f3ea78f/pom.xml#L680
And this:
https://github.com/scijava/pom-scijava/blob/69b3520e486b2a3d65636833efe230b00f3ea78f/pom.xml#L567

Then you can extract the version information out the manifest using Java's
built-in API:
http://docs.oracle.com/javase/7/docs/api/java/util/jar/JarFile.html#getManifest()
http://docs.oracle.com/javase/7/docs/api/index.html?java/util/jar/Manifest.html

To query A at B's *build* time as you request -- i.e., for your Jenkins job
that builds B to query the version of A, to decide whether to even build --
you could use the Jenkins Groovy plugin with the "Poll with a Groovy
script" ScriptTrigger that checks whether the build number changed since
the last build, using the above approach...

But is there some reason it's not good enough to simply have B's build be a
downstream job of A's build?

Regards,
Curtis


On Fri, May 9, 2014 at 9:02 AM, James Green <james.mk.green@gmail.com>wrote:

> I have two projects - A and B. B depends on A.
>
> A is built with a number (call it a build number). B needs to which number
> is in A at the time B builds.
>
> Any ideas how to achieve this without any human intervention?
>
> FWIW the use case here is that A is software distributed by B (a WAR
> archive). A queries B for an updated build number, thus implementing
> "automatic updates". I'm trying to automate the setting of this number
> across the two projects but I've drawn a blank inside Jenkins for the
> moment.
>
> James
>

--bcaec51d25be1c6c9704f98a3330--

