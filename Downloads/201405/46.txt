From users-return-136453-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue May 27 05:51:38 2014
Return-Path: <users-return-136453-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5165A102FD
	for <apmail-maven-users-archive@www.apache.org>; Tue, 27 May 2014 05:51:38 +0000 (UTC)
Received: (qmail 75328 invoked by uid 500); 27 May 2014 05:51:36 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 75238 invoked by uid 500); 27 May 2014 05:51:36 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 75229 invoked by uid 99); 27 May 2014 05:51:36 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 27 May 2014 05:51:36 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS,WEIRD_PORT
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of dantran@gmail.com designates 74.125.82.182 as permitted sender)
Received: from [74.125.82.182] (HELO mail-we0-f182.google.com) (74.125.82.182)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 27 May 2014 05:51:32 +0000
Received: by mail-we0-f182.google.com with SMTP id t60so9014915wes.13
        for <users@maven.apache.org>; Mon, 26 May 2014 22:51:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=3skUJptci6Dx7Br53uOFsp0zvy8zw4OzQBevtRsLlzU=;
        b=EmU5PHEYx/RdlYMnNxH3WNsijqBw7fDM1PUflgLXRbz/PT0FOlTABxqj7FGKRynhHc
         Gv+7OC71x+deoESxJkUXbdFtUSW1yhoU+VfgJ/C6SQjZtB1JZKpBkJ7kUEuHJqQIk2R6
         8ivgkYXMwQ6CaC2p/ZbsQ5lU++aLD84r7IelvcekR5rHByLLQowUqV4mRPE1AwQRbmm+
         igb+RbT0wtFDRil3bhmaWDsInGi5aU8v1Efg5Nf/3Yda6mdemkPYzXEVQl5Vf3kNpH7x
         PzqmVSqRefagstytBTBHWt26pMzgJke7iF1RlS65PfsMkxyCNg1qgXSaYgrDCpVtkI/t
         6abw==
MIME-Version: 1.0
X-Received: by 10.194.157.226 with SMTP id wp2mr36144181wjb.58.1401169871541;
 Mon, 26 May 2014 22:51:11 -0700 (PDT)
Received: by 10.194.137.12 with HTTP; Mon, 26 May 2014 22:51:11 -0700 (PDT)
In-Reply-To: <CAKDUN1t5-UFYmHS8DBQhLyTxLtwk9P5DrBVhn+J2Jrt+OVtbug@mail.gmail.com>
References: <CAPCjjnFMA33p+MbvbM98Zd-M002c8--Phz=qP43KPBFYA933zw@mail.gmail.com>
	<CADVp3v_v6FY5EdGfp_YpN_W4v7XPgjbiHdZwCye5zFBfw6VQ3Q@mail.gmail.com>
	<CAPCjjnHJefP9Y_PvO7tgQCWfq+YXASBSqtKRXbqkSFRgoNKyng@mail.gmail.com>
	<5368884B.1050400@landrus.de>
	<CAPCjjnETY1RrbreWUDt6tWAS_nj=vR0sMFTZqkyC0mm+FSJHMg@mail.gmail.com>
	<5368B651.2010205@abacus.ch>
	<CAKDUN1tDrJ=var=u=jA8ry3FBiA2rR3hQ_t4mjBm=ijea8uJZA@mail.gmail.com>
	<CADVp3v8Rrx0WpaJCjDwRkGoeShevHj90k1T=p7fxRYeH7j7vAw@mail.gmail.com>
	<CAPCjjnEr0PuaQrdtUU+m_CtPqY8ch7i=xJw1f9JyUvQw881_eQ@mail.gmail.com>
	<CAKDUN1sHQU57DRmkZfohK43iNGJPNqur4UCnkg9Fm9Oo26H7_A@mail.gmail.com>
	<CAPCjjnGNjpCXnvM1h8SbGSZn0h3WSJ12ZDoufUMWNN6MKWq4xg@mail.gmail.com>
	<CAKDUN1t5-UFYmHS8DBQhLyTxLtwk9P5DrBVhn+J2Jrt+OVtbug@mail.gmail.com>
Date: Mon, 26 May 2014 22:51:11 -0700
Message-ID: <CAPCjjnHC3Pz=CiWyK17UU8ZjqJvzoXWxB0opkreet2a2xAyiyA@mail.gmail.com>
Subject: Re: use separate mirrors for project dendencies and plugin
 dependencies ??
From: Dan Tran <dantran@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e0122f548769c7d04fa5b484d
X-Virus-Checked: Checked by ClamAV on apache.org

--089e0122f548769c7d04fa5b484d
Content-Type: text/plain; charset=UTF-8

Hi Ander

that makes sense

now i only have

 <mirrors>
    <mirror>
      <id>product-repo</id>
      <mirrorOf>*,!plugin-central</mirrorOf>
      <name>Internal Maven Repository Manager</name>
      <url>http://repos.xxx.com:8081/nexus/content/groups/public</url>
    </mirror>
  </mirrors>


Also, do i need to redefine 'central'  it looks redundant to me

Thanks

-D



On Mon, May 26, 2014 at 10:34 PM, Anders Hammar <anders@hammar.net> wrote:

> For my solution on this topic I didn't declare a mirror for
> 'plugin-central', i.e. I didn't have the 'plugin-repo' mirror declaration.
> I does not add anything as it is only a mirror for one repo.
>
> /Anders
>
>
> On Sun, May 25, 2014 at 3:00 AM, Dan Tran <dantran@gmail.com> wrote:
>
> > I got some thing working
> >
> > 1. at my repo manager, create a proxy, called plugin-central, to host
> > another central.maven.org/maven2
> > 2. reconfigure my global settings.xml with the following contents. Please
> > help to review this content
> >
> >   <mirrors>
> >     <mirror>
> >       <id>product-repo</id>
> >       <mirrorOf>*,!plugin-central</mirrorOf>
> >       <name>Internal Maven Repository Manager</name>
> >       <url>http://repos.xxx.com:8081/nexus/content/groups/public</url>
> >     </mirror>
> >     <mirror>
> >       <id>plugin-repo</id>
> >       <mirrorOf>plugin-central</mirrorOf>
> >       <name>Internal Maven Repository Manager for plugin and its
> transitive
> > dependencies</name>
> >       <url>http://repos.xxxx.com:8081/nexus/content/groups/plugin-public
> > </url>
> >     </mirror>
> >   </mirrors>
> >
> >   <profiles>
> >     <profile>
> >       <id>redefine-default-repositories</id>
> >       <repositories>
> >         <repository>
> >           <!-- do we really need this?? since it is mirrored any way -->
> >           <id>central</id>
> >           <url>http://central</url>
> >           <releases><enabled>true</enabled></releases>
> >           <snapshots><enabled>true</enabled></snapshots>
> >         </repository>
> >       </repositories>
> >      <pluginRepositories>
> >         <!-- this allow use to separate product and plugin dependencies
> > into separate mirrors/proxy -->
> >         <pluginRepository>
> >           <id>plugin-central</id> <!--must be first in list -->
> >           <url>http://central</url>
> >           <releases><enabled>true</enabled></releases>
> >           <snapshots><enabled>true</enabled></snapshots>
> >         </pluginRepository>
> >         <!-- plugin download should never get here since 'central'
> already
> > cover by another proxy in plugin-central mirror-->
> >         <pluginRepository>
> >           <id>central</id>
> >           <url>http://central</url>
> >           <releases><enabled>true</enabled></releases>
> >           <snapshots><enabled>true</enabled></snapshots>
> >         </pluginRepository>
> >       </pluginRepositories>
> >     </profile>
> >   </profiles>
> >
> >   <activeProfiles>
> >     <activeProfile>redefine-default-repositories</activeProfile>
> >   </activeProfiles>
> >
> >
> > Thank you every one for participate in this discussion, specially Anders
> > for leading to this solution
> >
> >
> > If you have anything you want to add please chime in
> >
> >
> > -Dan
> >
> >
> >
> > On Sat, May 24, 2014 at 1:19 AM, Anders Hammar <anders@hammar.net>
> wrote:
> >
> > > It will if you use the same id, ie 'central'.
> > >
> > > /Anders (mobile)
> > > Den 24 maj 2014 09:36 skrev "Dan Tran" <dantran@gmail.com>:
> > >
> > > > Anders' suggestion sounds very logical
> > > >
> > > > however, i found this at super pom
> > > >
> > > >   <repositories>
> > > >     <repository>
> > > >       <id>central</id>
> > > >       <name>Central Repository</name>
> > > >       <url>http://repo.maven.apache.org/maven2</url>
> > > >       <layout>default</layout>
> > > >       <snapshots>
> > > >         <enabled>false</enabled>
> > > >       </snapshots>
> > > >     </repository>
> > > >   </repositories>
> > > >
> > > >   <pluginRepositories>
> > > >     <pluginRepository>
> > > >       <id>central</id>
> > > >       <name>Central Repository</name>
> > > >       <url>http://repo.maven.apache.org/maven2</url>
> > > >       <layout>default</layout>
> > > >       <snapshots>
> > > >         <enabled>false</enabled>
> > > >       </snapshots>
> > > >       <releases>
> > > >         <updatePolicy>never</updatePolicy>
> > > >       </releases>
> > > >     </pluginRepository>
> > > >   </pluginRepositories>
> > > >
> > > > Is there a way to disable/clear out the super pom pluginRepositories?
> > > > If I add my own pluginRepositories, will it override the super pom
> > > > one?
> > > >
> > > >
> > > > Thanks
> > > >
> > > > Dan
> > > >
> > > >
> > > >
> > > >
> > > > On Tue, May 6, 2014 at 6:20 AM, Barrie Treloar <baerrach@gmail.com>
> > > wrote:
> > > >
> > > > > On 6 May 2014 20:23, Anders Hammar <anders@hammar.net> wrote:
> > > > >
> > > > > > >
> > > > > > > Presumably you are trying to separate artifacts used by plugins
> > > > during
> > > > > > > your build (where you might use e.g. GPL licensed modules) from
> > > > > artifacts
> > > > > > > used as dependencies in your project proper (where using that
> > same
> > > > GPL
> > > > > > > licensed modules would make your legal department scream) by
> > > > separating
> > > > > > the
> > > > > > > repositories used to provide them.
> > > > > > >
> > > > > > > As far as I know/understand all artifacts are downloaded to the
> > > same
> > > > > > local
> > > > > > > cache repository (~/.m2/repository), regardless of whether they
> > > were
> > > > > > > required by some plugin or as a dependency of your project.
> > > > > > >
> > > > > > > This makes them available for both purposes and thus
> obliterates
> > > all
> > > > > your
> > > > > > > efforts of keeping them separate.
> > > > > > >
> > > > > > > Maven Masters: Please correct me if I'm wrong.
> > > > > > >
> > > > > >
> > > > > > I don't think this is correct with Maven 3. Maven 3 uses Aether
> > which
> > > > > AFAIK
> > > > > > keeps the repository id for the artifact to verify from where it
> > was
> > > > > > downloaded. Haven't verified for this use case though.
> > > > > >
> > > > > > So, using Maven 3 it should be possible to specify one repository
> > > > > > declaration for your deps and one pluginRepository declaration
> > (with
> > > a
> > > > > > different repo id) for your plugins (incl deps). If you msut use
> > > mirror
> > > > > > declarations, I would use this for the deps and add exclusions
> > (using
> > > > > '!')
> > > > > > for any pluginRepository.
> > > > > >
> > > > > > /Anders
> > > > >
> > > > >
> > > > > I don't remember what happens for duplicates.
> > > > > I think it used to complain that the artifact doesn't exist (if the
> > one
> > > > it
> > > > > downloaded from is not available, even though its available
> > elsewhere).
> > > > >
> > > > > The GPL example isn't a good one, as the output of running GPL is
> not
> > > GPL
> > > > > itself.
> > > > >
> > > > > I think Nexus allows you to restrict things by licence so that you
> > can
> > > > > curate what is available in your repository manager. You'd have to
> > look
> > > > at
> > > > > the docs to find out.
> > > > >
> > > >
> > >
> >
>

--089e0122f548769c7d04fa5b484d--

