From users-return-137191-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Sep  3 18:07:17 2014
Return-Path: <users-return-137191-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9BC2A11CFC
	for <apmail-maven-users-archive@www.apache.org>; Wed,  3 Sep 2014 18:07:17 +0000 (UTC)
Received: (qmail 4912 invoked by uid 500); 3 Sep 2014 18:07:12 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 4829 invoked by uid 500); 3 Sep 2014 18:07:12 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 4818 invoked by uid 99); 3 Sep 2014 18:07:12 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 03 Sep 2014 18:07:12 +0000
X-ASF-Spam-Status: No, hits=2.2 required=5.0
	tests=HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of Brian.Trezise@inin.com designates 209.43.1.217 as permitted sender)
Received: from [209.43.1.217] (HELO smtp.inin.com) (209.43.1.217)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 03 Sep 2014 18:06:45 +0000
Received: from MAILDB1.i3domain.inin.com ([fe80::fd8e:babe:939b:e470]) by
 Hub2.i3domain.inin.com ([fe80::4c6e:6495:5354:ecfa%10]) with mapi id
 14.03.0195.001; Wed, 3 Sep 2014 14:06:40 -0400
From: "Trezise, Brian" <Brian.Trezise@inin.com>
To: "users@maven.apache.org" <users@maven.apache.org>
Subject: Need file from src/main/resources in generate-sources phase for
 annotation processor config
Thread-Topic: Need file from src/main/resources in generate-sources phase
 for annotation processor config
Thread-Index: AQHPx6HOCsKlDfI2nEqW/nw4GpMTCg==
Date: Wed, 3 Sep 2014 18:06:39 +0000
Message-ID: <D02CD0ED.34C5%brian.trezise@inin.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach:
X-MS-TNEF-Correlator:
x-originating-ip: [172.17.49.95]
Content-Type: multipart/alternative;
	boundary="_000_D02CD0ED34C5briantreziseinincom_"
MIME-Version: 1.0
X-Virus-Checked: Checked by ClamAV on apache.org

--_000_D02CD0ED34C5briantreziseinincom_
Content-Type: text/plain; charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable

I posted this question on StackOverflow but I=92m stuck and haven=92t been =
getting much response so I decided to go to the =93source=94 as it were.
Here=92s a link to the question on SO, if you prefer to answer there (helpf=
ul answers will get up-voted, best answer accepted):
http://stackoverflow.com/questions/25645944/need-file-from-src-main-resourc=
es-in-generate-sources-phase-for-annotation-proce

The question:
I have an annotation processor that I need to give some configuration to te=
ll it a few details about how I want it to generate source code.  I spent a=
 good deal of time trying to understand why the file was sitting in target/=
classes after the build, but I was getting an exception during annotation p=
rocessing stating that the file did not, in fact, exist.

After much digging I finally figured out why the file (stored in `src/main/=
resources/config`) isn't getting copied over to `target/classes/config` for=
 my annotation processor to read - `generate-sources` happens before `proce=
ss-resources` in the build lifecycle, so the file isn't getting copied over=
 in time for the annotation processor to see it during its run. (maven buil=
d lifecycle reference: http://maven.apache.org/ref/3.2.2/maven-core/lifecyc=
les.html)

Here's a high level overview of what I'm trying to do:

I have a jar that I've built that processes annotations and generates inter=
face classes from the information in the annotations to base a client api o=
ff of.  The idea is that including that jar as a compile-time dependency sh=
ould automatically generate this code for any project that uses these annot=
ations (with as little-as-possible additional configuration in the client p=
roject's pom.xml).

How do I go about either:

 1. Getting (at a minimum) the config.xml portion of process-resources to h=
appen before generate-sources
 2. Adding the file to the classpath of the annotation processor in some ot=
her way (we don't need this file in the output archive, so this might be be=
tter)

I would prefer not to write a whole maven plugin for this if possible.

Here are the relevant parts of the `<build>` portion of my client pom:

    <build>
        <finalName>OurApp</finalName>
        <resources>
            <resource>
                <!-- My config.xml file is located here -->
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <includes>
                    <include>*.*</include>
                </includes>
                <excludes><exclude>${project.build.directory}/generated-sou=
rces/**</exclude></excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Omit Annotation Processor lib from the compilation phase b=
ecause the code generated is destined for another, separate jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <executions>
             <execution>
               <id>annotation-processing</id>
               <phase>generate-sources</phase>
               <goals>
                 <goal>compile</goal>
               </goals>
               <configuration>
                 <proc>only</proc>
               </configuration>
             </execution>
                  <!-- Compile the rest of the code in the normal compile p=
hase -->
             <execution>
               <id>compile-without-generated-source</id>
               <phase>compile</phase>
               <goals>
                 <goal>compile</goal>
               </goals>
               <configuration>
                 <excludes><exclude>${project.build.directory}/generated-so=
urces/**</exclude></excludes>
                      <proc>none</proc>
                      <!-- http://jira.codehaus.org/browse/MCOMPILER-230 be=
cause this doesn't
                           work in the opposite direction (setting failOnEr=
ror in the other execution
                           and leaving the default top-level value alone) -=
->
                      <failOnError>true</failOnError>
               </configuration>
             </execution>
           </executions>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <proc>only</proc>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <!-- package generated client into its own SOURCE jar -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4.1</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>generated-client-source</descriptorR=
ef>
                    </descriptorRefs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.package</groupId>
                        <artifactId>our-api</artifactId>
                        <version>${our-api.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>client-source</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


Brian Trezise | Software Engineer
phone & fax +1.317.957.1806 | mobile +1.303.809.9782 | brian.trezise@inin.c=
om

Interactive Intelligence
Deliberately Innovative
www.inin.com<http://www.inin.com/>

--_000_D02CD0ED34C5briantreziseinincom_--

