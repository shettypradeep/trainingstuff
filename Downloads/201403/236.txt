From users-return-135923-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Mar 25 00:06:23 2014
Return-Path: <users-return-135923-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 04DF810F85
	for <apmail-maven-users-archive@www.apache.org>; Tue, 25 Mar 2014 00:06:23 +0000 (UTC)
Received: (qmail 3150 invoked by uid 500); 25 Mar 2014 00:06:19 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 3012 invoked by uid 500); 25 Mar 2014 00:06:19 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 3004 invoked by uid 99); 25 Mar 2014 00:06:18 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Mar 2014 00:06:18 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of henrik.gram@gmail.com designates 209.85.213.178 as permitted sender)
Received: from [209.85.213.178] (HELO mail-ig0-f178.google.com) (209.85.213.178)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Mar 2014 00:06:14 +0000
Received: by mail-ig0-f178.google.com with SMTP id uq10so294640igb.5
        for <users@maven.apache.org>; Mon, 24 Mar 2014 17:05:54 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :content-type;
        bh=89mFDLmq910P7tOMI4tkRTMH66k6h0uyDRi9fjIo0p4=;
        b=fAZPZpBWbGaeiRh4GbQ0sW9sd56la17Qfv+QG4IugYpV5awdR/jaDyK7nxvgl1mvrA
         mvZvs9FIABdDw83sZvmlXB/ACW9+jzef0a5jhjxwnyD4rVsu5j/9X1ho5UcZ38hnek3g
         2FsaE+ZRYv+IwITEOFrosExRmzqv4oSM7uIPEUVSaCoL/eHcW4EI1/BcwkPRHAnPW3kG
         Vb7s/mCQZ7xrTRSKGKYdXM8ksaai+4VsnT2nJFTapYdwUWf799+UqtNsD8Wp8uCf5fMN
         EsUuQuv59zURogqacYV5LzX58A+TFubi6VkhEk38zVTw5DMqxNJLS7Hg5Wy5RtTbX7Rf
         /6/Q==
X-Received: by 10.43.135.202 with SMTP id ih10mr54153650icc.22.1395705953896;
 Mon, 24 Mar 2014 17:05:53 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.50.93.69 with HTTP; Mon, 24 Mar 2014 17:05:33 -0700 (PDT)
In-Reply-To: <CA+nPnMw19L=myjyHv0Sxtp2OP=o9nsrxuQkWmarUHaV6cHkjcQ@mail.gmail.com>
References: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
 <CA+nPnMw19L=myjyHv0Sxtp2OP=o9nsrxuQkWmarUHaV6cHkjcQ@mail.gmail.com>
From: =?ISO-8859-1?Q?Henrik_=D8sterlund_Gram?= <henrik.gram@gmail.com>
Date: Tue, 25 Mar 2014 01:05:33 +0100
Message-ID: <CAMLk=nNW1OUnjKBtfpSFQUc_g7EmVWhXtg=kuFmKgmN35AnLnA@mail.gmail.com>
Subject: Re: properties that are not being resolved
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=bcaec51719cf97d11b04f5631dd9
X-Virus-Checked: Checked by ClamAV on apache.org

--bcaec51719cf97d11b04f5631dd9
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Thanks for the link.  It was quite informative, but I'm again a little
confused because it is stated in your explanation,
the <configuration> sections will have mojo-injected properties evaluated,
but that isn't the case in my example.  I was trying to have such
properties evaluated in a <envEntries> element inside a <configuration>
element for the ear plugin, but it would not work until I modified the
plugin to do an extra substitution itself.

Regards,
Henrik Gram

On Mon, Mar 24, 2014 at 10:38 PM, Stephen Connolly <
stephen.alan.connolly@gmail.com> wrote:

> Please read my answer to a similar question on Stack Overflow:
>
> http://stackoverflow.com/questions/14725197/reading-properties-file-from-=
pom-file-in-maven/14727072#14727072
>
>
> On 23 March 2014 21:36, Henrik =D8sterlund Gram <henrik.gram@gmail.com>
> wrote:
>
> > I stumbled over some rather strange behaviour regarding properties.  It
> > seems properties generated by one plugin are not always resolved for
> other
> > plugins and I can't figure out why.
> >
> > I use a plugin to make info about the git branch available in the
> > properties so it can be passed to other plugins.  The particular plugin
> > does not seem important, but I've included it here for sake of
> > completeness:
> >
> > <plugin>
> > <groupId>com.code54.mojo</groupId>
> > <artifactId>buildversion-plugin</artifactId>
> >  <version>1.0.3</version>
> > <configuration>
> > <tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
> >  </configuration>
> > <executions>
> > <execution>
> >  <goals>
> > <goal>set-properties</goal>
> > </goals>
> >  </execution>
> > </executions>
> > </plugin>
> >
> > But when I referenced the properties set by the plugin in an env entry
> for
> > the maven ear plugin, the properties were not resolved at all:
> >
> > <envEntries>
> > <env-entry>
> > <description>Middleware build information</description>
> >  <env-entry-name>java:app/env/sw-version</env-entry-name>
> > <env-entry-type>java.lang.String</env-entry-type>
> >  <env-entry-value>${build-commit} @ ${build-tstamp} built on
> > ${maven.build.timestamp}</env-entry-value>
> > </env-entry>
> > </envEntries>
> >
> > Just to be sure, I used the latest maven and tried both version 2.9 of
> the
> > plugin and the latest from the repo with the same result.
> >
> > The only way I managed to fix this was to patch the maven-ear-plugin
> > itself, adding the following code in
> GenerateApplicationXmlMojo.execute():
> >
> > // Fix env variable substitutions
> > Properties props =3D project.getProperties();
> > PlexusConfiguration[] entries =3D envEntries.getChildren();
> > if (entries !=3D null) {
> >     for (PlexusConfiguration entry : entries) {
> >         if ("env-entry".equals(entry.getName())) {
> >             PlexusConfiguration[] envEntryChildren =3D entry.getChildre=
n();
> >             if (envEntryChildren !=3D null) {
> >                 for (PlexusConfiguration envEntryChild :
> envEntryChildren)
> > {
> >
> > envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(),
> > props));
> >                 }
> >             }
> >         }
> >     }
> > }
> >
> > Then it worked just fine, but I don't understand why this is necessary.
>  I
> > thought whatever called the plugin was supposed to have done the variab=
le
> > substitution already.  So clearly the properties were present at the ti=
me
> > of executing the plugin, but they werent being automaticly substituted.
> >
> > To add to the confusion, using ${project.version} in the env-entry-valu=
e
> > was resolved just fine, but just not the properties coming from another
> > plugin despite the plugins being run in the correct order.
> >
> > To further add to the confusion, I then used maven ant-run plugin,
> echoing
> > the values of properties which worked just fine (!)
> >
> > While I solved the problem for me by making a locally patched version o=
f
> > the ear plugin, it's not really a solution I favour, so I hope someone
> can
> > provide a better and more permanent fix.
> >
> > Regards,
> > Henrik Gram
> >
>

--bcaec51719cf97d11b04f5631dd9--

