From users-return-135666-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Mar  1 20:23:46 2014
Return-Path: <users-return-135666-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 5C46710AE1
	for <apmail-maven-users-archive@www.apache.org>; Sat,  1 Mar 2014 20:23:46 +0000 (UTC)
Received: (qmail 96016 invoked by uid 500); 1 Mar 2014 20:23:41 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 95870 invoked by uid 500); 1 Mar 2014 20:23:41 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 95862 invoked by uid 99); 1 Mar 2014 20:23:41 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 01 Mar 2014 20:23:41 +0000
X-ASF-Spam-Status: No, hits=-0.7 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of mcculls@gmail.com designates 209.85.212.178 as permitted sender)
Received: from [209.85.212.178] (HELO mail-wi0-f178.google.com) (209.85.212.178)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 01 Mar 2014 20:23:35 +0000
Received: by mail-wi0-f178.google.com with SMTP id d1so622154wiv.11
        for <users@maven.apache.org>; Sat, 01 Mar 2014 12:23:15 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=content-type:mime-version:subject:from:in-reply-to:date
         :content-transfer-encoding:message-id:references:to;
        bh=3YOiJ1VI8rr5LrBcQGZRpB0bO+yI1JYskJgM2PU4yhQ=;
        b=fAB0FAMcehSgiWlRnOeIzzUmJ4iLjTECogpcsDpTNaeLzzu1czrzSCGAjNwGv4Z/Ov
         xWH2d9FKc49byuH3i80DaylLM7SLUKPh28v7Gks2PU48tVfXoZ9mrG4YDr1Gn9VFR/Q5
         TT7gtbMvAZn9n5N7NLw0404f2TOOcpd2v9vJng5A7ZUtCiyPJD2fvzVaRiHLKASr6z/J
         tIKM3agcI/8e+cCPuhfi52KhouKWX5ipJtM/udCKW+Lz1jTDQWiyd7TZebkE2oW5iGMt
         NOEiovbz8fiHxJW8GjA2nTQZMk739eS/4KrU/nStC9qypC6OMqa046KSfciYQ7Syr0Oq
         tWaA==
X-Received: by 10.181.13.112 with SMTP id ex16mr8688861wid.23.1393705394858;
        Sat, 01 Mar 2014 12:23:14 -0800 (PST)
Received: from tulloch.home (host86-153-167-162.range86-153.btcentralplus.com. [86.153.167.162])
        by mx.google.com with ESMTPSA id ff7sm18246869wic.10.2014.03.01.12.23.13
        for <users@maven.apache.org>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Sat, 01 Mar 2014 12:23:14 -0800 (PST)
Content-Type: text/plain; charset=windows-1252
Mime-Version: 1.0 (Mac OS X Mail 7.2 \(1874\))
Subject: Re: Guice provision error with AbstractMavenLifecycleParticipant
From: Stuart McCulloch <mcculls@gmail.com>
In-Reply-To: <CAEBcyzqHw_S+OL0u5bYR_e+MYJT97eVd2j44hrUhX9nt8U88kA@mail.gmail.com>
Date: Sat, 1 Mar 2014 20:23:13 +0000
Content-Transfer-Encoding: quoted-printable
Message-Id: <EC1820CB-E6FC-4202-B6AB-06090103ADDA@gmail.com>
References: <CAEBcyzqFMx09wypuh4bXUd68FZ+TUegEnpMUs3ffje3DWS=eCg@mail.gmail.com> <3E4BAFCA-287A-42F4-BCF0-21B8B8B4FA79@gmail.com> <CAEBcyzqHw_S+OL0u5bYR_e+MYJT97eVd2j44hrUhX9nt8U88kA@mail.gmail.com>
To: Maven Users List <users@maven.apache.org>
X-Mailer: Apple Mail (2.1874)
X-Virus-Checked: Checked by ClamAV on apache.org

On 1 Mar 2014, at 19:12, William Ferguson =
<william.ferguson@xandar.com.au> wrote:

> Thanks for the exceptionally clear explanation Stuart.
>=20
> I don't think we can just avoid the exception with stubbed =
implementations
> of the Resolver because the the plugin doesn't use the Resolver =
directly.
> It asks for an Aether RepositorySystem:
>    @Requirement
>    private RepositorySystem repoSystem;
>=20
> which is what instantiates the VersionResolver.

I don=92t think this is an issue, just declaring a dummy component =
locally using @Component should satisfy the missing binding that leads =
to the original exception.

In other words: at the moment you have a broken dependency chain that =
stops Guice from creating an instance of the repository system - if you =
provide a dummy link in the form of a local @Component(hint=3D=93dummy") =
that implements VersionResolver then the chain will be complete from the =
perspective of the current plugin and the repository system can be =
created. Of course you can=92t then do much with it because it would be =
using the dummy resolver, but it would avoid the original exception at =
creation time and allow the IntelliJ pom processing to continue. Note =
you may also need to stub out other resolver components required by the =
repository system.

Of course as Manfred points out, if IntelliJ updated their bundled =
version of Maven to 3.1.x or later then that would also solve the =
problem and doesn=92t require any plugin changes.

> I'll have another look at maven-dependency-tree but I didn't see a =
clear
> path towards what we wanted.
>=20
> Could you shed some more light on:
>> Unfortunately adding a direct plugin dependency to the
> maven-aether-provider from 3.1.1 won't help
>> because Maven will filter out this dependency as being supplied from
> Maven core
>=20
> What's doing the filtering and why?

IIRC this is done in DefaultClassRealmManager from maven-core=85 the =
reason it filters out dependencies/packages explicitly exported by core =
is to avoid class consistency issues, otherwise you could end up with =
the same class being defined twice, once by the core class loader and =
once by a plugin=92s class loader. Such classes would then be =
incompatible as they were defined by different class loaders and =
couldn=92t then be used for sharing data, such as sharing repository =
information between core and a plugin.

> What would be need to make it not filter out a maven-core library that =
is a
> different version of the running Maven instance?

You can=92t without doing some complicated class loader hacks, this is a =
fundamental feature of Maven=92s plugin system.

> William
>=20
> On Fri, Feb 28, 2014 at 12:13 PM, Stuart McCulloch =
<mcculls@gmail.com>wrote:
>=20
>> On 28 Feb 2014, at 01:17, William Ferguson =
<william.ferguson@xandar.com.au>
>> wrote:
>>=20
>>> As part of the development of the android-maven-plugin we have need =
to
>> add
>>> in an AbstractMavenLifecycleParticipant so that we can modify the =
compile
>>> classpath to add artefacts that are contained within a project's
>>> dependencies. Igor provided a lot of the coaching on this.
>>>=20
>>> The build works fine. Does what is intended.
>>>=20
>>> But now, when you open a project in intelliJ13 that uses the
>>> android-maven-plugin, IntelliJ declares a problem with the POM that
>>> references our MavenLifecycleParticipant.
>>>=20
>>> What I'd like help with is:
>>> 1) Is this a problem with the plugin itself. Ie have we defined =
something
>>> incorrectly.
>>> 2) Is it just a problem with how IntelliJ is parsing a POM that =
declares
>>> the plugin.
>>>=20
>>> If it is (1), what do we need to do to fix it?
>>>=20
>>> However, I suspect it is (2) because similar error messages seem to =
occur
>>> when plugins designed for Maven 3.1 (and the switch to Eclipse =
Aether
>> from
>>> Sonatype Aether) are used in a Maven-3.0 environment. I'm thinking =
that
>>> maybe IntelliJ is using a Maven-3.0 core. But I'm really not sure =
and
>> would
>>> love some clarity from those who understand what is going on a bit
>> better.
>>> And if it is (2) is there anything we or IntelliJ can do to fix it?
>>>=20
>>> The plugin itself can be found at:
>>> https://github.com/jayway/maven-android-plugin
>>>=20
>>> A project showing the failure can be found at:
>>>=20
>> =
https://github.com/jayway/maven-android-plugin-samples/tree/master/morsefl=
ash/morseflash-app
>>>=20
>>> And the error message is (visible via flyover in the POM editor =
window or
>>> in idea.log):
>>=20
>> I can recreate the same exception on the command-line using the =
plugin
>> with Maven 3.0.5 (after I removed the 3.1.1 pre-req from the plugin's
>> pom.xml)
>>=20
>> The issue is that the plugin expects Maven core to supply an
>> implementation of org.eclipse.aether.impl.VersionResolver, namely
>> DefaultVersionResolver from maven-aether-provider.
>>=20
>> However in Maven 3.0.x the maven-aether-provider module only supplies =
an
>> implementation of org.sonatype.aether.impl.VersionResolver ... which =
is why
>> you see that exception :/
>>=20
>> Unfortunately adding a direct plugin dependency to the
>> maven-aether-provider from 3.1.1 won't help because Maven will filter =
out
>> this dependency as being supplied from Maven core
>>=20
>> If you want the plugin to work on both Maven 3.0.x and 3.1.x then =
you'll
>> either need to use an API common to both (like the shared
>> maven-dependency-tree component) or write two versions of the code =
that
>> talks to Aether and select the appropriate one at runtime using =
reflection.
>> But if you just want to avoid the exception when Intellij processes =
the
>> pom.xml then you could conceivably provide dummy/stubbed @Component
>> implementations of the Eclipse/Aether resolver, with the role set to =
a
>> non-default value such as "dummy" so that it doesn't interfere with =
the
>> default implementation provided in Maven 3.1.1
>>=20
>>> java.lang.RuntimeException: com.google.inject.ProvisionException:
>>> Guice provision errors:
>>>=20
>>> 1) No implementation for org.eclipse.aether.impl.VersionResolver was
>> bound.
>>> while locating =
org.eclipse.aether.internal.impl.DefaultRepositorySystem
>>> at
>> =
ClassRealm[extension>com.jayway.maven.plugins.android.generation2:android-=
maven-plugin:3.9.0-rc.1,
>>> parent: sun.misc.Launcher$AppClassLoader@39172e08]
>>> at
>> =
ClassRealm[extension>com.jayway.maven.plugins.android.generation2:android-=
maven-plugin:3.9.0-rc.1,
>>> parent: sun.misc.Launcher$AppClassLoader@39172e08]
>>> while locating org.eclipse.aether.RepositorySystem
>>> while locating
>>>=20
>> =
com.jayway.maven.plugins.android.phase_prebuild.AarMavenLifecycleParticipa=
nt
>>> at
>> =
ClassRealm[extension>com.jayway.maven.plugins.android.generation2:android-=
maven-plugin:3.9.0-rc.1,
>>> parent: sun.misc.Launcher$AppClassLoader@39172e08]
>>> at
>> =
ClassRealm[extension>com.jayway.maven.plugins.android.generation2:android-=
maven-plugin:3.9.0-rc.1,
>>> parent: sun.misc.Launcher$AppClassLoader@39172e08]
>>> while locating org.apache.maven.AbstractMavenLifecycleParticipant
>>> annotated with
>> @com.google.inject.name.Named(value=3DAarMavenLifecycleListener)
>>>=20
>>>=20
>>> We are tracking this at:
>>> https://code.google.com/p/maven-android-plugin/issues/detail?id=3D449
>>>=20
>>>=20
>>> Any help appreciated.
>>>=20
>>>=20
>>> William
>>=20
>>=20
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
>> For additional commands, e-mail: users-help@maven.apache.org
>>=20
>>=20


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


