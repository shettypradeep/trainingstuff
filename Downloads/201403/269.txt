From users-return-135921-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Mar 24 21:39:13 2014
Return-Path: <users-return-135921-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2FCE1108AA
	for <apmail-maven-users-archive@www.apache.org>; Mon, 24 Mar 2014 21:39:13 +0000 (UTC)
Received: (qmail 687 invoked by uid 500); 24 Mar 2014 21:39:08 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 540 invoked by uid 500); 24 Mar 2014 21:39:07 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 532 invoked by uid 99); 24 Mar 2014 21:39:07 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 21:39:07 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.160.52 as permitted sender)
Received: from [209.85.160.52] (HELO mail-pb0-f52.google.com) (209.85.160.52)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 21:39:02 +0000
Received: by mail-pb0-f52.google.com with SMTP id rr13so6045103pbb.39
        for <users@maven.apache.org>; Mon, 24 Mar 2014 14:38:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=sp4YBB6y66curP589s1SrXgOHSXck0Dzn8Jyca5A4qY=;
        b=cCkpjmAaGBILuWsad4DRNJe0Ut5E1OWbZ8aegauQhp+cDIpCbjdyf5jxbsKXfH8p//
         VO+wAoKpQJP0a8aJlG6wb6/MlwlifczphhKDfys0BJ3zSBqzvM07pdiR966urOMerpWP
         6wvKG1+MxWQw7ASXLcXPP/3sh/xW0mpE/bs/9DKN/iOgpCwIjMnwPkkQWiUGxT7gR845
         pyOHptwqRgHnEyVmgxpQGeu5XGOAR9Nk5NzB9v6ZgHwsy8d/Vx1pfv97h1ag7s05RtF1
         IoWJLl1XxKCDDjkXlj5LkSn9y1i70yy33wzCyHGB/N5fYCR5pdD+OaGwFdjyi/9WYXMx
         56Ig==
MIME-Version: 1.0
X-Received: by 10.68.197.99 with SMTP id it3mr74434315pbc.37.1395697120262;
 Mon, 24 Mar 2014 14:38:40 -0700 (PDT)
Received: by 10.68.201.167 with HTTP; Mon, 24 Mar 2014 14:38:40 -0700 (PDT)
In-Reply-To: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
References: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
Date: Mon, 24 Mar 2014 21:38:40 +0000
Message-ID: <CA+nPnMw19L=myjyHv0Sxtp2OP=o9nsrxuQkWmarUHaV6cHkjcQ@mail.gmail.com>
Subject: Re: properties that are not being resolved
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=e89a8ff1cb1811409b04f5610f58
X-Virus-Checked: Checked by ClamAV on apache.org

--e89a8ff1cb1811409b04f5610f58
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Please read my answer to a similar question on Stack Overflow:
http://stackoverflow.com/questions/14725197/reading-properties-file-from-po=
m-file-in-maven/14727072#14727072


On 23 March 2014 21:36, Henrik =D8sterlund Gram <henrik.gram@gmail.com> wro=
te:

> I stumbled over some rather strange behaviour regarding properties.  It
> seems properties generated by one plugin are not always resolved for othe=
r
> plugins and I can't figure out why.
>
> I use a plugin to make info about the git branch available in the
> properties so it can be passed to other plugins.  The particular plugin
> does not seem important, but I've included it here for sake of
> completeness:
>
> <plugin>
> <groupId>com.code54.mojo</groupId>
> <artifactId>buildversion-plugin</artifactId>
>  <version>1.0.3</version>
> <configuration>
> <tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
>  </configuration>
> <executions>
> <execution>
>  <goals>
> <goal>set-properties</goal>
> </goals>
>  </execution>
> </executions>
> </plugin>
>
> But when I referenced the properties set by the plugin in an env entry fo=
r
> the maven ear plugin, the properties were not resolved at all:
>
> <envEntries>
> <env-entry>
> <description>Middleware build information</description>
>  <env-entry-name>java:app/env/sw-version</env-entry-name>
> <env-entry-type>java.lang.String</env-entry-type>
>  <env-entry-value>${build-commit} @ ${build-tstamp} built on
> ${maven.build.timestamp}</env-entry-value>
> </env-entry>
> </envEntries>
>
> Just to be sure, I used the latest maven and tried both version 2.9 of th=
e
> plugin and the latest from the repo with the same result.
>
> The only way I managed to fix this was to patch the maven-ear-plugin
> itself, adding the following code in GenerateApplicationXmlMojo.execute()=
:
>
> // Fix env variable substitutions
> Properties props =3D project.getProperties();
> PlexusConfiguration[] entries =3D envEntries.getChildren();
> if (entries !=3D null) {
>     for (PlexusConfiguration entry : entries) {
>         if ("env-entry".equals(entry.getName())) {
>             PlexusConfiguration[] envEntryChildren =3D entry.getChildren(=
);
>             if (envEntryChildren !=3D null) {
>                 for (PlexusConfiguration envEntryChild : envEntryChildren=
)
> {
>
> envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(),
> props));
>                 }
>             }
>         }
>     }
> }
>
> Then it worked just fine, but I don't understand why this is necessary.  =
I
> thought whatever called the plugin was supposed to have done the variable
> substitution already.  So clearly the properties were present at the time
> of executing the plugin, but they werent being automaticly substituted.
>
> To add to the confusion, using ${project.version} in the env-entry-value
> was resolved just fine, but just not the properties coming from another
> plugin despite the plugins being run in the correct order.
>
> To further add to the confusion, I then used maven ant-run plugin, echoin=
g
> the values of properties which worked just fine (!)
>
> While I solved the problem for me by making a locally patched version of
> the ear plugin, it's not really a solution I favour, so I hope someone ca=
n
> provide a better and more permanent fix.
>
> Regards,
> Henrik Gram
>

--e89a8ff1cb1811409b04f5610f58--

