From users-return-135926-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Mar 25 07:37:54 2014
Return-Path: <users-return-135926-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0C52E10DEC
	for <apmail-maven-users-archive@www.apache.org>; Tue, 25 Mar 2014 07:37:54 +0000 (UTC)
Received: (qmail 7762 invoked by uid 500); 25 Mar 2014 07:37:50 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 7248 invoked by uid 500); 25 Mar 2014 07:37:49 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 7240 invoked by uid 99); 25 Mar 2014 07:37:48 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Mar 2014 07:37:48 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.160.46 as permitted sender)
Received: from [209.85.160.46] (HELO mail-pb0-f46.google.com) (209.85.160.46)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Mar 2014 07:37:43 +0000
Received: by mail-pb0-f46.google.com with SMTP id rq2so81484pbb.33
        for <users@maven.apache.org>; Tue, 25 Mar 2014 00:37:21 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=PKMaMBH1SWjyxq3LskhyaQqmH+c904LbuwMgpVANafM=;
        b=gH1kiePSSIaxb7j7a2RFgRO+MJbl1rDBWBmUjvk+mqi2r/mu1/xPhtV/9f66akjx3c
         XW98aejW9v72jgog2FMPwzL6DgxSa7aOQ9KFt/Q3AxnBie0OKwtEfivEfBNJU5/jxGTr
         1V6F0Y7obnzUvv5PfT5OkD1WCP2U8jqJtMUCuSNhck4w7jGfL8eff4fpROKR5EJTKWH9
         Mj4HDoPdjBN+9FVf5P7ifRf9DOGIkgW6XRIKJu4wa1GXYJIwbS2H5/mGkpedlL2BMz7J
         GopI2Aw2QGpfoI0sPTAGxr8ucE+aBbYZQ6MGMOp05c9Va4anBB2vPYP4R3s3qIRj//53
         aQ7A==
MIME-Version: 1.0
X-Received: by 10.68.229.106 with SMTP id sp10mr77683750pbc.23.1395733041026;
 Tue, 25 Mar 2014 00:37:21 -0700 (PDT)
Received: by 10.68.201.167 with HTTP; Tue, 25 Mar 2014 00:37:20 -0700 (PDT)
In-Reply-To: <CAMLk=nNW1OUnjKBtfpSFQUc_g7EmVWhXtg=kuFmKgmN35AnLnA@mail.gmail.com>
References: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
	<CA+nPnMw19L=myjyHv0Sxtp2OP=o9nsrxuQkWmarUHaV6cHkjcQ@mail.gmail.com>
	<CAMLk=nNW1OUnjKBtfpSFQUc_g7EmVWhXtg=kuFmKgmN35AnLnA@mail.gmail.com>
Date: Tue, 25 Mar 2014 07:37:20 +0000
Message-ID: <CA+nPnMyP5yTq73dd=RP-juZNcJdH6PWExUdgmXG1nDCBNgn3=g@mail.gmail.com>
Subject: Re: properties that are not being resolved
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=047d7b162c091c9cc204f5696c48
X-Virus-Checked: Checked by ClamAV on apache.org

--047d7b162c091c9cc204f5696c48
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

The File vs String types note is the relevant part IIRC... It's not just
file vs string though

On Tuesday, 25 March 2014, Henrik =D8sterlund Gram <henrik.gram@gmail.com>
wrote:

> Thanks for the link.  It was quite informative, but I'm again a little
> confused because it is stated in your explanation,
> the <configuration> sections will have mojo-injected properties evaluated=
,
> but that isn't the case in my example.  I was trying to have such
> properties evaluated in a <envEntries> element inside a <configuration>
> element for the ear plugin, but it would not work until I modified the
> plugin to do an extra substitution itself.
>
> Regards,
> Henrik Gram
>
> On Mon, Mar 24, 2014 at 10:38 PM, Stephen Connolly <
> stephen.alan.connolly@gmail.com> wrote:
>
> > Please read my answer to a similar question on Stack Overflow:
> >
> >
> http://stackoverflow.com/questions/14725197/reading-properties-file-from-=
pom-file-in-maven/14727072#14727072
> >
> >
> > On 23 March 2014 21:36, Henrik =D8sterlund Gram <henrik.gram@gmail.com>
> > wrote:
> >
> > > I stumbled over some rather strange behaviour regarding properties.  =
It
> > > seems properties generated by one plugin are not always resolved for
> > other
> > > plugins and I can't figure out why.
> > >
> > > I use a plugin to make info about the git branch available in the
> > > properties so it can be passed to other plugins.  The particular plug=
in
> > > does not seem important, but I've included it here for sake of
> > > completeness:
> > >
> > > <plugin>
> > > <groupId>com.code54.mojo</groupId>
> > > <artifactId>buildversion-plugin</artifactId>
> > >  <version>1.0.3</version>
> > > <configuration>
> > > <tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
> > >  </configuration>
> > > <executions>
> > > <execution>
> > >  <goals>
> > > <goal>set-properties</goal>
> > > </goals>
> > >  </execution>
> > > </executions>
> > > </plugin>
> > >
> > > But when I referenced the properties set by the plugin in an env entr=
y
> > for
> > > the maven ear plugin, the properties were not resolved at all:
> > >
> > > <envEntries>
> > > <env-entry>
> > > <description>Middleware build information</description>
> > >  <env-entry-name>java:app/env/sw-version</env-entry-name>
> > > <env-entry-type>java.lang.String</env-entry-type>
> > >  <env-entry-value>${build-commit} @ ${build-tstamp} built on
> > > ${maven.build.timestamp}</env-entry-value>
> > > </env-entry>
> > > </envEntries>
> > >
> > > Just to be sure, I used the latest maven and tried both version 2.9 o=
f
> > the
> > > plugin and the latest from the repo with the same result.
> > >
> > > The only way I managed to fix this was to patch the maven-ear-plugin
> > > itself, adding the following code in
> > GenerateApplicationXmlMojo.execute():
> > >
> > > // Fix env variable substitutions
> > > Properties props =3D project.getProperties();
> > > PlexusConfiguration[] entries =3D envEntries.getChildren();
> > > if (entries !=3D null) {
> > >     for (PlexusConfiguration entry : entries) {
> > >         if ("env-entry".equals(entry.getName())) {
> > >             PlexusConfiguration[] envEntryChildren =3D
> entry.getChildren();
> > >             if (envEntryChildren !=3D null) {
> > >                 for (PlexusConfiguration envEntryChild :
> > envEntryChildren)
> > > {
> > >
> > > envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(=
),
> > > props));
> > >                 }
> > >             }
> > >         }
> > >     }
> > > }
> > >
> > > Then it worked just fine, but I don't understand why this is necessar=
y.
> >  I
> > > thought whatever called the plugin was supposed to have done the
> variable
> > > substitution already.  So clearly the properties were present at the
> time
> > > of executing the plugin, but they werent being automaticly substitute=
d.
> > >
> > > To add to the confusion, using ${project.version} in the
> env-entry-value
> > > was resolved just fine, but just not the properties coming from anoth=
er
> > > plugin despite the plugins being run in the correct order.
> > >
> > > To further add to th



--=20
Sent from my phone

--047d7b162c091c9cc204f5696c48--

