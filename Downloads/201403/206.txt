From users-return-135900-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Mar 23 21:37:07 2014
Return-Path: <users-return-135900-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7879E1099D
	for <apmail-maven-users-archive@www.apache.org>; Sun, 23 Mar 2014 21:37:07 +0000 (UTC)
Received: (qmail 62077 invoked by uid 500); 23 Mar 2014 21:37:03 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 61928 invoked by uid 500); 23 Mar 2014 21:37:03 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 61916 invoked by uid 99); 23 Mar 2014 21:37:03 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 23 Mar 2014 21:37:03 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of henrik.gram@gmail.com designates 209.85.223.169 as permitted sender)
Received: from [209.85.223.169] (HELO mail-ie0-f169.google.com) (209.85.223.169)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 23 Mar 2014 21:36:56 +0000
Received: by mail-ie0-f169.google.com with SMTP id to1so4692183ieb.0
        for <users@maven.apache.org>; Sun, 23 Mar 2014 14:36:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:from:date:message-id:subject:to:content-type;
        bh=mChT3/y7LsXtkiZv4G7VI3N+Z2NOVHvHXI211/XlcP8=;
        b=fPsv9LaDlmFal+Bn0zxizC+yshEgjBU76EykvW1PQkrYV/Qr1crtLoSIhjAwbo5wUB
         +vWEaj0WKAZsyJblCCkYlP9g+eQ7dLpgcE5DbcbAV9soC08oo4+W+JENsUvY1sN5aqts
         hZCD3Clq23s9GLGEhv5i3o37FijoD3x4M/2EYG5PxwMtjLhQxsxN/LXvktuiC07H5f1h
         L1QU61Xju4pRgua4LkWDSE4AUKqRV2WaA2Ft7cvfMcJjzUYzb47Ujk/wW2/HOnenqlmR
         QER7V7ToNi7oHbjQAgkSgBrSdmyejHaQT68Tfzahsoub9oAlVxPmPDzZWrTzHuZFVXKM
         uRKQ==
X-Received: by 10.42.53.10 with SMTP id l10mr48693782icg.33.1395610595113;
 Sun, 23 Mar 2014 14:36:35 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.50.93.69 with HTTP; Sun, 23 Mar 2014 14:36:15 -0700 (PDT)
From: =?ISO-8859-1?Q?Henrik_=D8sterlund_Gram?= <henrik.gram@gmail.com>
Date: Sun, 23 Mar 2014 22:36:15 +0100
Message-ID: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
Subject: properties that are not being resolved
To: users@maven.apache.org
Content-Type: multipart/alternative; boundary=90e6ba614278c4431604f54ce962
X-Virus-Checked: Checked by ClamAV on apache.org

--90e6ba614278c4431604f54ce962
Content-Type: text/plain; charset=ISO-8859-1

I stumbled over some rather strange behaviour regarding properties.  It
seems properties generated by one plugin are not always resolved for other
plugins and I can't figure out why.

I use a plugin to make info about the git branch available in the
properties so it can be passed to other plugins.  The particular plugin
does not seem important, but I've included it here for sake of completeness:

<plugin>
<groupId>com.code54.mojo</groupId>
<artifactId>buildversion-plugin</artifactId>
 <version>1.0.3</version>
<configuration>
<tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
 </configuration>
<executions>
<execution>
 <goals>
<goal>set-properties</goal>
</goals>
 </execution>
</executions>
</plugin>

But when I referenced the properties set by the plugin in an env entry for
the maven ear plugin, the properties were not resolved at all:

<envEntries>
<env-entry>
<description>Middleware build information</description>
 <env-entry-name>java:app/env/sw-version</env-entry-name>
<env-entry-type>java.lang.String</env-entry-type>
 <env-entry-value>${build-commit} @ ${build-tstamp} built on
${maven.build.timestamp}</env-entry-value>
</env-entry>
</envEntries>

Just to be sure, I used the latest maven and tried both version 2.9 of the
plugin and the latest from the repo with the same result.

The only way I managed to fix this was to patch the maven-ear-plugin
itself, adding the following code in GenerateApplicationXmlMojo.execute():

// Fix env variable substitutions
Properties props = project.getProperties();
PlexusConfiguration[] entries = envEntries.getChildren();
if (entries != null) {
    for (PlexusConfiguration entry : entries) {
        if ("env-entry".equals(entry.getName())) {
            PlexusConfiguration[] envEntryChildren = entry.getChildren();
            if (envEntryChildren != null) {
                for (PlexusConfiguration envEntryChild : envEntryChildren) {

envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(),
props));
                }
            }
        }
    }
}

Then it worked just fine, but I don't understand why this is necessary.  I
thought whatever called the plugin was supposed to have done the variable
substitution already.  So clearly the properties were present at the time
of executing the plugin, but they werent being automaticly substituted.

To add to the confusion, using ${project.version} in the env-entry-value
was resolved just fine, but just not the properties coming from another
plugin despite the plugins being run in the correct order.

To further add to the confusion, I then used maven ant-run plugin, echoing
the values of properties which worked just fine (!)

While I solved the problem for me by making a locally patched version of
the ear plugin, it's not really a solution I favour, so I hope someone can
provide a better and more permanent fix.

Regards,
Henrik Gram

--90e6ba614278c4431604f54ce962--

