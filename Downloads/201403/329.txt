From users-return-135908-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Mar 24 08:05:14 2014
Return-Path: <users-return-135908-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E1D73105DE
	for <apmail-maven-users-archive@www.apache.org>; Mon, 24 Mar 2014 08:05:14 +0000 (UTC)
Received: (qmail 47184 invoked by uid 500); 24 Mar 2014 08:05:09 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 46160 invoked by uid 500); 24 Mar 2014 08:05:07 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 45479 invoked by uid 99); 24 Mar 2014 08:05:07 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 08:05:07 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of henrik.gram@gmail.com designates 209.85.223.176 as permitted sender)
Received: from [209.85.223.176] (HELO mail-ie0-f176.google.com) (209.85.223.176)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 08:05:01 +0000
Received: by mail-ie0-f176.google.com with SMTP id rd18so4977301iec.7
        for <users@maven.apache.org>; Mon, 24 Mar 2014 01:04:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :content-type;
        bh=7jeTq01L0jA4IZlmfBVv0X5Vf8YIwGEVQ4C5Dz10vtE=;
        b=XpeZ8POjNWPsE609uK7cer1mVXa1dDgNKxtsawTsgWXrM9xP0ip9zMSsqdqbJH6VG2
         I2Ip0K8fLIHl3z85yh7WDPZgs/lpsVKn5HfSQToiZfORXbM02vIc0nUrLVDmcdkTX1y9
         MroeLkA30xABfaDFQkQ3R9up6HR4LchktpZuszzY+5DoP1t/L/xxVNRxHlZYKKfe9kPu
         Si8VQDe4ewGXBwuqXTIt7mtPGb1SwDzAwO85kGpKKc5JbmyInjG5XTgmXTHclAgW0WlF
         0bNT18KIQ45Dd7uPFFor3o3nMJBNBUwxewM8E1SI2PbnDmS/YQ/UCuGBAwMi5rVy313G
         qv9Q==
X-Received: by 10.50.50.41 with SMTP id z9mr10312169ign.16.1395648280085; Mon,
 24 Mar 2014 01:04:40 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.50.93.69 with HTTP; Mon, 24 Mar 2014 01:04:19 -0700 (PDT)
In-Reply-To: <CANWgJS75c4JPWRStq9p+J21xVyWxgZq1q9fcqdkxLgv+UnwaVg@mail.gmail.com>
References: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
 <CANWgJS75c4JPWRStq9p+J21xVyWxgZq1q9fcqdkxLgv+UnwaVg@mail.gmail.com>
From: =?ISO-8859-1?Q?Henrik_=D8sterlund_Gram?= <henrik.gram@gmail.com>
Date: Mon, 24 Mar 2014 09:04:19 +0100
Message-ID: <CAMLk=nP2-5=Na+nHweV9wjPDS-NUFOij=vKMtgrc9fHzxGPqPQ@mail.gmail.com>
Subject: Re: properties that are not being resolved
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e011835daf749d204f555aff5
X-Virus-Checked: Checked by ClamAV on apache.org

--089e011835daf749d204f555aff5
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

The one at
http://mojo.codehaus.org/buildnumber-maven-plugin/create-mojo.html ?  It
states in the first couple of lines that it only works with subversion and
I'm using git.

Aside from that, I can't really see why it would make a difference; how
many ways are there to set properties?  I did establish that the properties
are indeed set as I can print them via the ant-run plugin and via the a
modified ear-plugin.



On Mon, Mar 24, 2014 at 8:28 AM, Baptiste Mathus <bmathus@batmat.net> wrote=
:

> Hi,
> Out of curiosity, why don't you use the seemingly equivalent mojo
> buildnumber maven plugin? May not be your issue, but may be the plugin
> you're using doesn't create properties in the right way (no offense, just
> trying to guess)?
> My 2 cents
> Le 23 mars 2014 22:37, "Henrik =D8sterlund Gram" <henrik.gram@gmail.com> =
a
> =E9crit :
>
> > I stumbled over some rather strange behaviour regarding properties.  It
> > seems properties generated by one plugin are not always resolved for
> other
> > plugins and I can't figure out why.
> >
> > I use a plugin to make info about the git branch available in the
> > properties so it can be passed to other plugins.  The particular plugin
> > does not seem important, but I've included it here for sake of
> > completeness:
> >
> > <plugin>
> > <groupId>com.code54.mojo</groupId>
> > <artifactId>buildversion-plugin</artifactId>
> >  <version>1.0.3</version>
> > <configuration>
> > <tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
> >  </configuration>
> > <executions>
> > <execution>
> >  <goals>
> > <goal>set-properties</goal>
> > </goals>
> >  </execution>
> > </executions>
> > </plugin>
> >
> > But when I referenced the properties set by the plugin in an env entry
> for
> > the maven ear plugin, the properties were not resolved at all:
> >
> > <envEntries>
> > <env-entry>
> > <description>Middleware build information</description>
> >  <env-entry-name>java:app/env/sw-version</env-entry-name>
> > <env-entry-type>java.lang.String</env-entry-type>
> >  <env-entry-value>${build-commit} @ ${build-tstamp} built on
> > ${maven.build.timestamp}</env-entry-value>
> > </env-entry>
> > </envEntries>
> >
> > Just to be sure, I used the latest maven and tried both version 2.9 of
> the
> > plugin and the latest from the repo with the same result.
> >
> > The only way I managed to fix this was to patch the maven-ear-plugin
> > itself, adding the following code in
> GenerateApplicationXmlMojo.execute():
> >
> > // Fix env variable substitutions
> > Properties props =3D project.getProperties();
> > PlexusConfiguration[] entries =3D envEntries.getChildren();
> > if (entries !=3D null) {
> >     for (PlexusConfiguration entry : entries) {
> >         if ("env-entry".equals(entry.getName())) {
> >             PlexusConfiguration[] envEntryChildren =3D entry.getChildre=
n();
> >             if (envEntryChildren !=3D null) {
> >                 for (PlexusConfiguration envEntryChild :
> envEntryChildren)
> > {
> >
> > envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(),
> > props));
> >                 }
> >             }
> >         }
> >     }
> > }
> >
> > Then it worked just fine, but I don't understand why this is necessary.
>  I
> > thought whatever called the plugin was supposed to have done the variab=
le
> > substitution already.  So clearly the properties were present at the ti=
me
> > of executing the plugin, but they werent being automaticly substituted.
> >
> > To add to the confusion, using ${project.version} in the env-entry-valu=
e
> > was resolved just fine, but just not the properties coming from another
> > plugin despite the plugins being run in the correct order.
> >
> > To further add to the confusion, I then used maven ant-run plugin,
> echoing
> > the values of properties which worked just fine (!)
> >
> > While I solved the problem for me by making a locally patched version o=
f
> > the ear plugin, it's not really a solution I favour, so I hope someone
> can
> > provide a better and more permanent fix.
> >
> > Regards,
> > Henrik Gram
> >
>

--089e011835daf749d204f555aff5--

