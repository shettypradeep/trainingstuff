From users-return-135742-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Mar  9 15:43:27 2014
Return-Path: <users-return-135742-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0A5BE10725
	for <apmail-maven-users-archive@www.apache.org>; Sun,  9 Mar 2014 15:43:27 +0000 (UTC)
Received: (qmail 20064 invoked by uid 500); 9 Mar 2014 15:43:23 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 19787 invoked by uid 500); 9 Mar 2014 15:43:22 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 19778 invoked by uid 99); 9 Mar 2014 15:43:21 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 09 Mar 2014 15:43:21 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: local policy includes SPF record at spf.trusted-forwarder.org)
Received: from [209.85.128.178] (HELO mail-ve0-f178.google.com) (209.85.128.178)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 09 Mar 2014 15:43:16 +0000
Received: by mail-ve0-f178.google.com with SMTP id jw12so6231778veb.9
        for <users@maven.apache.org>; Sun, 09 Mar 2014 08:42:55 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:content-type;
        bh=immx46maoKYSy1zUNxQaZZlc8+rs+ZAuMaRrpVQ/Gk8=;
        b=In3/YKYuGyOn21W9Kh6Jd+VFTvfI1jUE0EILwBrNZD7r7KEn/Y5jLeBRVsr8QtN3PI
         t4ZAxN/m0R6UFiVWJjfsNAdmCuObL7Cl6Vw7aNA/TldUV1pEuqBN6mvuzYNn7RYfC6D+
         X9bdOYg5AnQfuV7jShMP3kuL2tJUdFC+6wmtDzvQ4uN+7dmO1W1PZjZ092s9LHyIdgSU
         LHG1uZcqhB4GiRo/CQ2iRjnPsBcfmcncH960VEWF0bFpD1eqjdyA2NGzgnwD1DyC/T6b
         bPWs0QZGsPuw5G+b/IiyCbvtvd3T0MOaTqcfifzH7JfHNSCngECZZDhlQTjz3IAG5GOT
         ue0w==
X-Gm-Message-State: ALoCoQmnG481szlZ03Fn+Xi1E3azwaj8VaYhzH2TOnc3MVFeJuglNyFOTSUQVQa/bxorkSvLjc7A
MIME-Version: 1.0
X-Received: by 10.220.131.210 with SMTP id y18mr19182503vcs.12.1394379775395;
 Sun, 09 Mar 2014 08:42:55 -0700 (PDT)
Received: by 10.58.212.234 with HTTP; Sun, 9 Mar 2014 08:42:55 -0700 (PDT)
Received: by 10.58.212.234 with HTTP; Sun, 9 Mar 2014 08:42:55 -0700 (PDT)
In-Reply-To: <CAK8jvqz3-ROwETkY_7eStyFYEV4KHhntr5CUQoaKhTOKY5c4NQ@mail.gmail.com>
References: <20140307221923.00002c04.ecki@zusammenkunft.net>
	<CAK8jvqz3-ROwETkY_7eStyFYEV4KHhntr5CUQoaKhTOKY5c4NQ@mail.gmail.com>
Date: Sun, 9 Mar 2014 16:42:55 +0100
Message-ID: <CABOR3+yoKfKqWpTvKsgoLnN9sYJyAR6+XYcSSbbt9FD0ghYx7Q@mail.gmail.com>
Subject: Re: Fail assembly plugin if symbols are unknown
From: Bernd <ecki@zusammenkunft.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a1134888431df2504f42e57a3
X-Virus-Checked: Checked by ClamAV on apache.org

--001a1134888431df2504f42e57a3
Content-Type: text/plain; charset=UTF-8

Hello,

I think using the enforcer is generally possible, but I am looking for an
option I can configure in the parent POM. For requireProperty I would have
to have a list of all the properties used in the assembly descriptors
(which means i have to maintain 2 times).

My goal is to find mismatch automatically and early without additional
manual steps.

I havent seen somewhere a general maven concept about handling unexpanded
properties, so I think about providing patches to some specific components
(if it has a chance to be included?).

Greetings
Bernd
 Am 08.03.2014 09:57 schrieb "Mirko Friedenhagen" <mfriedenhagen@gmail.com>:

> Bernd,
>
> what about using enforcer's requireProperty rule?
>
> Regards
> Mirko
> --
> Sent from my mobile
> On Mar 7, 2014 10:20 PM, "Bernd Eckenfels" <ecki@zusammenkunft.net> wrote:
>
> > Hello,
> >
> > we use in a lot of projects special assembly descriptors, which
> > typically use the following pattern:
> >
> > <assembly
> > ...
> >     <id>distribution</id>
> >     <baseDirectory></baseDirectory>
> >     <files>
> >         <file>
> >
> > <outputDirectory>${dist.x}/${dist.base.software.lib}</outputDirectory>
> >             <source>${project.build.directory}/x.jar</source>
> >         </file>
> >     </files>
> > </assembly>
> >
> > We are currently cleaning up some POMs and there is a risk that some of
> > the properties are no longer defined. This produces ZIP files which
> > have directory or file names in there with unexpanded ${dist*} symbols
> > (file name not filters).
> >
> > Is it possible to make the assembly (archiver?) plugin (and
> > others) fail in a situation where ${} cannot be interpolated?
> >
> > The same would be nice for manifest headers in the maven archiver
> > (filter in this case)?
> >
> > Greetings
> > Bernd
> >
> >
> > ---------------------------------------------------------------------
> > To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> > For additional commands, e-mail: users-help@maven.apache.org
> >
> >
>

--001a1134888431df2504f42e57a3--

