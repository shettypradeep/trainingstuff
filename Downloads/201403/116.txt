From users-return-135903-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Mar 24 07:28:57 2014
Return-Path: <users-return-135903-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8DC44104FF
	for <apmail-maven-users-archive@www.apache.org>; Mon, 24 Mar 2014 07:28:57 +0000 (UTC)
Received: (qmail 91629 invoked by uid 500); 24 Mar 2014 07:28:54 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 90914 invoked by uid 500); 24 Mar 2014 07:28:50 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 90889 invoked by uid 99); 24 Mar 2014 07:28:47 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 07:28:47 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of bmathus@gmail.com designates 74.125.83.43 as permitted sender)
Received: from [74.125.83.43] (HELO mail-ee0-f43.google.com) (74.125.83.43)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 24 Mar 2014 07:28:41 +0000
Received: by mail-ee0-f43.google.com with SMTP id e53so4078725eek.30
        for <users@maven.apache.org>; Mon, 24 Mar 2014 00:28:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=3ZW4SEBnTzeF2h1POSAAnldQcOD3BXtmP1BcBupjT5c=;
        b=zbZa6wiXpen7TbN4LS5zL/DOw68xkL+d0zaK3jqVdD5Z+YW2jXJbLsfym4v0ZA59oF
         B1bNoz4WqNgGe77Ap2Po9uVOV646oyB0TOHYRdxOKMRy8JDz+WGxlZCGgqYbFwZRC9vY
         vs+6EmTmmuyA9vp8Kr7hoIKqZHXUVHRdEAO+qpH+AXTt8ysR7WTLO9RBygjf1ArjYpzk
         XJflqsEj0dQDKrAcPmAxPAkL8BUTX7l+hRpjmw8miTI0pmyqHQU0Z1QooVxk1rw6H98p
         CTRuL6msBaxJ7UfncHxG8cIu3dP15kG3aYfvAVSWkHnQw09TgalqQtASr/tal7oFbZvW
         2+AA==
MIME-Version: 1.0
X-Received: by 10.15.45.130 with SMTP id b2mr61860945eew.28.1395646100050;
 Mon, 24 Mar 2014 00:28:20 -0700 (PDT)
Sender: bmathus@gmail.com
Received: by 10.14.225.65 with HTTP; Mon, 24 Mar 2014 00:28:18 -0700 (PDT)
Received: by 10.14.225.65 with HTTP; Mon, 24 Mar 2014 00:28:18 -0700 (PDT)
In-Reply-To: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
References: <CAMLk=nP5TeMTAp5yNP8PGZSYSc-LAqLn3UTu3Npz+18L03aN1A@mail.gmail.com>
Date: Mon, 24 Mar 2014 08:28:18 +0100
X-Google-Sender-Auth: mkvhTtL7ao2G7kZYe8Wa_OKh2_k
Message-ID: <CANWgJS75c4JPWRStq9p+J21xVyWxgZq1q9fcqdkxLgv+UnwaVg@mail.gmail.com>
Subject: Re: properties that are not being resolved
From: Baptiste Mathus <bmathus@batmat.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e0163535a06966504f5552e6c
X-Virus-Checked: Checked by ClamAV on apache.org

--089e0163535a06966504f5552e6c
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi,
Out of curiosity, why don't you use the seemingly equivalent mojo
buildnumber maven plugin? May not be your issue, but may be the plugin
you're using doesn't create properties in the right way (no offense, just
trying to guess)?
My 2 cents
Le 23 mars 2014 22:37, "Henrik =C3=98sterlund Gram" <henrik.gram@gmail.com>=
 a
=C3=A9crit :

> I stumbled over some rather strange behaviour regarding properties.  It
> seems properties generated by one plugin are not always resolved for othe=
r
> plugins and I can't figure out why.
>
> I use a plugin to make info about the git branch available in the
> properties so it can be passed to other plugins.  The particular plugin
> does not seem important, but I've included it here for sake of
> completeness:
>
> <plugin>
> <groupId>com.code54.mojo</groupId>
> <artifactId>buildversion-plugin</artifactId>
>  <version>1.0.3</version>
> <configuration>
> <tstamp_format>yyyy.MM.dd HH:mm</tstamp_format>
>  </configuration>
> <executions>
> <execution>
>  <goals>
> <goal>set-properties</goal>
> </goals>
>  </execution>
> </executions>
> </plugin>
>
> But when I referenced the properties set by the plugin in an env entry fo=
r
> the maven ear plugin, the properties were not resolved at all:
>
> <envEntries>
> <env-entry>
> <description>Middleware build information</description>
>  <env-entry-name>java:app/env/sw-version</env-entry-name>
> <env-entry-type>java.lang.String</env-entry-type>
>  <env-entry-value>${build-commit} @ ${build-tstamp} built on
> ${maven.build.timestamp}</env-entry-value>
> </env-entry>
> </envEntries>
>
> Just to be sure, I used the latest maven and tried both version 2.9 of th=
e
> plugin and the latest from the repo with the same result.
>
> The only way I managed to fix this was to patch the maven-ear-plugin
> itself, adding the following code in GenerateApplicationXmlMojo.execute()=
:
>
> // Fix env variable substitutions
> Properties props =3D project.getProperties();
> PlexusConfiguration[] entries =3D envEntries.getChildren();
> if (entries !=3D null) {
>     for (PlexusConfiguration entry : entries) {
>         if ("env-entry".equals(entry.getName())) {
>             PlexusConfiguration[] envEntryChildren =3D entry.getChildren(=
);
>             if (envEntryChildren !=3D null) {
>                 for (PlexusConfiguration envEntryChild : envEntryChildren=
)
> {
>
> envEntryChild.setValue(StrSubstitutor.replace(envEntryChild.getValue(),
> props));
>                 }
>             }
>         }
>     }
> }
>
> Then it worked just fine, but I don't understand why this is necessary.  =
I
> thought whatever called the plugin was supposed to have done the variable
> substitution already.  So clearly the properties were present at the time
> of executing the plugin, but they werent being automaticly substituted.
>
> To add to the confusion, using ${project.version} in the env-entry-value
> was resolved just fine, but just not the properties coming from another
> plugin despite the plugins being run in the correct order.
>
> To further add to the confusion, I then used maven ant-run plugin, echoin=
g
> the values of properties which worked just fine (!)
>
> While I solved the problem for me by making a locally patched version of
> the ear plugin, it's not really a solution I favour, so I hope someone ca=
n
> provide a better and more permanent fix.
>
> Regards,
> Henrik Gram
>

--089e0163535a06966504f5552e6c--

