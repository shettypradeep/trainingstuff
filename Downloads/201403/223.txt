From users-return-135827-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Mar 14 17:25:05 2014
Return-Path: <users-return-135827-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 656E8C9EA
	for <apmail-maven-users-archive@www.apache.org>; Fri, 14 Mar 2014 17:25:05 +0000 (UTC)
Received: (qmail 95736 invoked by uid 500); 14 Mar 2014 17:25:01 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 95153 invoked by uid 500); 14 Mar 2014 17:24:57 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 94907 invoked by uid 99); 14 Mar 2014 17:24:54 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Mar 2014 17:24:54 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of max.calderoni@gmail.com designates 209.85.219.49 as permitted sender)
Received: from [209.85.219.49] (HELO mail-oa0-f49.google.com) (209.85.219.49)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Mar 2014 17:24:45 +0000
Received: by mail-oa0-f49.google.com with SMTP id g12so2913960oah.36
        for <users@maven.apache.org>; Fri, 14 Mar 2014 10:24:24 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=AQONQ1DnqbRSyiQ6oRpTTDeCRgy9mZYAVXRJ9ZeNSMI=;
        b=j3K/SfsrHqjr2YR9BEK0xoAur1icRpjIVdH/kdbR1PZPL4+8X6S2BcEW1V1sdU8mD9
         gjRQMd1f1VhdTe/AhUuxz+kinlQvTWbjTMXlxa22o54OzO/F3yvgewPyT32uFPzHc/Rv
         i91vPTClBSlass/FKkEXej4K7XWQuFteP71ywG6iQkKKKkoAv65P25U4pYqniU06WBhX
         Fvz5XDO0oOBkyob3zFTrQIn/0rrEgnqYts43XgfHIzborwahFJSkdBLzepXN67uNDNLs
         MbpJCku04/kK8S+RnKdAp8Yo1bshLQrniE24jpxzbeCsr4kdaIAMyzeyhcvPuyj1jd2/
         3CTw==
MIME-Version: 1.0
X-Received: by 10.182.29.98 with SMTP id j2mr7724080obh.30.1394817864371; Fri,
 14 Mar 2014 10:24:24 -0700 (PDT)
Received: by 10.182.11.102 with HTTP; Fri, 14 Mar 2014 10:24:24 -0700 (PDT)
In-Reply-To: <CACY-B-mpRJKoVZQvu1K_CuG5QncRm5KCyNCh7VO+LC_n1xN61g@mail.gmail.com>
References: <CACY-B-ngxim3+f-5DxokhX_VpTWVmZ33UTRQJTej8qHqyMS43w@mail.gmail.com>
	<CADN69ykhVw86BWRm63WK46SoVp1w3aOxFAyuAb0CCuRQX4opGw@mail.gmail.com>
	<CACY-B-mfab_sXwfm3Hm9RzsS-S4xrWjaZ_0xtt4RRcKQqPDH=w@mail.gmail.com>
	<CAK8jvqzM_pGy+HbpCn3JYComZhZ3Kh3wYGF1xmofP7XWsp6THA@mail.gmail.com>
	<CACY-B-mpRJKoVZQvu1K_CuG5QncRm5KCyNCh7VO+LC_n1xN61g@mail.gmail.com>
Date: Fri, 14 Mar 2014 10:24:24 -0700
Message-ID: <CACY-B-msbDCNqyFC=x7hvo1TGt3N9wKF1rdROWTgMw-jZPc+NA@mail.gmail.com>
Subject: Re: list all unique dependencies of multi-module project
From: Max Calderoni <max.calderoni@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a11c2c48455151e04f49457d2
X-Virus-Checked: Checked by ClamAV on apache.org

--001a11c2c48455151e04f49457d2
Content-Type: text/plain; charset=ISO-8859-1

ok..., based on my previous email, trying re-asking here the same question
from a different angle:

The project-info-reports:dependency-management goal is used to generate the
Project DependencyManagement report.

In in a multi-module project, is it currently already possible to generate
the same report (maybe off of the main pom project container of your entire
source tree), which aggregates all the reports of all submodules (unique
GAV+scope entries)?


On Fri, Mar 14, 2014 at 10:15 AM, Max Calderoni <max.calderoni@gmail.com>wrote:

> Hello Mirko,
>
> it's an idea. This that you describe in particular i cannot do, because it
> will break containment (has implications with site generation, build, etc),
> but i had tried a similar hack, by creating a dummy jar project that was
> depending on every single module in the entire source tree.
>
> It almost worked, but not quite, because other than being problematic
> remembering to always add every module as a dependency to the dummy module
> , both test and not, dependency:list will shrink a dependency to one scope
> only. That is, it will not show that dependency A is used as 'compile'
> somewhere and somewhere else as 'test', while we want to see that in a
> report.
>
> Seems to me that this problem cannot be resolved with the dependency
> plugin alone, because dependencies can only be found by running the entire
> tree: the container pom project will run as first in the reactor build
> order, not as last.
>
> Seems more of a problem for a reporting plugin, like for example the Maven
> Project Info Reports Plugin.
>
> I am going to ask a different question based on that, see if i can get an
> answer.
>
> Cheers,
>
> Max
>
>
> On Wed, Mar 12, 2014 at 10:34 PM, Mirko Friedenhagen <
> mfriedenhagen@gmail.com> wrote:
>
>> Hello Max,
>>
>> what about switching this to  a jar project without sources (maybe a
>> readme
>> txt as resource), which is not deployed or installed?
>>
>> Regards
>> Mirko
>>
>>


-- 
Max Calderoni

--001a11c2c48455151e04f49457d2--

