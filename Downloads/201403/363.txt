From users-return-135975-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Mar 28 00:13:06 2014
Return-Path: <users-return-135975-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 42F9B10FC2
	for <apmail-maven-users-archive@www.apache.org>; Fri, 28 Mar 2014 00:13:06 +0000 (UTC)
Received: (qmail 40090 invoked by uid 500); 28 Mar 2014 00:13:01 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 39924 invoked by uid 500); 28 Mar 2014 00:13:00 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 39909 invoked by uid 99); 28 Mar 2014 00:13:00 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 28 Mar 2014 00:13:00 +0000
X-ASF-Spam-Status: No, hits=-0.7 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of waynefay@gmail.com designates 209.85.220.45 as permitted sender)
Received: from [209.85.220.45] (HELO mail-pa0-f45.google.com) (209.85.220.45)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 28 Mar 2014 00:12:54 +0000
Received: by mail-pa0-f45.google.com with SMTP id kl14so4209123pab.4
        for <users@maven.apache.org>; Thu, 27 Mar 2014 17:12:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :content-type;
        bh=p5cvUIJQ/tQPVPGH4S/U0Idl6UCzAI5YI3ITrsWjl60=;
        b=O9PKglGfizu28Xln4eUcB5HxBaVQQYpW/QLrbmTNeNpHOoSGSdkjtjuA1VBOd8avpV
         IaqKCEIwqof0Ih4b+3h2Svdr6YsLndFMa/l6tyAYlIoPlPlM75dHtpbhencyAgxxezjI
         /biQlLDX0wf2dgUK8fJSlM8AlJbwHpfr0hVhHy2rij33pbNklNA50z0FOR63TrGk4Bb5
         WGp3wbWGzNLZgxFpUps/vs2YHCbYqefRIX32pNwA2hyIc8hDxFAqWB/AI+9w2TTSX+/+
         UqBcRWnGv4M8LiobLP76CeAiHhGSKbfQmfZ9tuK1f0xcjUFKA/foFzpRTsITRLsTPMaB
         Q/pg==
X-Received: by 10.68.229.106 with SMTP id sp10mr4997226pbc.23.1395965552669;
 Thu, 27 Mar 2014 17:12:32 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.68.192.71 with HTTP; Thu, 27 Mar 2014 17:12:12 -0700 (PDT)
In-Reply-To: <53347A7E.4020509@yahoo.com>
References: <53347A7E.4020509@yahoo.com>
From: Wayne Fay <waynefay@gmail.com>
Date: Thu, 27 Mar 2014 19:12:12 -0500
Message-ID: <CALy+7UmReUCWTeeBbL-+DRffcEu7_Nqq1KhtfSL9fc_6ytehZA@mail.gmail.com>
Subject: Re: More on releasing artifacts with and without debug info
To: Maven Users List <users@maven.apache.org>
Content-Type: text/plain; charset=UTF-8
X-Virus-Checked: Checked by ClamAV on apache.org

Off the top of my head, I could imagine 2 other approaches:

1. set up 2 separate project trees - one that produces the debug
output, and another that depends on the source of the first (use
dependency:unpack), and merely produces the non-debug output

2. if tooling exists to strip debug information, set up a second tree
of projects, each one depending on the primary artifact and running
the "strip debug" tool

Best of luck keeping the versions in sync etc.

Wayne


On Thu, Mar 27, 2014 at 2:22 PM, Mark Eggers <its_toasted@yahoo.com> wrote:
> Recently I received a requirement much like that covered in the following
> thread:
>
> Releasing artifacts with and without debug info (December 04, 2013)
>
> I'm new to Maven, but I more or less followed the idea:
>
> 1. create a profile
> 2. in the profile, specify the plugins
> 3. in each plugin, specify multiple execution blocks
>    a. one block is configured to generate debug info
>    b. another block is configured to omit debug info
>    c. add classifiers to the JAR or WAR plugin as needed
> 4. deploy plugin
>    a. add a configuration section
>    b. add a files section
>    c. list additional artifacts to be attached (?!)
>
> Is this the gist of Dimitar Gospodinov's reply at the end of the thread?
>
> It seems both hackish and verbose.
>
> However, I'm not sure of any other way to provide both fully optimized
> (compressed CSS, Javascript) and non-optimized WAR and JAR artifacts.
>
> Any time I'm doing something like this, I feel that I'm not doing it the
> "Maven way".
>
> Other approaches?
>
> /mde/
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


