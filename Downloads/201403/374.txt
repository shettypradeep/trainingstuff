From users-return-136017-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Mar 29 16:57:23 2014
Return-Path: <users-return-136017-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 28AD310F1B
	for <apmail-maven-users-archive@www.apache.org>; Sat, 29 Mar 2014 16:57:23 +0000 (UTC)
Received: (qmail 70913 invoked by uid 500); 29 Mar 2014 16:57:19 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 70845 invoked by uid 500); 29 Mar 2014 16:57:18 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 70834 invoked by uid 99); 29 Mar 2014 16:57:17 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Mar 2014 16:57:17 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Mar 2014 16:57:12 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id 0CE376A6564
	for <users@maven.apache.org>; Sat, 29 Mar 2014 12:56:52 -0400 (EDT)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id hJfXIrj3vmc7 for <users@maven.apache.org>;
	Sat, 29 Mar 2014 12:56:47 -0400 (EDT)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id 527896A6562
	for <users@maven.apache.org>; Sat, 29 Mar 2014 12:56:47 -0400 (EDT)
Message-ID: <5336FB46.7000002@artifact-software.com>
Date: Sat, 29 Mar 2014 12:56:38 -0400
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: Maven Users List <users@maven.apache.org>
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.4.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: maven release-plugin 2.5 bug - releasing snapshots...
References: <1396005159305-5789843.post@n5.nabble.com> <CA+nPnMxJvqyWcnsWADF00zr+emGdw-kA4fZeSY9duCOj3zs96A@mail.gmail.com> <1396009391638-5789868.post@n5.nabble.com> <CA+nPnMxp6vhW6BaDQ22b5P2pHVVZTAkwpd7NW1PVgfxuzw9gTw@mail.gmail.com> <1396012680124-5789892.post@n5.nabble.com> <CA+nPnMze-q4vuU7o3B2y7_MCS5cUnWaTMHZ=Dku8GyK3UMK08w@mail.gmail.com> <1396015974365-5789916.post@n5.nabble.com> <op.xdfsc72ikdkhrr@robertscholte> <1396023850189-5789928.post@n5.nabble.com> <op.xdf0r2t7kdkhrr@robertscholte> <1396068623455-5789950.post@n5.nabble.com>
In-Reply-To: <1396068623455-5789950.post@n5.nabble.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

You don't mention Release Candidate of Milestone Releases.
It seems that some of the versions that are going through to integration 
and end-user testing might fit these categories.
These were mentioned earlier in this thread but seemed to have been 
skipped in the discussion as your process got better described.

Ron

On 29/03/2014 12:50 AM, ghostwolf59 wrote:
>> So if I understand correctly you want to use SNAPSHOTs because:
>> - you don't want the artifact to end up in the "releases"-repository yes,
> correct
>
>> because QA needs to be done first
> Not quite - occasionally projects (still in development state but nearing
> its end) engage formal internal test teams to conduct tests against what
> they delivered (these tests involve performance, integration as well as
> functional tests)
> All this takes place in an *non* locked down SIT env.
> Our formal Archiva release repository is technically not used for other than
> resources that is deemed well behaved that passed internal unit tests,
> system integration and in some cases systems that have gone through formal
> tests by test teams that received a signed off by the internal test team.
> Once a delivery has been signed off the official release id done (into our
> releases repo) - this release is then pushed out to the locked down UAT env
> where the business perform functional tests and once happy and a sign off
> have been received that same release is then pushed into PROD.
> So in effect our "releases" repo is only used for UAT and PROD.
>
> Releasing a snapshot is a convenient one but I think a snapshot could be
> viewed in two different ways, normal & mile stone where mile stone snapshot
> releases could include all the info a formal release would include.
> - The ability to release snapshot still exists under the latest plugins -
> what's now gone missing is the ability to release everything that would be
> generated during a formal release i.e javadoc, site info, scm branch tagging
> etc.
> Even if a snapshot is cleaned out I think it would be very rare occasions
> where this would become a problem - the scm branch could in such case be
> used to rebuild the lost snapshot release.
>
> I think our bottom line is that we only want to see properly tested and sane
> releases in our "prod state" releases repo - any such release have been
> formally requested and approved by our Change Management process - snapshots
> is managed by individual developers and do not go through a sign off
> process.
>
> The way we integrated Archiva, project site info and Subversion works really
> well - this latest issue of not being able to build full snapshot releases
> would in effect force us to change our current process - either by banning
> these sort of mile stones or force developers to
> 1. manually branch tag the source,
> 2. build a local site
> 3. push the locally built site info out to our project web site
> 4. push out the snapshot to archivas snapshot repo
>
> There's a lot that can (and honestly will) go wrong here - the earlier
> version of the plugin took care of most of this (only issue being that a
> developer may overwrite the release and scm version at the prompt with wrong
> info)
>   
>> What you are looking for is "staging": a concept where you release your
>> artifacts to the QA-repository. If they accept it, they push it to the
>> next repository, ... until it is pushed to the company-repository, ready
>> to be used by everyone.
> I will look into this - seem like a sensible way to go about things
>
> Thanks for the advice given by all
>
> cheers
>
>
>
> -----
> good @ being sucked @
> --
> View this message in context: http://maven.40175.n5.nabble.com/maven-release-plugin-2-5-bug-releasing-snapshots-tp5789837p5789950.html
> Sent from the Maven - Users mailing list archive at Nabble.com.
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>


-- 
Ron Wheeler
President
Artifact Software Inc
email: rwheeler@artifact-software.com
skype: ronaldmwheeler
phone: 866-970-2435, ext 102


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


