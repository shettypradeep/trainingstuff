From users-return-135997-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Mar 28 14:08:34 2014
Return-Path: <users-return-135997-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E75631089B
	for <apmail-maven-users-archive@www.apache.org>; Fri, 28 Mar 2014 14:08:34 +0000 (UTC)
Received: (qmail 72581 invoked by uid 500); 28 Mar 2014 14:08:30 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 72211 invoked by uid 500); 28 Mar 2014 14:08:30 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 72203 invoked by uid 99); 28 Mar 2014 14:08:30 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 28 Mar 2014 14:08:29 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of mfriedenhagen@gmail.com designates 209.85.219.48 as permitted sender)
Received: from [209.85.219.48] (HELO mail-oa0-f48.google.com) (209.85.219.48)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 28 Mar 2014 14:08:25 +0000
Received: by mail-oa0-f48.google.com with SMTP id m1so6071548oag.21
        for <users@maven.apache.org>; Fri, 28 Mar 2014 07:08:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=TombIC4G8ht81KAe94WVZl1W0CfBl5vVqsp++8A40Bo=;
        b=S1ydR4MedvxaWF9qv+A+Rmn8K2J/ZZvYd6qbOGAvraU52YnupkzBbz7TmDLiZSKzf9
         Koa7TjeBO82/bK3qnCpHdnqPEBa4hFcYycoSpM1h+VQi1WH23A/wChZ2SMgtc+cYpWdf
         dai/o/XmxXizArvqjeUrG2rdtLgIS5IUQzuNAk08mxijAYZi5+3ndKGMddtkvI8SPHgi
         1AuE3US5dKhydI0QPL9adbmPKsfL2nx6WB3Qe4kbEXEYMfYGeH14USV1B+6cr/BJURa0
         iX2j0jJ9EutsBUVXU9PrN7HXfJ3VK7bQiVCmWtQ7bO6fgaGBOFnCPI9q0SPnqn+TuI5A
         +Dmw==
MIME-Version: 1.0
X-Received: by 10.60.37.99 with SMTP id x3mr7164271oej.2.1396015684683; Fri,
 28 Mar 2014 07:08:04 -0700 (PDT)
Received: by 10.182.193.9 with HTTP; Fri, 28 Mar 2014 07:08:04 -0700 (PDT)
Received: by 10.182.193.9 with HTTP; Fri, 28 Mar 2014 07:08:04 -0700 (PDT)
In-Reply-To: <53358021.6010103@Kriegisch.name>
References: <53358021.6010103@Kriegisch.name>
Date: Fri, 28 Mar 2014 15:08:04 +0100
Message-ID: <CAK8jvqxy+wdkOwz89T=p7oMVUn-q1WhNt7GRTqU0ZZ=Z1nqp7w@mail.gmail.com>
Subject: Re: Overriding dependency scope
From: Mirko Friedenhagen <mfriedenhagen@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e01176279fd731704f5ab3ac8
X-Virus-Checked: Checked by ClamAV on apache.org

--089e01176279fd731704f5ab3ac8
Content-Type: text/plain; charset=UTF-8

Alexander,

AFAIK you may override the scope in the inheriting poms. If I remember
correctly I did this with junit as I needed it for an selenium test
project, where I had put base tests beneath src/main (to recite Brecht: oh,
don't ask why).

Regards
Mirko
-- 
Sent from my mobile
On Mar 28, 2014 2:59 PM, "Alexander Kriegisch" <Alexander@kriegisch.name>
wrote:

> I have a situation as follows:
>
>   - Multi-module project (~30 modules)
>
>   - Certain test dependencies (e.g. groovy-all) needed by nearly all
>     sub-modules are declared directly with test scope in the parent POM
>     (not just dependencyManagement, but also dependency). I know this is
>     considered to be bad practice but it saves a lot of redundant
>     dependency duplication.
>
>   - One new sub-module now actually also needs groovy-all, but with a
>     compile scope. So my wish (although seemingly unsupported by Maven)
>     is to override the default scope for this sub-module so as for the
>     dependency to be actually available during runtime.
>
> How can I do this or work around the need to duplicate my test
> dependencies in 30 modules just so as to be able to define the scope for
> the new module? AFAIK a POM can only inherit from one POM. But can I
> somehow use an "included POM" in my 30 modules in order to be able to
> centrally manage the test dependencies? Sorry if I am explaining this
> wrong or using incorrect erms, but I am by no means a Maven pro.
> Hopefully I was at least able to make my intent clear. I am looking for
> good advice beyond lecturing about how I should really, really declare
> everything 30 times in order to do it the Maven way. I am looking for
> alternatives, am willing to learn and hoping to get constructive answers.
>
> Thanks you all in advance
> --
> Alexander Kriegisch
>
>
>

--089e01176279fd731704f5ab3ac8--

