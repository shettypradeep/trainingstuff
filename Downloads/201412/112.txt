From users-return-138079-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Dec 24 00:37:24 2014
Return-Path: <users-return-138079-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 4B0AF9CD2
	for <apmail-maven-users-archive@www.apache.org>; Wed, 24 Dec 2014 00:37:24 +0000 (UTC)
Received: (qmail 31970 invoked by uid 500); 24 Dec 2014 00:37:22 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 31881 invoked by uid 500); 24 Dec 2014 00:37:22 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 31867 invoked by uid 99); 24 Dec 2014 00:37:20 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 24 Dec 2014 00:37:20 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.214.173 as permitted sender)
Received: from [209.85.214.173] (HELO mail-ob0-f173.google.com) (209.85.214.173)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 24 Dec 2014 00:37:16 +0000
Received: by mail-ob0-f173.google.com with SMTP id uy5so27627219obc.4
        for <users@maven.apache.org>; Tue, 23 Dec 2014 16:35:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=x8udvHGILzWi7P4NPZUF2cOTWv/WFiLGA4aDA4TdriY=;
        b=BxliwZp6UoZFn6Q6wUFKyp6iLUHrQb5hEOpLhw7aTb6zYnmZVNnqusZJhmf6Apn1Bh
         NfME2fiKsdZayVE++QhHbThOfUAbmT8D7h45vqTb0wzyciiLaMYaIq2nTCGbCak4XTFW
         F+U5wm6JdV0InrGnQmyfl2Nwmy5MN9PS7zotN+IIRvofrZAqttYrzRcx4It2KqjXdmHs
         kqia3n/UNkEb7Lggg/LXj5uTsfL3jZAfb9fTwJR+KWW/M+nttqZXNmYZF0VtFmHys8nh
         E/je5TMukbiCMPVwJw4mtX2FQanIATsbz+kxQvdMX7CaU0J6AFDByLhbbHKxHy9jd10C
         gCag==
MIME-Version: 1.0
X-Received: by 10.202.56.6 with SMTP id f6mr16928857oia.101.1419381325727;
 Tue, 23 Dec 2014 16:35:25 -0800 (PST)
Received: by 10.60.5.134 with HTTP; Tue, 23 Dec 2014 16:35:25 -0800 (PST)
In-Reply-To: <CAA8BW8FeYBmh2T4mMtTTu_pik1BvA+P=4uuYYhLpuge8o3B4Rg@mail.gmail.com>
References: <CAA8BW8H4RStyMZSqJybCWSJtyc7WbNHD-ULRYFhyQsNB2+kzdA@mail.gmail.com>
	<CAKDUN1tikh6zG3dJUP8zNebE+xODA8iyOUJpU6kgwEai9k5bHg@mail.gmail.com>
	<CAA8BW8FeYBmh2T4mMtTTu_pik1BvA+P=4uuYYhLpuge8o3B4Rg@mail.gmail.com>
Date: Wed, 24 Dec 2014 00:35:25 +0000
Message-ID: <CA+nPnMwiRYZ+VXXgb-tB0peFpsenJfoQYTcrq1Q4ucPfx8=Osg@mail.gmail.com>
Subject: Re: Duplicate plugin declaration warning
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a113cc6c6b88d6f050aeb7728
X-Virus-Checked: Checked by ClamAV on apache.org

--001a113cc6c6b88d6f050aeb7728
Content-Type: text/plain; charset=UTF-8

This is a smell that you are doing something wrong. You probably want to
compose everything with either a custom lifecycle or a better plugin or
perhaps both. Having to chain 10 things together like that smells of
abusing maven rather than playing to maven's strengths.

Just an FYI though, if you have something that works for you and you know
why it's not recommended but want to fight against the recommendations,
that's your business ;-)

On 23 December 2014 at 22:10, David Hoffer <dhoffer6@gmail.com> wrote:
>
> Right I understand that it's the plugin's goal that is being bound.
> However it's not the case that you can do what I want with just that
> approach (not w/o what feels like hacking).  I want to use the normal maven
> feature where plugins are executed in order of pom declaration (per phase)
> and the feature of specifying the phase per plugin goal.
>
> E.g. Lets take a simple case.  Plugin A has 10 executions where I need
> Plugin B to run between the first 5 and the later 5.
>
> That configuration is simple if I can have multiple plugin declarations
> because I can split plugin A into two declarations with a single
> declaration of plugin B in the middle.  They can all be bound to the same
> phase which is desired in this case.
>
> On the other hand if I can only have one declaration of A then I'm forced
> into gymnastics with phase binding.  First I have to have different phases
> for the first 5 and the later 5 goals and then to get plugin B to run
> before the later half I have to carefully set this (pom location and phase)
> so that it runs after the first set and before the later.  I'm not saying
> it can't be done...but it feels very unnatural and because it forces one to
> pick extra normally-unneeded phases one might run into cases where its not
> even possible.
>
> Am I missing something?
>
> -Dave
>
> On Tue, Dec 23, 2014 at 2:25 PM, Anders Hammar <anders@hammar.net> wrote:
>
> > You don't bind a plugin to a phase but rather a plugin's goal. So it is
> > possible to do what you want by having just one plugin declaration but
> two
> > executions specified (for plugin A); one execution for goal A1 bound to
> the
> > generate-resources phase and one execution for goal A2 bound to the
> > process-resources phase. There's an example in [1].
> >
> > The warning is a warning right now, it will still work. However, this
> > support can be removed in future versions of Maven.
> >
> > [1]
> >
> >
> http://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_executions_Tag
> >
> > /Anders
> >
> > On Tue, Dec 23, 2014 at 10:11 PM, David Hoffer <dhoffer6@gmail.com>
> wrote:
> >
> > > I have some questions regarding the duplicate plugin declaration
> warning,
> > > e.g.
> > >
> > > [artifact:mvn] [WARNING] 'build.plugins.plugin.(groupId:artifactId)'
> must
> > > be unique but found duplicate declaration of plugin
> > > org.apache.maven.plugins:maven-xxx-plugin
> > >
> > > First is this a benign warning that can be ignored or is it really
> > > something that is not supported (multiple declarations of the same
> > plugin)
> > > and that I really need to remove?
> > >
> > > If it's the later case this really limits the flexibility of plugins,
> let
> > > me explain with an example.
> > >
> > > If my current build does the following in order:
> > >
> > > Plugin A - Phase: generate-resources
> > > Plugin B - Phase: process-resources
> > > Plugin A - Phase: process-resources
> > >
> > > By defining plugin A twice I'm able to use the most appropriate phase
> for
> > > each instance of the plugin (btw, each instance has several
> executions).
> > > The key to the above is that plugin B has be be done between each of
> the
> > > two instances of plugin A.
> > >
> > > If I had to only have one plugin A I'd have to set the phase in the
> later
> > > case to something later than process-resources (or I'd have to adjust
> the
> > > first one to something earlier).  Not only does it make it harder to
> > follow
> > > the flow (later in the pom is more clear) but it sometimes forces the
> use
> > > of poor phases as I have many other plugins in this pom after/before
> > these
> > > that are tied to phases as well so it limits what can be chosen here to
> > > satisfy a no duplicate plugin rule.
> > >
> > > What's really the rule here regarding duplicate plugins?
> > >
> > > -Dave
> > >
> >
>

--001a113cc6c6b88d6f050aeb7728--

