From users-return-138088-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Dec 26 13:32:08 2014
Return-Path: <users-return-138088-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A860D105F4
	for <apmail-maven-users-archive@www.apache.org>; Fri, 26 Dec 2014 13:32:08 +0000 (UTC)
Received: (qmail 6619 invoked by uid 500); 26 Dec 2014 13:32:07 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 6529 invoked by uid 500); 26 Dec 2014 13:32:07 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 6508 invoked by uid 99); 26 Dec 2014 13:32:04 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 26 Dec 2014 13:32:04 +0000
X-ASF-Spam-Status: No, hits=1.0 required=5.0
	tests=FREEMAIL_REPLY,RCVD_IN_DNSWL_NONE
X-Spam-Check-By: apache.org
Received-SPF: error (athena.apache.org: local policy)
Received: from [194.158.98.14] (HELO mail-1y.bbox.fr) (194.158.98.14)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 26 Dec 2014 13:31:59 +0000
Received: from herve-desktop.localnet (static-176-183-252-218.ncc.abo.bbox.fr [176.183.252.218])
	by mail-1y.bbox.fr (Postfix) with ESMTP id B288DB4
	for <users@maven.apache.org>; Fri, 26 Dec 2014 14:31:17 +0100 (CET)
From: =?ISO-8859-1?Q?Herv=E9?= BOUTEMY <herve.boutemy@free.fr>
To: Maven Users List <users@maven.apache.org>
Subject: Re: Duplicate plugin declaration warning
Date: Fri, 26 Dec 2014 14:31:17 +0100
Message-ID: <3811306.vtUXWIcAHE@herve-desktop>
User-Agent: KMail/4.13.3 (Linux/3.13.0-43-generic; KDE/4.13.3; x86_64; ; )
In-Reply-To: <CAA8BW8E2oLLCJz9R8buVsOrR-XcnQdvMBi-htp+q8UffZsCbgw@mail.gmail.com>
References: <CAA8BW8H4RStyMZSqJybCWSJtyc7WbNHD-ULRYFhyQsNB2+kzdA@mail.gmail.com> <CA+nPnMw3wakE5rT0_Zf=d_rBh+1n_H86RhN0nB4mjrX-B1hEKg@mail.gmail.com> <CAA8BW8E2oLLCJz9R8buVsOrR-XcnQdvMBi-htp+q8UffZsCbgw@mail.gmail.com>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset="iso-8859-1"
X-Virus-Checked: Checked by ClamAV on apache.org

Le mardi 23 d=E9cembre 2014 18:53:07 David Hoffer a =E9crit :
> So you don't think there is ever a valid case for needing to run a mi=
x of
> plugins (some same...some different) at the same phase in some order?=
  Bernd
> understood my point, perhaps others can explain it better than I if t=
hey
> care to discuss this further.
I can understand there is a need for fine grained ordering (even if thi=
s needs=20
examples before trying to implement somethign for that)
but IIRC, there is no Maven feature to support such a need *inside a ph=
ase*:=20
plugins order in a phase is not guaranteed. The fact that the order is=20=

reproducible is just because there is no algorithm in Maven to force=20=

unpredictible order. But order inside a phase is not supported. Support=
ing it=20
would require some way to add a plugin at the beginning or the end of a=
 phase,=20
or in the middle. And pom inheritence should be specified: when to add =
or when=20
to override. Last time I tried to do it, it caused me headaches :)

The only actual feature in Maven to have guaranteed order is phases, wh=
ich has=20
a default granularity [1].
If you need more granularity, you'll need more phases: that's the way o=
rdering=20
is actually done. And I never really studied if this is easy to do

> I'm going to let it go.  My personal opinion
> is your making things too rigid for no demonstrated reason.
since ordering inside a phase isn't a feature, there is no need to have=
=20
multiple declarations of a plugin in a pom.xml: having such multiple=20=

declarations is seen as inadvertently creating multiple entries, then t=
he=20
warning is a help for the developer to discover his mistake. In fact, p=
erhaps=20
we should have merged the declarations, because having a warning but le=
tting 2=20
entries in the plugins list is just inconsistent.

Believe me, while limited ordering inside a phase is easy, real orderin=
g is=20
really a hard feature.

Regards,

Herv=E9


[1] http://maven.apache.org/ref/3-LATEST/maven-core/lifecycles.html
>=20
>=20
> On Tue, Dec 23, 2014 at 5:48 PM, Stephen Connolly <
>=20
> stephen.alan.connolly@gmail.com> wrote:
> > So the pong is not as bad... Perhaps you are not at rotting shellfi=
sh
> > levels... Still a bad smell though
> >=20
> > On Wednesday, December 24, 2014, David Hoffer <dhoffer6@gmail.com> =
wrote:
> > > The 10 was just an example not something I have in my project.  R=
eplace
> >=20
> > 10
> >=20
> > > with 2 and the same issue applies.
> > >=20
> > > -Dave
> > >=20
> > > On Tue, Dec 23, 2014 at 5:35 PM, Stephen Connolly <
> > >=20
> > > stephen.alan.connolly@gmail.com <javascript:;>> wrote:
> > > > This is a smell that you are doing something wrong. You probabl=
y want
> >=20
> > to
> >=20
> > > > compose everything with either a custom lifecycle or a better p=
lugin
> > > > or
> > > > perhaps both. Having to chain 10 things together like that smel=
ls of
> > > > abusing maven rather than playing to maven's strengths.
> > > >=20
> > > > Just an FYI though, if you have something that works for you an=
d you
> >=20
> > know
> >=20
> > > > why it's not recommended but want to fight against the
> > > > recommendations,
> > > > that's your business ;-)
> > > >=20
> > > > On 23 December 2014 at 22:10, David Hoffer <dhoffer6@gmail.com
> > >=20
> > > <javascript:;>> wrote:
> > > > > Right I understand that it's the plugin's goal that is being =
bound.
> > > > > However it's not the case that you can do what I want with ju=
st that
> > > > > approach (not w/o what feels like hacking).  I want to use th=
e
> > > > > normal
> > > >=20
> > > > maven
> > > >=20
> > > > > feature where plugins are executed in order of pom declaratio=
n (per
> > > >=20
> > > > phase)
> > > >=20
> > > > > and the feature of specifying the phase per plugin goal.
> > > > >=20
> > > > > E.g. Lets take a simple case.  Plugin A has 10 executions whe=
re I
> >=20
> > need
> >=20
> > > > > Plugin B to run between the first 5 and the later 5.
> > > > >=20
> > > > > That configuration is simple if I can have multiple plugin
> >=20
> > declarations
> >=20
> > > > > because I can split plugin A into two declarations with a sin=
gle
> > > > > declaration of plugin B in the middle.  They can all be bound=
 to the
> > >=20
> > > same
> > >=20
> > > > > phase which is desired in this case.
> > > > >=20
> > > > > On the other hand if I can only have one declaration of A the=
n I'm
> > >=20
> > > forced
> > >=20
> > > > > into gymnastics with phase binding.  First I have to have dif=
ferent
> > > >=20
> > > > phases
> > > >=20
> > > > > for the first 5 and the later 5 goals and then to get plugin =
B to
> > > > > run
> > > > > before the later half I have to carefully set this (pom locat=
ion and
> > > >=20
> > > > phase)
> > > >=20
> > > > > so that it runs after the first set and before the later.  I'=
m not
> > >=20
> > > saying
> > >=20
> > > > > it can't be done...but it feels very unnatural and because it=
 forces
> > >=20
> > > one
> > >=20
> > > > to
> > > >=20
> > > > > pick extra normally-unneeded phases one might run into cases =
where
> >=20
> > its
> >=20
> > > > not
> > > >=20
> > > > > even possible.
> > > > >=20
> > > > > Am I missing something?
> > > > >=20
> > > > > -Dave
> > > > >=20
> > > > > On Tue, Dec 23, 2014 at 2:25 PM, Anders Hammar <anders@hammar=
.net
> > >=20
> > > <javascript:;>>
> > >=20
> > > > wrote:
> > > > > > You don't bind a plugin to a phase but rather a plugin's go=
al. So
> >=20
> > it
> >=20
> > > is
> > >=20
> > > > > > possible to do what you want by having just one plugin decl=
aration
> > >=20
> > > but
> > >=20
> > > > > two
> > > > >=20
> > > > > > executions specified (for plugin A); one execution for goal=
 A1
> >=20
> > bound
> >=20
> > > to
> > >=20
> > > > > the
> > > > >=20
> > > > > > generate-resources phase and one execution for goal A2 boun=
d to
> > > > > > the
> > > > > > process-resources phase. There's an example in [1].
> > > > > >=20
> > > > > > The warning is a warning right now, it will still work. How=
ever,
> >=20
> > this
> >=20
> > > > > > support can be removed in future versions of Maven.
> > > > > >=20
> > > > > > [1]
> >=20
> > http://maven.apache.org/guides/mini/guide-configuring-plugins.html#=
Using_t
> > he_executions_Tag>=20
> > > > > > /Anders
> > > > > >=20
> > > > > > On Tue, Dec 23, 2014 at 10:11 PM, David Hoffer <dhoffer6@gm=
ail.com
> > >=20
> > > <javascript:;>>
> > >=20
> > > > > wrote:
> > > > > > > I have some questions regarding the duplicate plugin decl=
aration
> > > > >=20
> > > > > warning,
> > > > >=20
> > > > > > > e.g.
> > > > > > >=20
> > > > > > > [artifact:mvn] [WARNING]
> > >=20
> > > 'build.plugins.plugin.(groupId:artifactId)'
> > >=20
> > > > > must
> > > > >=20
> > > > > > > be unique but found duplicate declaration of plugin
> > > > > > > org.apache.maven.plugins:maven-xxx-plugin
> > > > > > >=20
> > > > > > > First is this a benign warning that can be ignored or is =
it
> >=20
> > really
> >=20
> > > > > > > something that is not supported (multiple declarations of=
 the
> >=20
> > same
> >=20
> > > > > > plugin)
> > > > > >=20
> > > > > > > and that I really need to remove?
> > > > > > >=20
> > > > > > > If it's the later case this really limits the flexibility=
 of
> > >=20
> > > plugins,
> > >=20
> > > > > let
> > > > >=20
> > > > > > > me explain with an example.
> > > > > > >=20
> > > > > > > If my current build does the following in order:
> > > > > > >=20
> > > > > > > Plugin A - Phase: generate-resources
> > > > > > > Plugin B - Phase: process-resources
> > > > > > > Plugin A - Phase: process-resources
> > > > > > >=20
> > > > > > > By defining plugin A twice I'm able to use the most appro=
priate
> > >=20
> > > phase
> > >=20
> > > > > for
> > > > >=20
> > > > > > > each instance of the plugin (btw, each instance has sever=
al
> > > > >=20
> > > > > executions).
> > > > >=20
> > > > > > > The key to the above is that plugin B has be be done betw=
een
> > > > > > > each
> > >=20
> > > of
> > >=20
> > > > > the
> > > > >=20
> > > > > > > two instances of plugin A.
> > > > > > >=20
> > > > > > > If I had to only have one plugin A I'd have to set the ph=
ase in
> >=20
> > the
> >=20
> > > > > later
> > > > >=20
> > > > > > > case to something later than process-resources (or I'd ha=
ve to
> > >=20
> > > adjust
> > >=20
> > > > > the
> > > > >=20
> > > > > > > first one to something earlier).  Not only does it make i=
t
> > > > > > > harder
> > >=20
> > > to
> > >=20
> > > > > > follow
> > > > > >=20
> > > > > > > the flow (later in the pom is more clear) but it sometime=
s
> > > > > > > forces
> > >=20
> > > the
> > >=20
> > > > > use
> > > > >=20
> > > > > > > of poor phases as I have many other plugins in this pom
> > >=20
> > > after/before
> > >=20
> > > > > > these
> > > > > >=20
> > > > > > > that are tied to phases as well so it limits what can be =
chosen
> > >=20
> > > here
> > >=20
> > > > to
> > > >=20
> > > > > > > satisfy a no duplicate plugin rule.
> > > > > > >=20
> > > > > > > What's really the rule here regarding duplicate plugins?
> > > > > > >=20
> > > > > > > -Dave
> >=20
> > --
> > Sent from my phone


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


