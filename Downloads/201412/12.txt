From users-return-138076-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Dec 23 22:10:33 2014
Return-Path: <users-return-138076-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id E722F98EB
	for <apmail-maven-users-archive@www.apache.org>; Tue, 23 Dec 2014 22:10:32 +0000 (UTC)
Received: (qmail 18644 invoked by uid 500); 23 Dec 2014 22:10:31 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 18555 invoked by uid 500); 23 Dec 2014 22:10:31 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 18535 invoked by uid 99); 23 Dec 2014 22:10:29 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 23 Dec 2014 22:10:29 +0000
X-ASF-Spam-Status: No, hits=1.7 required=5.0
	tests=FREEMAIL_ENVFROM_END_DIGIT,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of dhoffer6@gmail.com designates 209.85.214.178 as permitted sender)
Received: from [209.85.214.178] (HELO mail-ob0-f178.google.com) (209.85.214.178)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 23 Dec 2014 22:10:04 +0000
Received: by mail-ob0-f178.google.com with SMTP id gq1so27144428obb.9
        for <users@maven.apache.org>; Tue, 23 Dec 2014 14:10:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=EDQPUwX7TPHThi/Igq2liNBR6IZNaHejMsBx8c4afdQ=;
        b=VoPJO3PZuDjZfTePrvJnMupRxrqOj3jl7nnuIUXFca2Hgd57PLI9jS9SEU2pPa8xsk
         YgW656cDEaCGLQunHB7G/MTx8BNzpw1OzourgzZ1adjjV7Ch2/Dzin5ODVe2bYjjRVxz
         4Vx2Q61+OcafkyMmXDhFXYzaS6ricV2Zwp2On6Wwpl9Y+M4GrJJX0IGQ4LIU52sVGhNY
         pjnPuB3MLJRXrfsBQ/OkotaVvgXAlGy4kjEZ+R25bXNKRAaR/ycRxvvO1yoAaVooE3e6
         88CvTE6GGJ3VnMeUj9Z3WtDN8O2Byr3YSwFR1ZA6b3PQ/mkr6Zyp/pv+2cixEpcBKD1E
         dxdg==
MIME-Version: 1.0
X-Received: by 10.60.74.227 with SMTP id x3mr2770412oev.42.1419372602977; Tue,
 23 Dec 2014 14:10:02 -0800 (PST)
Received: by 10.76.74.130 with HTTP; Tue, 23 Dec 2014 14:10:02 -0800 (PST)
In-Reply-To: <CAKDUN1tikh6zG3dJUP8zNebE+xODA8iyOUJpU6kgwEai9k5bHg@mail.gmail.com>
References: <CAA8BW8H4RStyMZSqJybCWSJtyc7WbNHD-ULRYFhyQsNB2+kzdA@mail.gmail.com>
	<CAKDUN1tikh6zG3dJUP8zNebE+xODA8iyOUJpU6kgwEai9k5bHg@mail.gmail.com>
Date: Tue, 23 Dec 2014 15:10:02 -0700
Message-ID: <CAA8BW8FeYBmh2T4mMtTTu_pik1BvA+P=4uuYYhLpuge8o3B4Rg@mail.gmail.com>
Subject: Re: Duplicate plugin declaration warning
From: David Hoffer <dhoffer6@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a11347a4ece09f9050ae96f58
X-Virus-Checked: Checked by ClamAV on apache.org

--001a11347a4ece09f9050ae96f58
Content-Type: text/plain; charset=UTF-8

Right I understand that it's the plugin's goal that is being bound.
However it's not the case that you can do what I want with just that
approach (not w/o what feels like hacking).  I want to use the normal maven
feature where plugins are executed in order of pom declaration (per phase)
and the feature of specifying the phase per plugin goal.

E.g. Lets take a simple case.  Plugin A has 10 executions where I need
Plugin B to run between the first 5 and the later 5.

That configuration is simple if I can have multiple plugin declarations
because I can split plugin A into two declarations with a single
declaration of plugin B in the middle.  They can all be bound to the same
phase which is desired in this case.

On the other hand if I can only have one declaration of A then I'm forced
into gymnastics with phase binding.  First I have to have different phases
for the first 5 and the later 5 goals and then to get plugin B to run
before the later half I have to carefully set this (pom location and phase)
so that it runs after the first set and before the later.  I'm not saying
it can't be done...but it feels very unnatural and because it forces one to
pick extra normally-unneeded phases one might run into cases where its not
even possible.

Am I missing something?

-Dave

On Tue, Dec 23, 2014 at 2:25 PM, Anders Hammar <anders@hammar.net> wrote:

> You don't bind a plugin to a phase but rather a plugin's goal. So it is
> possible to do what you want by having just one plugin declaration but two
> executions specified (for plugin A); one execution for goal A1 bound to the
> generate-resources phase and one execution for goal A2 bound to the
> process-resources phase. There's an example in [1].
>
> The warning is a warning right now, it will still work. However, this
> support can be removed in future versions of Maven.
>
> [1]
>
> http://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_executions_Tag
>
> /Anders
>
> On Tue, Dec 23, 2014 at 10:11 PM, David Hoffer <dhoffer6@gmail.com> wrote:
>
> > I have some questions regarding the duplicate plugin declaration warning,
> > e.g.
> >
> > [artifact:mvn] [WARNING] 'build.plugins.plugin.(groupId:artifactId)' must
> > be unique but found duplicate declaration of plugin
> > org.apache.maven.plugins:maven-xxx-plugin
> >
> > First is this a benign warning that can be ignored or is it really
> > something that is not supported (multiple declarations of the same
> plugin)
> > and that I really need to remove?
> >
> > If it's the later case this really limits the flexibility of plugins, let
> > me explain with an example.
> >
> > If my current build does the following in order:
> >
> > Plugin A - Phase: generate-resources
> > Plugin B - Phase: process-resources
> > Plugin A - Phase: process-resources
> >
> > By defining plugin A twice I'm able to use the most appropriate phase for
> > each instance of the plugin (btw, each instance has several executions).
> > The key to the above is that plugin B has be be done between each of the
> > two instances of plugin A.
> >
> > If I had to only have one plugin A I'd have to set the phase in the later
> > case to something later than process-resources (or I'd have to adjust the
> > first one to something earlier).  Not only does it make it harder to
> follow
> > the flow (later in the pom is more clear) but it sometimes forces the use
> > of poor phases as I have many other plugins in this pom after/before
> these
> > that are tied to phases as well so it limits what can be chosen here to
> > satisfy a no duplicate plugin rule.
> >
> > What's really the rule here regarding duplicate plugins?
> >
> > -Dave
> >
>

--001a11347a4ece09f9050ae96f58--

