From users-return-138083-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Dec 24 15:21:47 2014
Return-Path: <users-return-138083-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 049BE102B2
	for <apmail-maven-users-archive@www.apache.org>; Wed, 24 Dec 2014 15:21:47 +0000 (UTC)
Received: (qmail 89994 invoked by uid 500); 24 Dec 2014 15:21:44 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 89913 invoked by uid 500); 24 Dec 2014 15:21:44 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 89901 invoked by uid 99); 24 Dec 2014 15:21:42 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 24 Dec 2014 15:21:42 +0000
X-ASF-Spam-Status: No, hits=2.5 required=5.0
	tests=FREEMAIL_REPLY,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.218.52 as permitted sender)
Received: from [209.85.218.52] (HELO mail-oi0-f52.google.com) (209.85.218.52)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 24 Dec 2014 15:21:16 +0000
Received: by mail-oi0-f52.google.com with SMTP id h136so17835176oig.11
        for <users@maven.apache.org>; Wed, 24 Dec 2014 07:20:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=w7YzqUCiA2Z9R1QmE7khS1txQP/2tbKDvWkJquMi2r0=;
        b=0+sL3lgxF25QyBmTm17VSys9F/XZWl36LoFrbeOtuBh44iOA3hFl6PG8DSmqcR7Ob6
         1aL2sSlX7cK+6Qr81WSbQ6vi/7Carujb9TZs9hko6ewrPBI0BlasE6u9YgmqKMaRRFUM
         Ak/tnLrwXeula0y88BThIm0rsF8zL7JRAjA4S+aw5PGsAIJdLQA8jNgw2tAYDUlmDDhO
         IoUG6ojUTDdktp3bTWSdfL2OwQXpc7WqjPIhK1xDM5Rxwisxi9p2Vi23fL6OC6G/9VkQ
         YFxkTuKFDbpMJ+S5XX0lQlBS+pVQ3DAxgPMsQrQQV0fUASnuAFRilvZ/s8sNmjY+/5py
         jXKg==
MIME-Version: 1.0
X-Received: by 10.202.56.6 with SMTP id f6mr18677015oia.101.1419434429615;
 Wed, 24 Dec 2014 07:20:29 -0800 (PST)
Received: by 10.60.245.99 with HTTP; Wed, 24 Dec 2014 07:20:29 -0800 (PST)
In-Reply-To: <CAA8BW8E2oLLCJz9R8buVsOrR-XcnQdvMBi-htp+q8UffZsCbgw@mail.gmail.com>
References: <CAA8BW8H4RStyMZSqJybCWSJtyc7WbNHD-ULRYFhyQsNB2+kzdA@mail.gmail.com>
	<CAKDUN1tikh6zG3dJUP8zNebE+xODA8iyOUJpU6kgwEai9k5bHg@mail.gmail.com>
	<CAA8BW8FeYBmh2T4mMtTTu_pik1BvA+P=4uuYYhLpuge8o3B4Rg@mail.gmail.com>
	<CA+nPnMwiRYZ+VXXgb-tB0peFpsenJfoQYTcrq1Q4ucPfx8=Osg@mail.gmail.com>
	<CAA8BW8H7Uqn59mcVZPjfWib5vRkfNjR-4sV6vA5tndh1W_7qjQ@mail.gmail.com>
	<CA+nPnMw3wakE5rT0_Zf=d_rBh+1n_H86RhN0nB4mjrX-B1hEKg@mail.gmail.com>
	<CAA8BW8E2oLLCJz9R8buVsOrR-XcnQdvMBi-htp+q8UffZsCbgw@mail.gmail.com>
Date: Wed, 24 Dec 2014 15:20:29 +0000
Message-ID: <CA+nPnMyA-FaVwMDE7=RCqS92EttFurJp+Ke-Ns5BvrvnEstDQg@mail.gmail.com>
Subject: Re: Duplicate plugin declaration warning
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a113cc6c6f59450050af7d4c3
X-Virus-Checked: Checked by ClamAV on apache.org

--001a113cc6c6f59450050af7d4c3
Content-Type: text/plain; charset=UTF-8

I am saying that such a need is a sign of a mis-match between the level of
abstraction provided by the plugins and the level of abstraction required
by the users, and that fixing the plugin(s) would be a better way to make
life easier for everyone.

If you are using maven right, you should have very little configuration in
your pom, it should all be packaging, dependencies and at most pulling in
the extension providing the custom packaging.

Getting to that ideal will probably require forging a new path using a
*massive* pom with different plugins munged together in various phases
while you figure out what the best practice for building this new type of
thing should be... But the next phase is to simplify that down with plugins
better matched to requirements and a lifecycle packaging binding to remove
the configuration in the pom....

Finally, during the experimentation phase, the sequencing of plugins at the
wrong level of abstraction could be handled by using the "wrong" phases to
get the sequence right (at the grand scale)

HTH

On Wednesday, December 24, 2014, David Hoffer <dhoffer6@gmail.com> wrote:

> So you don't think there is ever a valid case for needing to run a mix of
> plugins (some same...some different) at the same phase in some order?
> Bernd
> understood my point, perhaps others can explain it better than I if they
> care to discuss this further.  I'm going to let it go.  My personal opinion
> is your making things too rigid for no demonstrated reason.
>
>
> On Tue, Dec 23, 2014 at 5:48 PM, Stephen Connolly <
> stephen.alan.connolly@gmail.com <javascript:;>> wrote:
>
> > So the pong is not as bad... Perhaps you are not at rotting shellfish
> > levels... Still a bad smell though
> >
> > On Wednesday, December 24, 2014, David Hoffer <dhoffer6@gmail.com
> <javascript:;>> wrote:
> >
> > > The 10 was just an example not something I have in my project.  Replace
> > 10
> > > with 2 and the same issue applies.
> > >
> > > -Dave
> > >
> > > On Tue, Dec 23, 2014 at 5:35 PM, Stephen Connolly <
> > > stephen.alan.connolly@gmail.com <javascript:;> <javascript:;>> wrote:
> > >
> > > > This is a smell that you are doing something wrong. You probably want
> > to
> > > > compose everything with either a custom lifecycle or a better plugin
> or
> > > > perhaps both. Having to chain 10 things together like that smells of
> > > > abusing maven rather than playing to maven's strengths.
> > > >
> > > > Just an FYI though, if you have something that works for you and you
> > know
> > > > why it's not recommended but want to fight against the
> recommendations,
> > > > that's your business ;-)
> > > >
> > > > On 23 December 2014 at 22:10, David Hoffer <dhoffer6@gmail.com
> <javascript:;>
> > > <javascript:;>> wrote:
> > > > >
> > > > > Right I understand that it's the plugin's goal that is being bound.
> > > > > However it's not the case that you can do what I want with just
> that
> > > > > approach (not w/o what feels like hacking).  I want to use the
> normal
> > > > maven
> > > > > feature where plugins are executed in order of pom declaration (per
> > > > phase)
> > > > > and the feature of specifying the phase per plugin goal.
> > > > >
> > > > > E.g. Lets take a simple case.  Plugin A has 10 executions where I
> > need
> > > > > Plugin B to run between the first 5 and the later 5.
> > > > >
> > > > > That configuration is simple if I can have multiple plugin
> > declarations
> > > > > because I can split plugin A into two declarations with a single
> > > > > declaration of plugin B in the middle.  They can all be bound to
> the
> > > same
> > > > > phase which is desired in this case.
> > > > >
> > > > > On the other hand if I can only have one declaration of A then I'm
> > > forced
> > > > > into gymnastics with phase binding.  First I have to have different
> > > > phases
> > > > > for the first 5 and the later 5 goals and then to get plugin B to
> run
> > > > > before the later half I have to carefully set this (pom location
> and
> > > > phase)
> > > > > so that it runs after the first set and before the later.  I'm not
> > > saying
> > > > > it can't be done...but it feels very unnatural and because it
> forces
> > > one
> > > > to
> > > > > pick extra normally-unneeded phases one might run into cases where
> > its
> > > > not
> > > > > even possible.
> > > > >
> > > > > Am I missing something?
> > > > >
> > > > > -Dave
> > > > >
> > > > > On Tue, Dec 23, 2014 at 2:25 PM, Anders Hammar <anders@hammar.net
> <javascript:;>
> > > <javascript:;>>
> > > > wrote:
> > > > >
> > > > > > You don't bind a plugin to a phase but rather a plugin's goal. So
> > it
> > > is
> > > > > > possible to do what you want by having just one plugin
> declaration
> > > but
> > > > > two
> > > > > > executions specified (for plugin A); one execution for goal A1
> > bound
> > > to
> > > > > the
> > > > > > generate-resources phase and one execution for goal A2 bound to
> the
> > > > > > process-resources phase. There's an example in [1].
> > > > > >
> > > > > > The warning is a warning right now, it will still work. However,
> > this
> > > > > > support can be removed in future versions of Maven.
> > > > > >
> > > > > > [1]
> > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
> http://maven.apache.org/guides/mini/guide-configuring-plugins.html#Using_the_executions_Tag
> > > > > >
> > > > > > /Anders
> > > > > >
> > > > > > On Tue, Dec 23, 2014 at 10:11 PM, David Hoffer <
> dhoffer6@gmail.com <javascript:;>
> > > <javascript:;>>
> > > > > wrote:
> > > > > >
> > > > > > > I have some questions regarding the duplicate plugin
> declaration
> > > > > warning,
> > > > > > > e.g.
> > > > > > >
> > > > > > > [artifact:mvn] [WARNING]
> > > 'build.plugins.plugin.(groupId:artifactId)'
> > > > > must
> > > > > > > be unique but found duplicate declaration of plugin
> > > > > > > org.apache.maven.plugins:maven-xxx-plugin
> > > > > > >
> > > > > > > First is this a benign warning that can be ignored or is it
> > really
> > > > > > > something that is not supported (multiple declarations of the
> > same
> > > > > > plugin)
> > > > > > > and that I really need to remove?
> > > > > > >
> > > > > > > If it's the later case this really limits the flexibility of
> > > plugins,
> > > > > let
> > > > > > > me explain with an example.
> > > > > > >
> > > > > > > If my current build does the following in order:
> > > > > > >
> > > > > > > Plugin A - Phase: generate-resources
> > > > > > > Plugin B - Phase: process-resources
> > > > > > > Plugin A - Phase: process-resources
> > > > > > >
> > > > > > > By defining plugin A twice I'm able to use the most appropriate
> > > phase
> > > > > for
> > > > > > > each instance of the plugin (btw, each instance has several
> > > > > executions).
> > > > > > > The key to the above is that plugin B has be be done between
> each
> > > of
> > > > > the
> > > > > > > two instances of plugin A.
> > > > > > >
> > > > > > > If I had to only have one plugin A I'd have to set the phase in
> > the
> > > > > later
> > > > > > > case to something later than process-resources (or I'd have to
> > > adjust
> > > > > the
> > > > > > > first one to something earlier).  Not only does it make it
> harder
> > > to
> > > > > > follow
> > > > > > > the flow (later in the pom is more clear) but it sometimes
> forces
> > > the
> > > > > use
> > > > > > > of poor phases as I have many other plugins in this pom
> > > after/before
> > > > > > these
> > > > > > > that are tied to phases as well so it limits what can be chosen
> > > here
> > > > to
> > > > > > > satisfy a no duplicate plugin rule.
> > > > > > >
> > > > > > > What's really the rule here regarding duplicate plugins?
> > > > > > >
> > > > > > > -Dave
> > > > > > >
> > > > > >
> > > > >
> > > >
> > >
> >
> >
> > --
> > Sent from my phone
> >
>


-- 
Sent from my phone

--001a113cc6c6f59450050af7d4c3--

