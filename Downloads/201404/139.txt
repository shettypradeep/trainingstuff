From users-return-136246-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Apr 23 09:02:27 2014
Return-Path: <users-return-136246-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id F1B5310D0F
	for <apmail-maven-users-archive@www.apache.org>; Wed, 23 Apr 2014 09:02:27 +0000 (UTC)
Received: (qmail 70702 invoked by uid 500); 23 Apr 2014 09:02:24 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 70024 invoked by uid 500); 23 Apr 2014 09:02:21 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 69992 invoked by uid 99); 23 Apr 2014 09:02:19 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 23 Apr 2014 09:02:19 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of stephen.alan.connolly@gmail.com designates 74.125.82.174 as permitted sender)
Received: from [74.125.82.174] (HELO mail-we0-f174.google.com) (74.125.82.174)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 23 Apr 2014 09:02:14 +0000
Received: by mail-we0-f174.google.com with SMTP id t60so560080wes.33
        for <users@maven.apache.org>; Wed, 23 Apr 2014 02:01:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=B91KA4nHOeCGYtKEciracqmWHPzPSp3BxhBnldPhgxo=;
        b=SXzxjX3YCY81x9VuRwV4bCePQBLhgbMOIrBvSPwOa1AAwuegdvNMUwLDnfhxSzCTPb
         XQsicxGbC/wVCZodvWUSgNsCuaNqqOfi8kIDz775Qqa+qfyP1RnHvGCYPVXsp2hNNvHG
         aHWs3B6h6XzKDDP43NqF8jWi0f2Cbm0jJwvOjPOTQOp6wY+P/BIlINwLgg+/O0y89dwQ
         /uOLjeLuqmTvJdQXj5GSNq4FgQL7CZNtisA9pq6VF2KAk6yN8DQkN4Vo6pNTWc3UTZEO
         FjUZtaNIGls6KctM1IjWqmqFT3eBjy+0wwBwcS19a8k1rVDI9jWwEcRbELX1n01U0mH8
         Pidw==
MIME-Version: 1.0
X-Received: by 10.180.82.7 with SMTP id e7mr925780wiy.6.1398243713050; Wed, 23
 Apr 2014 02:01:53 -0700 (PDT)
Received: by 10.194.205.233 with HTTP; Wed, 23 Apr 2014 02:01:52 -0700 (PDT)
In-Reply-To: <CAAqB__t3qHj7HjA-GumSJPS-XGKDO2rD4Pyc9FYOfsdPtbpxbQ@mail.gmail.com>
References: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>
	<CA+nPnMzLSP8AvqNwdjdChgkmF7spcpYzuovQqYQSm5r7aj8wmQ@mail.gmail.com>
	<CAAqB__sJZ9WU9vY0pqQqUvBZZJwwut2+B-UxoGbyp2M-a98Obg@mail.gmail.com>
	<CAKDUN1uqiMUQZK3v3g7NqcrvbYVi5QOL==YsU-FvN5aL+mVedQ@mail.gmail.com>
	<CAAqB__t3qHj7HjA-GumSJPS-XGKDO2rD4Pyc9FYOfsdPtbpxbQ@mail.gmail.com>
Date: Wed, 23 Apr 2014 10:01:52 +0100
Message-ID: <CA+nPnMxpzq4pMNDkxofYLq44zoXid5BheVNwjgigOnCYH+dTdw@mail.gmail.com>
Subject: Re: Generating war and Jar from same codebase
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=f46d04428802d36e1c04f7b1fb78
X-Virus-Checked: Checked by ClamAV on apache.org

--f46d04428802d36e1c04f7b1fb78
Content-Type: text/plain; charset=UTF-8

Please do no do it this way. You will have a very sub-optimal Maven
experience if you do it this way. In short you are picking a fight with
Maven... you might have won a battle... but Maven is very opinionated and
when you pick a fight with it... expect a phone call from Maven...

"I don't know who you are. I don't know what you want. If you are looking
for ransom, I can tell you I don't have money. But what I do have are a
very particular set of opinions; opinions I have acquired over a decade of
existence. Opinions that make me a nightmare for people like you. If you
follow the Maven way now, that'll be the end of it. I will not look for
you, I will not pursue you. But if you don't, I will look for you, I will
find you, and I will kill you." https://www.youtube.com/watch?v=OxBH05hcifw

Maven always wins in the end!




On 23 April 2014 05:15, Narayanan K <knarayanan88@gmail.com> wrote:

> Hi Anders
>
> The codebase is the same. So having 2 separate directories (for
> modules) and pom in each of them is not required right ?
>
> I can have <modules> in parent pom to specify the 2 child poms that
> are present in the same project level. Tried below and seems it is
> working.
>
> parent pom will have :
>
> <modules>
>   <module>pom-war.xml</module>
>   <module>pom-jar.xml</module>
> <modules>
>
> In both child poms,
>
> <parent>
> <relativePath>./pom-parent.xml</relativePath>
> </parent>
>
> Currently including the jar artifact dependency in war project cannot
> be done due to some restrictions in our development.
>
> Narayanan
>
> On Tue, Apr 22, 2014 at 11:37 AM, Anders Hammar <anders@hammar.net> wrote:
> >> My new maven project structure will be :
> >>
> >> .
> >>  | -- pom.xml (parent pom)
> >>  | -- pom-war.xml (inherits from parent, generates a war)
> >>  | -- pom-jar.xml (inherits from parent, generates a jar)
> >>
> >> There are no modules in the project. All poms are going to be in the
> >> root path of the project.
> >>
> >
> > Wrong!
> > You should create two modules; one for the jar project and one for the
> war
> > project. Follow the Maven standards and you can use any of the many
> > examples of this on the Internet.
> > I believe we haven't pushed the mantra for some time now, so here it
> comes:
> > Don't fight Maven!
> >
> > /Anders
> >
> >
> >>
> >> 1. Any examples on how to write the parent pom referencing the same
> >> codebase for the child poms.
> >> Will there be a <module> tag for parent pom.  I understand that the
> >> packaging for parent pom will be "pom".
> >>
> >> 2. The child poms will have <relativePath> in <parent> tag as
> >> ./pom.xml. Please correct me if this is wrong.
> >>
> >> Thanks
> >> Narayanan
> >>
> >>
> >>
> >>
> >>
> >> Narayanan
> >>
> >> On Tue, Apr 22, 2014 at 12:38 AM, Stephen Connolly
> >> <stephen.alan.connolly@gmail.com> wrote:
> >> > On 22 April 2014 01:18, Narayanan K <knarayanan88@gmail.com> wrote:
> >> >
> >> >> Hi
> >> >>
> >> >> We have a default pom file with packaging "war" for our codebase.
> >> >>
> >> >> From the same code base we also want to generate a normal jar and a
> >> >> fat jar with dependencies.
> >> >>
> >> >> Currently solution that has been implemented is another pom-jar.xml
> >> >> file that has the packaging as jar and maven-assembly-plugin to
> >> >> generate the jar with dependencies. We use mvn install -f
> pom-jar.xml.
> >> >>
> >> >> But we are in a situation where if any new dependency is added to
> >> >> pom.xml, we need to add to pom-jar.xml as well as it is the same
> >> >> codebase.
> >> >>
> >> >> To avoid this we thought of couple of solutions -
> >> >>
> >> >> 1. Add maven-jar-plugin and maven-assembly-plugin to the default pom
> >> >> with packaging war - so it generates a war file, a normal jar file
> and
> >> >> fat jar out of the same pom. So we can do away with the pom-jar.xml.
> >> >>
> >> >> Not sure if this is a good solution. We tried this, but this is
> >> >> working well only in maven 3.0.4. The assembly plugin is not working
> >> >> well with Maven 2 (which is in our build environment) while
> generating
> >> >> the fat jar.
> >> >>
> >> >> 2. Have a parent pom and put all the dependencies and plugins in that
> >> >> and have 2 child poms in the same codebase with different names
> >> >> inherit from parent pom, one that has packaging of war that generates
> >> >> war file and the other child pom has packaging jar with maven
> assembly
> >> >> plugin to generate both normal and fat jar. And all new dependencies
> >> >> need to be added only to parent pom.
> >> >>
> >> >> This solution will make us have 3 pom files in codebase, doesnt look
> >> >> very elegant,
> >> >
> >> >
> >> > actually depends on your point of view. To me this is the more elegant
> >> > solution as you clearly see the relationship between inputs (pom.xml)
> and
> >> > outputs (artifacts, e.g. jars wars, etc)
> >> >
> >> >
> >> >> but will solve our dependency management issues between
> >> >> the 2 packaging.
> >> >>
> >> >>
> >> >> Are these good solutions? Is there any other good solution available
> >> >> for this scenario ?
> >> >>
> >> >>
> >> >> Regards
> >> >> Narayanan
> >> >>
> >> >> ---------------------------------------------------------------------
> >> >> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> >> >> For additional commands, e-mail: users-help@maven.apache.org
> >> >>
> >> >>
> >>
> >> ---------------------------------------------------------------------
> >> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> >> For additional commands, e-mail: users-help@maven.apache.org
> >>
> >>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--f46d04428802d36e1c04f7b1fb78--

