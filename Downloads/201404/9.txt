From users-return-136222-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Apr 22 06:43:40 2014
Return-Path: <users-return-136222-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 1A16A11174
	for <apmail-maven-users-archive@www.apache.org>; Tue, 22 Apr 2014 06:43:40 +0000 (UTC)
Received: (qmail 26323 invoked by uid 500); 22 Apr 2014 06:43:35 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 26289 invoked by uid 500); 22 Apr 2014 06:43:35 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 26276 invoked by uid 99); 22 Apr 2014 06:43:33 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 22 Apr 2014 06:43:33 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of anders.g.hammar@gmail.com designates 209.85.212.171 as permitted sender)
Received: from [209.85.212.171] (HELO mail-wi0-f171.google.com) (209.85.212.171)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 22 Apr 2014 06:43:27 +0000
Received: by mail-wi0-f171.google.com with SMTP id q5so2716504wiv.16
        for <users@maven.apache.org>; Mon, 21 Apr 2014 23:43:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=vyBvFU+C4JezMUKnwlMwCD89mvGrSqva5dKsyLIZJpU=;
        b=zRqKyL4BxyNOeFTDE138VFY0QHyb4BJ/h5pDGTe5P8i1W0ola3FOsxdU3rlP/kXcuS
         wOARbk9IRRXDE9aoo4Un5C/eiyE1xfD9dzxM4OZLU/Nqm5RA1/7coSm7TFgh4pmrMy5O
         wEiB5IH1zyLzQmbmxD+79PsBsJkUfQEqwlGaVIgtRnNMR3/Ghv4TE0IZtekE1wExI2eE
         VcwjdLtpawuAdNTcgDpfeFdLu4RBEsehhh0Jp0fod6MEYyghZYQg36xKHuGTg/yYV33u
         QYQbcDYXzUG2hMwN858yjJp2TmE1LGjlEEBCJafzQoQjRcGo9AQPJMfsJrqljTFI01xY
         pUCA==
MIME-Version: 1.0
X-Received: by 10.180.103.5 with SMTP id fs5mr16480241wib.33.1398148986519;
 Mon, 21 Apr 2014 23:43:06 -0700 (PDT)
Sender: anders.g.hammar@gmail.com
Received: by 10.194.200.162 with HTTP; Mon, 21 Apr 2014 23:43:06 -0700 (PDT)
In-Reply-To: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>
References: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>
Date: Tue, 22 Apr 2014 08:43:06 +0200
X-Google-Sender-Auth: Pshjoa9hCFE7kZ_DbNZZTXkT0ac
Message-ID: <CAKDUN1vGsx19QaK15McHBij4Qyzhdb-LNF-dL3Zso65O26bTDQ@mail.gmail.com>
Subject: Re: Generating war and Jar from same codebase
From: Anders Hammar <anders@hammar.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=f46d044281fcaf48ce04f79bed6b
X-Virus-Checked: Checked by ClamAV on apache.org

--f46d044281fcaf48ce04f79bed6b
Content-Type: text/plain; charset=UTF-8

#2 is the "Maven way" in a structural sense, although you shouldn't put all
dependencies in the parent but where they are used. So the jar project will
get most of the deps and the war project will have a dependency to the jar
artifact (and possibly some other web related deps).
Also, as the jar project already produces a jar artifact as the main
artifact, you only need to add the m-assembly-p to produce the secondary
"fat jar" artifact.

/Anders


On Tue, Apr 22, 2014 at 2:18 AM, Narayanan K <knarayanan88@gmail.com> wrote:

> Hi
>
> We have a default pom file with packaging "war" for our codebase.
>
> From the same code base we also want to generate a normal jar and a
> fat jar with dependencies.
>
> Currently solution that has been implemented is another pom-jar.xml
> file that has the packaging as jar and maven-assembly-plugin to
> generate the jar with dependencies. We use mvn install -f pom-jar.xml.
>
> But we are in a situation where if any new dependency is added to
> pom.xml, we need to add to pom-jar.xml as well as it is the same
> codebase.
>
> To avoid this we thought of couple of solutions -
>
> 1. Add maven-jar-plugin and maven-assembly-plugin to the default pom
> with packaging war - so it generates a war file, a normal jar file and
> fat jar out of the same pom. So we can do away with the pom-jar.xml.
>
> Not sure if this is a good solution. We tried this, but this is
> working well only in maven 3.0.4. The assembly plugin is not working
> well with Maven 2 (which is in our build environment) while generating
> the fat jar.
>
> 2. Have a parent pom and put all the dependencies and plugins in that
> and have 2 child poms in the same codebase with different names
> inherit from parent pom, one that has packaging of war that generates
> war file and the other child pom has packaging jar with maven assembly
> plugin to generate both normal and fat jar. And all new dependencies
> need to be added only to parent pom.
>
> This solution will make us have 3 pom files in codebase, doesnt look
> very elegant, but will solve our dependency management issues between
> the 2 packaging.
>
>
> Are these good solutions? Is there any other good solution available
> for this scenario ?
>
>
> Regards
> Narayanan
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--f46d044281fcaf48ce04f79bed6b--

