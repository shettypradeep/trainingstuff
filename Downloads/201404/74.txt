From users-return-136224-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Apr 22 07:39:10 2014
Return-Path: <users-return-136224-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 305A9112FF
	for <apmail-maven-users-archive@www.apache.org>; Tue, 22 Apr 2014 07:39:10 +0000 (UTC)
Received: (qmail 12876 invoked by uid 500); 22 Apr 2014 07:39:06 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 12652 invoked by uid 500); 22 Apr 2014 07:39:05 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 12644 invoked by uid 99); 22 Apr 2014 07:39:04 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 22 Apr 2014 07:39:04 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.212.174 as permitted sender)
Received: from [209.85.212.174] (HELO mail-wi0-f174.google.com) (209.85.212.174)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 22 Apr 2014 07:38:59 +0000
Received: by mail-wi0-f174.google.com with SMTP id d1so2778484wiv.7
        for <users@maven.apache.org>; Tue, 22 Apr 2014 00:38:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=zeinWDQ2lgPjwkmVBrsCBP8ORPl7SluVLIuXtUm6YE8=;
        b=ZIL0zyjMqfGgJsp/mWmpdkS6hmfionjuaBfq+BjEL1CMAyywbv5Ok0PMDCUAJ57q4y
         akd1JgabCrS17MVwy4eTZv4ENTwufGgf8oMO2/iYtjKI1GIx8cwi2oz6L0zk/SJVmpkR
         dfQkFE/iliphcqRfEYyFoVhuLCI7Rt8djkSyBWKt1BYh/ouUdvoepWp2FzTRCB7UM9iO
         JrB0cdWKzkMwnvVFqS64ImJn8jLLr8RpJ54UEoZSKnWt0ac+nYS1eawRbJVqcllmrxyR
         fNxcp3g/75v0NjBEBKWbD8Wk3lEewSpEO75APSHc+xezkavzr0fFHaDlxgQ3/Xx/poLO
         By/A==
MIME-Version: 1.0
X-Received: by 10.194.20.65 with SMTP id l1mr9416994wje.39.1398152317752; Tue,
 22 Apr 2014 00:38:37 -0700 (PDT)
Received: by 10.194.205.233 with HTTP; Tue, 22 Apr 2014 00:38:37 -0700 (PDT)
In-Reply-To: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>
References: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>
Date: Tue, 22 Apr 2014 08:38:37 +0100
Message-ID: <CA+nPnMzLSP8AvqNwdjdChgkmF7spcpYzuovQqYQSm5r7aj8wmQ@mail.gmail.com>
Subject: Re: Generating war and Jar from same codebase
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=047d7b4512a23dda5604f79cb418
X-Virus-Checked: Checked by ClamAV on apache.org

--047d7b4512a23dda5604f79cb418
Content-Type: text/plain; charset=UTF-8

On 22 April 2014 01:18, Narayanan K <knarayanan88@gmail.com> wrote:

> Hi
>
> We have a default pom file with packaging "war" for our codebase.
>
> From the same code base we also want to generate a normal jar and a
> fat jar with dependencies.
>
> Currently solution that has been implemented is another pom-jar.xml
> file that has the packaging as jar and maven-assembly-plugin to
> generate the jar with dependencies. We use mvn install -f pom-jar.xml.
>
> But we are in a situation where if any new dependency is added to
> pom.xml, we need to add to pom-jar.xml as well as it is the same
> codebase.
>
> To avoid this we thought of couple of solutions -
>
> 1. Add maven-jar-plugin and maven-assembly-plugin to the default pom
> with packaging war - so it generates a war file, a normal jar file and
> fat jar out of the same pom. So we can do away with the pom-jar.xml.
>
> Not sure if this is a good solution. We tried this, but this is
> working well only in maven 3.0.4. The assembly plugin is not working
> well with Maven 2 (which is in our build environment) while generating
> the fat jar.
>
> 2. Have a parent pom and put all the dependencies and plugins in that
> and have 2 child poms in the same codebase with different names
> inherit from parent pom, one that has packaging of war that generates
> war file and the other child pom has packaging jar with maven assembly
> plugin to generate both normal and fat jar. And all new dependencies
> need to be added only to parent pom.
>
> This solution will make us have 3 pom files in codebase, doesnt look
> very elegant,


actually depends on your point of view. To me this is the more elegant
solution as you clearly see the relationship between inputs (pom.xml) and
outputs (artifacts, e.g. jars wars, etc)


> but will solve our dependency management issues between
> the 2 packaging.
>
>
> Are these good solutions? Is there any other good solution available
> for this scenario ?
>
>
> Regards
> Narayanan
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--047d7b4512a23dda5604f79cb418--

