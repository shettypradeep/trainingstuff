From users-return-136242-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Apr 23 04:21:11 2014
Return-Path: <users-return-136242-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C02EC104A5
	for <apmail-maven-users-archive@www.apache.org>; Wed, 23 Apr 2014 04:21:11 +0000 (UTC)
Received: (qmail 62035 invoked by uid 500); 23 Apr 2014 04:21:08 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 61694 invoked by uid 500); 23 Apr 2014 04:21:07 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 61686 invoked by uid 99); 23 Apr 2014 04:21:06 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 23 Apr 2014 04:21:06 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 23 Apr 2014 04:21:00 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id CC0256A657D
	for <users@maven.apache.org>; Wed, 23 Apr 2014 00:20:38 -0400 (EDT)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id E9xFh7ARK7lg for <users@maven.apache.org>;
	Wed, 23 Apr 2014 00:20:34 -0400 (EDT)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id 2F2726A657E
	for <users@maven.apache.org>; Wed, 23 Apr 2014 00:20:34 -0400 (EDT)
Message-ID: <53573F90.4070200@artifact-software.com>
Date: Wed, 23 Apr 2014 00:20:32 -0400
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: "users@maven.apache.org >> Maven Users List" <users@maven.apache.org>
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.4.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: Generating war and Jar from same codebase
References: <CAAqB__v0TwN+kuL-QYeVQczhX3t+mmd58StYJMtaytFx0ZjnQA@mail.gmail.com>	<CA+nPnMzLSP8AvqNwdjdChgkmF7spcpYzuovQqYQSm5r7aj8wmQ@mail.gmail.com>	<CAAqB__sJZ9WU9vY0pqQqUvBZZJwwut2+B-UxoGbyp2M-a98Obg@mail.gmail.com>	<CAKDUN1uqiMUQZK3v3g7NqcrvbYVi5QOL==YsU-FvN5aL+mVedQ@mail.gmail.com> <CAAqB__t3qHj7HjA-GumSJPS-XGKDO2rD4Pyc9FYOfsdPtbpxbQ@mail.gmail.com>
In-Reply-To: <CAAqB__t3qHj7HjA-GumSJPS-XGKDO2rD4Pyc9FYOfsdPtbpxbQ@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

If you are going to get serious about development, you should install a 
Maven repo.
We use the Community version of Nexus and it works very well.

What are the restrictions on your development?
Almost every other company that uses Maven works as Anders suggests.

Ron

On 23/04/2014 12:15 AM, Narayanan K wrote:
> Hi Anders
>
> The codebase is the same. So having 2 separate directories (for
> modules) and pom in each of them is not required right ?
>
> I can have <modules> in parent pom to specify the 2 child poms that
> are present in the same project level. Tried below and seems it is
> working.
>
> parent pom will have :
>
> <modules>
>    <module>pom-war.xml</module>
>    <module>pom-jar.xml</module>
> <modules>
>
> In both child poms,
>
> <parent>
> <relativePath>./pom-parent.xml</relativePath>
> </parent>
>
> Currently including the jar artifact dependency in war project cannot
> be done due to some restrictions in our development.
>
> Narayanan
>
> On Tue, Apr 22, 2014 at 11:37 AM, Anders Hammar <anders@hammar.net> wrote:
>>> My new maven project structure will be :
>>>
>>> .
>>>   | -- pom.xml (parent pom)
>>>   | -- pom-war.xml (inherits from parent, generates a war)
>>>   | -- pom-jar.xml (inherits from parent, generates a jar)
>>>
>>> There are no modules in the project. All poms are going to be in the
>>> root path of the project.
>>>
>> Wrong!
>> You should create two modules; one for the jar project and one for the war
>> project. Follow the Maven standards and you can use any of the many
>> examples of this on the Internet.
>> I believe we haven't pushed the mantra for some time now, so here it comes:
>> Don't fight Maven!
>>
>> /Anders
>>
>>
>>> 1. Any examples on how to write the parent pom referencing the same
>>> codebase for the child poms.
>>> Will there be a <module> tag for parent pom.  I understand that the
>>> packaging for parent pom will be "pom".
>>>
>>> 2. The child poms will have <relativePath> in <parent> tag as
>>> ./pom.xml. Please correct me if this is wrong.
>>>
>>> Thanks
>>> Narayanan
>>>
>>>
>>>
>>>
>>>
>>> Narayanan
>>>
>>> On Tue, Apr 22, 2014 at 12:38 AM, Stephen Connolly
>>> <stephen.alan.connolly@gmail.com> wrote:
>>>> On 22 April 2014 01:18, Narayanan K <knarayanan88@gmail.com> wrote:
>>>>
>>>>> Hi
>>>>>
>>>>> We have a default pom file with packaging "war" for our codebase.
>>>>>
>>>>>  From the same code base we also want to generate a normal jar and a
>>>>> fat jar with dependencies.
>>>>>
>>>>> Currently solution that has been implemented is another pom-jar.xml
>>>>> file that has the packaging as jar and maven-assembly-plugin to
>>>>> generate the jar with dependencies. We use mvn install -f pom-jar.xml.
>>>>>
>>>>> But we are in a situation where if any new dependency is added to
>>>>> pom.xml, we need to add to pom-jar.xml as well as it is the same
>>>>> codebase.
>>>>>
>>>>> To avoid this we thought of couple of solutions -
>>>>>
>>>>> 1. Add maven-jar-plugin and maven-assembly-plugin to the default pom
>>>>> with packaging war - so it generates a war file, a normal jar file and
>>>>> fat jar out of the same pom. So we can do away with the pom-jar.xml.
>>>>>
>>>>> Not sure if this is a good solution. We tried this, but this is
>>>>> working well only in maven 3.0.4. The assembly plugin is not working
>>>>> well with Maven 2 (which is in our build environment) while generating
>>>>> the fat jar.
>>>>>
>>>>> 2. Have a parent pom and put all the dependencies and plugins in that
>>>>> and have 2 child poms in the same codebase with different names
>>>>> inherit from parent pom, one that has packaging of war that generates
>>>>> war file and the other child pom has packaging jar with maven assembly
>>>>> plugin to generate both normal and fat jar. And all new dependencies
>>>>> need to be added only to parent pom.
>>>>>
>>>>> This solution will make us have 3 pom files in codebase, doesnt look
>>>>> very elegant,
>>>>
>>>> actually depends on your point of view. To me this is the more elegant
>>>> solution as you clearly see the relationship between inputs (pom.xml) and
>>>> outputs (artifacts, e.g. jars wars, etc)
>>>>
>>>>
>>>>> but will solve our dependency management issues between
>>>>> the 2 packaging.
>>>>>
>>>>>
>>>>> Are these good solutions? Is there any other good solution available
>>>>> for this scenario ?
>>>>>
>>>>>
>>>>> Regards
>>>>> Narayanan
>>>>>


-- 
Ron Wheeler
President
Artifact Software Inc
email: rwheeler@artifact-software.com
skype: ronaldmwheeler
phone: 866-970-2435, ext 102


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


