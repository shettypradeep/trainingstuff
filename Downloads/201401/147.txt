From users-return-134921-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Jan  3 16:59:23 2014
Return-Path: <users-return-134921-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 0AC5D10B80
	for <apmail-maven-users-archive@www.apache.org>; Fri,  3 Jan 2014 16:59:23 +0000 (UTC)
Received: (qmail 52277 invoked by uid 500); 3 Jan 2014 16:56:36 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 52210 invoked by uid 500); 3 Jan 2014 16:56:31 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 52195 invoked by uid 99); 3 Jan 2014 16:56:29 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 03 Jan 2014 16:56:29 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.160.43 as permitted sender)
Received: from [209.85.160.43] (HELO mail-pb0-f43.google.com) (209.85.160.43)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 03 Jan 2014 16:56:23 +0000
Received: by mail-pb0-f43.google.com with SMTP id rq2so15883613pbb.2
        for <multiple recipients>; Fri, 03 Jan 2014 08:56:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=h5Q06p95Qjxa7j0FYiR3GvHetTs1sxzYMvnw+g5yXNo=;
        b=M+CA0/aX5+N/y5f3o0KC3lF/gZPJXX4D5I2ema7lpjdBjgtpVJdyb7hfSRXwUB9e7i
         dGZS99LYYsUf1cVqptPk0+GcnPJnvwvhrpBNg6SG2dyEDQE/Ja1mqlUT85dyb/oKy6b/
         CXm4mrfZO0WdpDjYt9cDAFf5rraruy5Q1HDJP2gIg6gDycErt2QtGuHaBAi3X3ZBiPqr
         IXthsixzFRhptzGbwl8yaZCv3JjAC14Ztkgpheu9A8lgPZ/2OEeb0x2AlztYNi/CPRjg
         MoIGFltQa69AKgSrw49CXVVF4NHkoULgB1+Ofu9hCS7aR7OXm59ey8ECuXCIX1NV6XNP
         E2kA==
MIME-Version: 1.0
X-Received: by 10.68.223.9 with SMTP id qq9mr10512796pbc.58.1388768160926;
 Fri, 03 Jan 2014 08:56:00 -0800 (PST)
Received: by 10.68.147.102 with HTTP; Fri, 3 Jan 2014 08:56:00 -0800 (PST)
In-Reply-To: <CA+nPnMwEGmhdU=8TePag8JrfGH7+g+PhH45Sz=GhNPvJ0kOBsQ@mail.gmail.com>
References: <CA+nPnMzmK+YXL1q=XWd=LZEzR7hoyqtO00wJvO85XyynJ+SmDA@mail.gmail.com>
	<CA+nPnMz80i1=TFRmqOAgeGViXNrsfFwxZ8SWaHyxLNm+A7mAOw@mail.gmail.com>
	<op.w83934u7kdkhrr@robertscholte>
	<CA+nPnMxQ5J_s908SRUzckgfrHHFMRduu5kBBAryv9bQLWsj1gA@mail.gmail.com>
	<op.w84chhqkkdkhrr@robertscholte>
	<52C6E4D4.1040707@artifact-software.com>
	<CA+nPnMwEGmhdU=8TePag8JrfGH7+g+PhH45Sz=GhNPvJ0kOBsQ@mail.gmail.com>
Date: Fri, 3 Jan 2014 16:56:00 +0000
Message-ID: <CA+nPnMwwkPt85JLfVSL3fH_6G4sm9MV+YJQPw2bXyoBdQ-BBHw@mail.gmail.com>
Subject: Re: New site content
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>, Ron Wheeler <rwheeler@artifact-software.com>, 
	Maven Developers List <dev@maven.apache.org>
Content-Type: multipart/alternative; boundary=047d7b163441e8539b04ef13c86a
X-Virus-Checked: Checked by ClamAV on apache.org

--047d7b163441e8539b04ef13c86a
Content-Type: text/plain; charset=ISO-8859-1

Also, in case it is not clear, my preferred style is to tell you
information that is important later without distracting you by that
information

A case in point is the information that

> The list of modules in the reactor is sorted in order to ensure that any
dependencies that will be created by the reactor will be built before they
are needed by other modules in the reactor

I'd like a bit snappier text, so it might be that we say

> The list of modules in the reactor is sorted in order to ensure that
modules are built before they are referenced by other other modules in the
reactor

Or better yet, maybe just

> The list of modules in the reactor is sorted

Where "sorted" is a link to a page describing the sort order.

But the most important thing from my point of view is to empower people
with correct information so that if they have a maven command such as

$ mvn clean javadoc:javadoc javadoc:aggregate-jar deploy site-deploy -pl
foo -am

Once they understand Maven, they can come back to the 60 second page and
see that it has not lied to them and that it actually hinted at how you
might go about understanding exactly what will go on with that execution

i.e. there is a build plan for that execution... there are lifecycle phases
and plugin goals... the aggregator goal affects the build plan in the
reactor, etc

But *and this is the important bit* the page itself does not have to
explain such a complex use of maven.


*aside*

One of the most annoying things to me about learning chemistry is that it
is a constant case of being thought something and then at the next level
they pull the rug out from under you and say, oh but actually it's not like
that at all...

They start telling you about electron shells

Then they say, oh but it's Bohr shells

Then they say, oh but it's QM

Then you dig deeper and there are layers to QM

By the time I got my degree in Chemistry I had gone through about 6 layers
of analogies for how the hydrogen atom works:

1st year-3rd year school analogy
4th year-6th year school analogy
1st year Chemistry analogy
2nd year Chemistry analogy
3rd year Chemistry analogy
4th year Chemistry analogy

Worst of all is that each analogy showed the previous ones as being
hopelessly wrong in so many ways.

Now I am fine with explaining things simply until you need to know more,
but when that simply way is just plain wrong!

Newtonian mechanics is at least a very good approximation of relativity for
normal velocities, and if I remember correctly, when the velocities are
small with respect to the speed of light the newtonian solutions are
trivially shown to be a simplified approximation of the general
relativistic model.

But you cannot say the same of QM and the lies I was fed in school...

To bring this back home, I want our top level tutorial to be viewable as a
simplification of what goes on *without* lying to you, i.e. like newtonian
mechanics vs general relativity not like 1st year school chemistry vs 4th
year university chemistry


On 3 January 2014 16:33, Stephen Connolly
<stephen.alan.connolly@gmail.com>wrote:

> FYI here is my current plan for content:
>
> https://cwiki.apache.org/confluence/display/MAVEN/New+Main+Site
>
>
> On 3 January 2014 16:27, Ron Wheeler <rwheeler@artifact-software.com>wrote:
>
>> I agree with Robert's comment.
>> There is a danger that the page will become architecturally elegant and
>> will correctly describe all of the possible uses of Maven but will be too
>> obscure to be useful as a starting point for a new person.
>>
>
> I actually think that the page is near complete from my point of view...
> the remaining content is actually to provide links to pages describing what
> each individual concept is and a link to the next level of depth tutorial.
>
> I what to draw only the outline of what maven does... on the other hand,
> if you can think of an alternative set of content I am only too happy to
> see such suggestions. If you need write access to the wiki, shout out and
> I'll make it so (assuming you are a regular user/dev list contributor)
>
>
>>
>> It is sufficiently difficult to understand the basic concepts in using
>> Maven to create a simple jar with a single POM.
>> You are introducing a lot of new concepts:
>> -Lifecycle
>> -Dependencies
>> -Plug-ins
>> - Project model
>> that a person coming from make or Ant has to grasp.
>>
>> Defining these and the relationships among them in a simple way is
>> sufficiently challenging without trying to abstract a sufficiently general
>> model to handle all of the edge cases.
>>
>> The "Maven way" needs to be explained very simply rather than
>> conceptually complete.
>>
>> Ron
>>
>>
>>
>> On 03/01/2014 11:09 AM, Robert Scholte wrote:
>>
>>> Op Fri, 03 Jan 2014 16:46:33 +0100 schreef Stephen Connolly <
>>> stephen.alan.connolly@gmail.com>:
>>>
>>>  On 3 January 2014 15:17, Robert Scholte <rfscholte@apache.org> wrote:
>>>>
>>>>  Hi,
>>>>>
>>>>> I like the idea of images, however I would avoid a graph to make
>>>>> something
>>>>> clear for new Maven users.
>>>>> Instead I'd prefer a linear model.
>>>>>
>>>>>
>>>> My first draft did not have the graph at the top... perhaps it would be
>>>> better suited at the bottom ;-)
>>>>
>>>>
>>>>
>>>>> I think you should split the current model into pieces:
>>>>>
>>>>> A project model contains:
>>>>> - dependencies
>>>>> - a build plan
>>>>> - other project models ( you can call this the Droste effect[1] )
>>>>>
>>>>>
>>>> I like to think of the project model as not just the root pom.xml but
>>>> all
>>>> the pom.xml files, so there is only one project model, this should make
>>>> understanding how -pl, -am and -amd switches have their effects
>>>>
>>>>
>>>>
>>> IMO these switches are way too detailed for a 60 sec tutorial. I even
>>> think that a large group of the average Maven users don't know these
>>> switches or use them.
>>>
>>>  - ...
>>>>>
>>>>> There are several build-plans, namely: a build-plan for jar, war, ear,
>>>>> etc.
>>>>> Every build plan has a set of predefined plugins,  which you can adjust
>>>>> (with switches?)
>>>>>
>>>>>
>>>> No there is one and only one build plan. We would have to redefine build
>>>> plan everywhere else to be able to use it like that. There is a
>>>> lifecycle
>>>> binding for each packaging
>>>>
>>>>
>>>>
>>> Then buildplan is too abstract. With a real world example: the buildplan
>>> for a house and a bike are completely different. Unless you say: you have a
>>> design, some goods, you mix those goods and you have your product.
>>> Not a useful plan IMO.
>>> At least keep the audience in mind: do they need to know the actual
>>> implementation or do they first need to understand the overall process. I
>>> think the latter is more important, even if this conflicts a bit with the
>>> idiom used by experienced Maven users.
>>> What if we call it "build instructions" (per packaging type) ?
>>>
>>>
>>>>> Now, what does Maven do?
>>>>>
>>>>> Maven reads the build plan and executes it. Some steps of the build
>>>>> plan
>>>>> deliver products ( compiled classes, test results, a package)
>>>>>
>>>>> I think the reactor might be confusing at this level.
>>>>>
>>>>>
>>>> I want the 60sec tutorial to be the grand overview, the next tutorial
>>>> is a
>>>> 5 minute one on how a .jar file gets built
>>>>
>>>> Then you have a multi-module webapp tutorial at 10-15min
>>>>
>>>> I want to reference all the core concepts from the 60 second overview
>>>> even
>>>> if only briefly, that way people can come back to the short page and say
>>>> "ahh yes that is where that fits in again"
>>>>
>>>>
>>>>
>>>>> my 2 cents,
>>>>>
>>>>> Robert
>>>>>
>>>>> [1] http://en.wikipedia.org/wiki/Droste_effect
>>>>>
>>>>>
>>>>> Op Fri, 03 Jan 2014 15:41:15 +0100 schreef Stephen Connolly <
>>>>> stephen.alan.connolly@gmail.com>:
>>>>>
>>>>>
>>>>>  Just in case it wasn't clear... I'm looking for comments and feedback
>>>>>
>>>>>>
>>>>>>
>>>>>> On 3 January 2014 14:35, Stephen Connolly
>>>>>> <stephen.alan.connolly@gmail.com>wrote:
>>>>>>
>>>>>>  OK, so to start working on new content I created some pages on the
>>>>>> wiki:
>>>>>>
>>>>>>>
>>>>>>> The first page is a 60 seconds overview of Maven's build process
>>>>>>>
>>>>>>>
>>>>>>> https://cwiki.apache.org/confluence/display/MAVEN/
>>>>>>> Tutorial:+Maven+in+60+seconds
>>>>>>>
>>>>>>> I am using icons because I want to have subsequent pages give more
>>>>>>> detail
>>>>>>> and use the iconography to enable people to see what is being
>>>>>>> discussed
>>>>>>> more easily
>>>>>>>
>>>>>>>
>>> ---------------------------------------------------------------------
>>> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
>>> For additional commands, e-mail: users-help@maven.apache.org
>>>
>>>
>>>
>>
>> --
>> Ron Wheeler
>> President
>> Artifact Software Inc
>> email: rwheeler@artifact-software.com
>> skype: ronaldmwheeler
>> phone: 866-970-2435, ext 102
>>
>>
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
>> For additional commands, e-mail: users-help@maven.apache.org
>>
>>
>

--047d7b163441e8539b04ef13c86a--

