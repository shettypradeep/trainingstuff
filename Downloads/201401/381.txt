From users-return-135310-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Jan 31 10:34:08 2014
Return-Path: <users-return-135310-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 900CC1011B
	for <apmail-maven-users-archive@www.apache.org>; Fri, 31 Jan 2014 10:34:08 +0000 (UTC)
Received: (qmail 65760 invoked by uid 500); 31 Jan 2014 10:34:03 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 65545 invoked by uid 500); 31 Jan 2014 10:34:00 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 65537 invoked by uid 99); 31 Jan 2014 10:33:59 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 31 Jan 2014 10:33:59 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of anders.g.hammar@gmail.com designates 74.125.82.50 as permitted sender)
Received: from [74.125.82.50] (HELO mail-wg0-f50.google.com) (74.125.82.50)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 31 Jan 2014 10:33:53 +0000
Received: by mail-wg0-f50.google.com with SMTP id l18so8493487wgh.29
        for <users@maven.apache.org>; Fri, 31 Jan 2014 02:33:33 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=Ezl7gfAxrnjXiwoPdmnNKfsAs5jzXi0lJQ/eOuNeTko=;
        b=KfDtVyYx1/RI56jbq7NS5zXQDfLcbVHWuB19JB1kmpXwMVqqcKrAaRPFrPsktiGujz
         EGeweZHb+ZJpGk4KQLKUGpv0Y/Hj4RiHOZo/rUMRvuOPN34IGJQzM1ZmTmsCxhuex4kG
         pjszES+AFAmKUszOK522Zi7eNGM12iPrAc8b3HqwR8OhDUVCoEuzeirljt2VzQBnSCh8
         6XjPm6bfDq7CrCEoPOk2GTTWNZdeIxLvQvvXhkfeDqcUJ7BF79+Qpc4shzKr/mW6vQoB
         K9Ja+aqhKM+Ol4Mea5XhFLep66OIyNBsZb6KcVaL8tTNVihpKEXPGbb4d3M65oZEY4Jp
         SdDA==
MIME-Version: 1.0
X-Received: by 10.180.163.206 with SMTP id yk14mr26602046wib.5.1391164412921;
 Fri, 31 Jan 2014 02:33:32 -0800 (PST)
Sender: anders.g.hammar@gmail.com
Received: by 10.194.137.100 with HTTP; Fri, 31 Jan 2014 02:33:32 -0800 (PST)
In-Reply-To: <CAOonohfsbrJ-7pxsEYFhLJvzb9KS+V6tnM0Je46Ep3m8YLFWSg@mail.gmail.com>
References: <CAOonohfsbrJ-7pxsEYFhLJvzb9KS+V6tnM0Je46Ep3m8YLFWSg@mail.gmail.com>
Date: Fri, 31 Jan 2014 11:33:32 +0100
X-Google-Sender-Auth: FsCttL3NZxnEEONWH0lsiwiod2c
Message-ID: <CAKDUN1vjCWVKV8BQZkjAW4Xb96z_41mhRmP=TNzLHxaX=YdCGg@mail.gmail.com>
Subject: Re: dependency management across projects
From: Anders Hammar <anders@hammar.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=00248c0d7938a8173704f141b4d5
X-Virus-Checked: Checked by ClamAV on apache.org

--00248c0d7938a8173704f141b4d5
Content-Type: text/plain; charset=ISO-8859-1

>
> 1. Provide a single/coherent dependencyManagement section so that users
> using P do not have to care about the different versions of the
> sub-projects: they use P and all the required dependencies are pulled
> automatically
>

Some confusion here. You're talking about depMgmt and then say that the
required deps should be pulled in autoamtically. That will not happen. You
still need to specify the deps you have.
In any case, this is ok if you want to stay on the "Maven way". This
depMgmt could be handled/provided in a separate pom which is then included
in those projects that want to use the platform/product. Sometimes this is
called a BOM (Bill of Material). JBoss provides such a BOM for their app
server for example. A quick Google gave this page talking about that:
http://www.mastertheboss.com/jboss-maven/maven-and-jboss-how-to-use-boms

There is also the possibility of creating a "grouping pom", which lists all
artifacts as dependencies. You would then declare a dependency to that
grouping pom and get all deps magically sucked in. However, this is not
really the "Maven way" in my opinion as you wouldn't specify your direct
deps bu sort of relly on transitive deps. There are some fans of this
approach though here on this list.


> 2. Build configs that *force* each sub-project to run with the list of
> dependencies for the project (to ensure all tests pass, etc). This is to be
> used alongside the regular build job for validation purpose
>

Maybe some enforcer rule?

/Anders


>
> I started to look at this and my first trial was to generate a report with
> all the dependencies of each project and build a consolidated report that I
> can match against the candidates. This would help manage the first goal as
> if a dependency gets added, removed or updated, the global
> dependencyManagement has to be impacted manually (do we upgrade or not,
> etc).
>
> For the second part, it's not easy to force a dependency change in Maven,
> especially if the version has been specified at the project level.
>
> Thanks for reading that far. If you have any idea or know any organisation
> that tried to implement that, I'd be interested
>
> Thanks!
> S.
>

--00248c0d7938a8173704f141b4d5--

