From users-return-135160-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Jan 15 11:39:02 2014
Return-Path: <users-return-135160-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 282B710A62
	for <apmail-maven-users-archive@www.apache.org>; Wed, 15 Jan 2014 11:39:02 +0000 (UTC)
Received: (qmail 52248 invoked by uid 500); 15 Jan 2014 11:38:58 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 51847 invoked by uid 500); 15 Jan 2014 11:38:57 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 51832 invoked by uid 99); 15 Jan 2014 11:38:55 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 15 Jan 2014 11:38:55 +0000
X-ASF-Spam-Status: No, hits=-0.7 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of mcculls@gmail.com designates 209.85.212.170 as permitted sender)
Received: from [209.85.212.170] (HELO mail-wi0-f170.google.com) (209.85.212.170)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 15 Jan 2014 11:38:50 +0000
Received: by mail-wi0-f170.google.com with SMTP id ex4so537200wid.3
        for <users@maven.apache.org>; Wed, 15 Jan 2014 03:38:29 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=content-type:mime-version:subject:from:in-reply-to:date
         :content-transfer-encoding:message-id:references:to;
        bh=P8NVsXOhCOVrZATWeXOEdwFiPCTP4BblPjYk9YIf+0I=;
        b=SboQIf8azTi+EGRPWeHuYSSftS+oXx994nXCLmAyAjxZYA9mg67Fw+x7z2yoeU15Fs
         gPv/fY1r+8w+MUoBFEQrzCmuUTLHiCLbNRCXm45pvmnRY49Xesx1RewT3i7cRTDeg9Ut
         g/C+L0p2m/Ce7Tx3lxYYT77VUPuOcfIP858WrwgGxCxGDvfPr0a9CIIeFW9fz6atY9JR
         ElpzqMoILjKQv3sxKhgaZx1toKnRu2QL4Ot7MMSGnOwo5bW0ESMrNoxB05dH8hZTjnic
         vmDQZpRwVrX0v+rsC1NZyjuxkyjDIFirfOJak4y69LFCEZ4CnVzcNfBWd7j8IK0QIk0B
         5RMg==
X-Received: by 10.194.1.195 with SMTP id 3mr1446974wjo.77.1389785908963;
        Wed, 15 Jan 2014 03:38:28 -0800 (PST)
Received: from tulloch.home (host86-168-125-248.range86-168.btcentralplus.com. [86.168.125.248])
        by mx.google.com with ESMTPSA id e1sm6220589wij.7.2014.01.15.03.38.28
        for <users@maven.apache.org>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Wed, 15 Jan 2014 03:38:28 -0800 (PST)
Content-Type: text/plain; charset=windows-1252
Mime-Version: 1.0 (Mac OS X Mail 7.1 \(1827\))
Subject: Re: How to include @inheritDoc from a dependent jar
From: Stuart McCulloch <mcculls@gmail.com>
In-Reply-To: <F9336B99542D204B8167E81E41261BE111F5CE@ESESSMB109.ericsson.se>
Date: Wed, 15 Jan 2014 11:38:27 +0000
Content-Transfer-Encoding: quoted-printable
Message-Id: <0E9B1C3C-7FC8-45DA-B61D-2EB0BBD52397@gmail.com>
References: <F9336B99542D204B8167E81E41261BE111DF9F@ESESSMB109.ericsson.se> <BLU172-W48D048E6778CF722B380F8AEBF0@phx.gbl>  <F9336B99542D204B8167E81E41261BE111F5CE@ESESSMB109.ericsson.se>
To: Maven Users List <users@maven.apache.org>
X-Mailer: Apple Mail (2.1827)
X-Virus-Checked: Checked by ClamAV on apache.org


On 15 Jan 2014, at 08:20, Mikael Petterson =
<mikael.petterson@ericsson.com> wrote:

> Hi,
>=20
> New try :-)
>=20
> I have the following:
>=20
> Interface in dependency jar javadoc:
>=20
> /**
>     * Deletes the object found at the specified location.
>     *=20
>     * @param Object any type of object
>     * @throws InvalidObjectException lots of text
>     * @throws NoSuchObjectException lots of text
>     */
> public void delete (Object object)throws throws =
InvalidObjectException, NoSuchObjectException;
>=20
> Implementing class:
>=20
> /**
>     * {@inheritDoc}
>     */
>    @Override
>    public void delete(Object object) throws InvalidObjectException, =
NoSuchObjectException {
> 	//implementation of delete
>    }
>=20
> Is this correct or?   Since this will not produce any javadoc for =
implementation of delete ( last code).   =20
>=20
> Do I need to do anything special in the maven javadoc plugin?

The javadoc tool works primarily from source, and by default the maven =
javadoc plugin doesn=92t include the sources of dependencies - which is =
why @inheritDoc doesn=92t include the javadoc from the dependency.

You can tell the javadoc plugin to include the sources of dependencies =
with:

	<includeDependencySources>true</includeDependencySources>

and include the sources of transitive dependencies with:

	=
<includeTransitiveDependencySources>true</includeTransitiveDependencySourc=
es>

You can also use dependencySourceExcludes / dependencySourceIncludes to =
control which particular sources get pulled in=20

( this assumes that the dependency sources - typically produced by the =
maven source plugin - are available in the local/remote repository )

> Br.
>=20
> //mike
>=20
> -----Original Message-----
> From: Martin Gainty [mailto:mgainty@hotmail.com]
> Sent: den 14 januari 2014 13:27
> To: users@maven.apache.org
> Subject: RE: How to include @inheritDoc from a dependent jar
>=20
>=20
>=20
>=20
>> From: mikael.petterson@ericsson.com
>> To: users@maven.apache.org
>> Subject: How to include @inheritDoc from a dependent jar
>> Date: Tue, 14 Jan 2014 12:14:21 +0000
>>=20
>> Hi,
>>=20
>> We are building a maven site that will contain javadoc for our AppX =
api ( jar file).
>> AppX depends on a few other jar files ( that we have built using =
maven) . One dependency jar contain an interface with javadoc and we =
have a class implementing it, in AppX.
>> AppX has @inheritDoc in in the javadoc so we don't have to rewrite =
it.
>>=20
>> When I use the following under <report>
>>=20
>> <plugin>
>> <groupId>org.apache.maven.plugins</groupId>
>> <artifactId>maven-javadoc-plugin</artifactId>
>> <version>2.8.1</version>
>> </plugin>
>>=20
>> But when I open up the javadoc for my Appx and look at the class =
implementing the interface there is no javadoc. What am I missing?
>=20
> MG>@Inheritdoc pulls Javadoc comments @comment @author @param @throws=20=

> MG>@return from Implemented interface If you have none of the Javadoc=20=

> MG>tags in the corresponding base method of implemented interface then=20=

> MG>AppX class will not be able to 'inherit' those Javadoc attributes
>=20
>> Br,
>>=20
>> //mike
> "The longest journey is the the journey inwards..Of him who has chosen =
his dentiny..Who has started upon his quest for the source of his =
being".... Dag Hammarskjold
> 		 	   		 =20
>=20
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>=20


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


