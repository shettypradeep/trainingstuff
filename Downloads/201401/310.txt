From users-return-135159-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Jan 15 10:25:39 2014
Return-Path: <users-return-135159-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BCB0E108D1
	for <apmail-maven-users-archive@www.apache.org>; Wed, 15 Jan 2014 10:25:39 +0000 (UTC)
Received: (qmail 41238 invoked by uid 500); 15 Jan 2014 10:25:34 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 40820 invoked by uid 500); 15 Jan 2014 10:25:33 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 40806 invoked by uid 99); 15 Jan 2014 10:25:30 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 15 Jan 2014 10:25:30 +0000
X-ASF-Spam-Status: No, hits=0.0 required=5.0
	tests=NORMAL_HTTP_TO_IP,RCVD_IN_DNSWL_NONE,SPF_HELO_PASS,SPF_PASS,WEIRD_PORT
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of gcjtmu-turbine-maven-user-846@m.gmane.org designates 80.91.229.3 as permitted sender)
Received: from [80.91.229.3] (HELO plane.gmane.org) (80.91.229.3)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 15 Jan 2014 10:25:25 +0000
Received: from list by plane.gmane.org with local (Exim 4.69)
	(envelope-from <gcjtmu-turbine-maven-user-846@m.gmane.org>)
	id 1W3Neh-0001eq-Gl
	for users@maven.apache.org; Wed, 15 Jan 2014 11:25:03 +0100
Received: from mail.scalaris.com ([62.154.225.82])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <users@maven.apache.org>; Wed, 15 Jan 2014 11:25:03 +0100
Received: from joerg.schaible by mail.scalaris.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <users@maven.apache.org>; Wed, 15 Jan 2014 11:25:03 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: users@maven.apache.org
From: =?UTF-8?B?SsO2cmc=?= Schaible <joerg.schaible@swisspost.com>
Subject: Re: war + webapp dependency classifier
Date: Wed, 15 Jan 2014 11:13:39 +0100
Organization: Swiss Post Solutions
Lines: 121
Message-ID: <lb5n07$l3b$1@ger.gmane.org>
References: <DUB112-DS1002A1E45183D831458A62A9BE0@phx.gbl>
Mime-Version: 1.0
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: 8Bit
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: mail.scalaris.com
User-Agent: KNode/4.11.2
X-Virus-Checked: Checked by ClamAV on apache.org

Hi Adrian,

Adrien Ruffié wrote:

> Hello all,
> 
> I have maven 3
> 
> I have a webapp which derived from a first webapp, I have read this
> article:
> 
> http://ovaraksin.blogspot.fr/2011/09/inheritance-in-maven-based-web-projects
> .html
> 
> But when I try to done following command, "mvn clean package" or a simple
> "mvn dependency:tree" I get the following error:
> 
> [ERROR] Failed to execute goal on project mycompany-ci: Could not resolve
> dependencies for project com.mycompany:mycompany-ci:jar: 001-SNAPSHOT:
> Could not find artifact com.mycompany:mycompany-webapp:war:webapp:003 in
> central (http://192.168.1.160:8081/artifactory/libs-release) -> [Help 1]
> 
> However I have 3 artifacts inside libs-release-local of my artifactory:
> mycompany-webapp-003-classes.jar
> mycompany-webapp-003.jar
> mycompany-webapp-003.pom
> mycompany-webapp-003.war
> 
> I attached also my pom.xml of the second webapp, and below a extract of my
> first webapp (the base webapp)

[snip]

> Do you have an idea of the problem ?

The problem is, that Oleg only published half of the truth in his blog. He 
did not inform, how the jar and the war plugin have to be configured in the 
first project. And the produced artifacts from above clearly shows, that you 
do not have an artifact of type "war" with "webapp" classifier.

============= %< ==============
 <project>
   ...
   <type>jar</type>
   ...
   <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-jar-plugin</artifactId>
       <configuration>
         <outputDirectory>${project.build.directory}/webapp/WEB-
INF/lib</outputDirectory><!--*-->
       </configuration>
     </plugin>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-war-plugin</artifactId>
       <executions>
         <execution>
           <id>war</id>
           <phase>package</phase><!--*-->
           <goals>
             <goal>war</goal><!--*-->
           </goals>
           <configuration>
             <classifier>webapp</classifier><!--*-->
             <webappDirectory>${project.build.directory}/webapp</webappDirectory>
             <packagingExcludes>WEB-INF/classes/**</packagingExcludes>
             <archiveClasses>false</archiveClasses>
             ...
           </configuration>
         </execution>
       </executions>
     </plugin>
     ...
   </plugins>
   ...
 </project>
============= %< ==============

The war is build as attached artifact. It contains no .class files, but the 
jar generated as main target. However, that one has to be generated into the 
right location that the war plugin includes it into the war artifact.

The project that used these two artifacts as dependency must also use a 
special configuration for the war plugin:

============= %< ==============
 <project>
   ...
   <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-war-plugin</artifactId>
       <configuration>
         <dependentWarExcludes>META-INF/MANIFEST.MF,WEB-
INF/lib/*.*</dependentWarExcludes>
         ...
       </configuration>
     </plugin>
     ...
   </plugins>
   ...
 </project>
============= %< ==============

It is used to exclude any stuff from WEB-INF/lib (you may chose to exclude 
WEB-INF/classes/** also) from overlayed wars, since all dependencies are 
taken now into account for the resolve algorithm.

You can move most of the configuration values into properties and the 
configuration itself in the pluginManagement section of a shared parent so 
your projects may just contain the settings marked with "<!--*-->".

I've published this solution here on the list before and Oleg was a 
colleague of mine.

Cheers,
Jörg




---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


