From users-return-134963-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Jan  5 23:56:59 2014
Return-Path: <users-return-134963-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 6331110A7B
	for <apmail-maven-users-archive@www.apache.org>; Sun,  5 Jan 2014 23:56:59 +0000 (UTC)
Received: (qmail 83284 invoked by uid 500); 5 Jan 2014 23:56:57 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 83152 invoked by uid 500); 5 Jan 2014 23:56:57 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 83144 invoked by uid 99); 5 Jan 2014 23:56:57 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 05 Jan 2014 23:56:57 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of ljnelson@gmail.com designates 209.85.216.176 as permitted sender)
Received: from [209.85.216.176] (HELO mail-qc0-f176.google.com) (209.85.216.176)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 05 Jan 2014 23:56:53 +0000
Received: by mail-qc0-f176.google.com with SMTP id i8so16491461qcq.21
        for <users@maven.apache.org>; Sun, 05 Jan 2014 15:56:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=tNRgRpIwyQwkrmqP+F5iYYfXKQi3qzHqv52ZTfaQIXQ=;
        b=G1Xe62nZm9D/vcNWXRE/MPP1oIUqutMPY79bKpeOwQvgUMzcGAmb2nABVmIqmPNRcl
         4i3/x+WD809r4VACn/msz86zixYPHmaNhRbxQTaFXYes7TVSFlfSwQdMBky4coqBZY7l
         ONHmCk69PDuWixa+auV0Gl/TIfGFtEbs6/hFIaq0wQmGQvf74k+LUIaAeInty/0g+3Mv
         7HaV+lpdtS5WIWHhhrvn+gy8yK+QMWFLoR3pOwzDQZy4taiVV6/aMKi7h85JJZ1lvmRE
         obI5YIeTjfYJJoCDiYDoLSuWkc4LhKPIp9+z6aDab3hD/s2IMadKJLR5LVVFqFu6GwoC
         KOFw==
MIME-Version: 1.0
X-Received: by 10.224.42.197 with SMTP id t5mr1498421qae.57.1388966192388;
 Sun, 05 Jan 2014 15:56:32 -0800 (PST)
Received: by 10.96.169.200 with HTTP; Sun, 5 Jan 2014 15:56:32 -0800 (PST)
Date: Sun, 5 Jan 2014 15:56:32 -0800
Message-ID: <CAHNdxu=Y_XEuQwMu4Bt1QgKAJL3qyknoq+n23CpQf895GybyqA@mail.gmail.com>
Subject: =?UTF-8?Q?Armed_with_a_collection_of_Artifacts=2C_what_is_the_Ma?=
	=?UTF-8?Q?ven_Way=E2=84=A2_to_resolve_them=3F?=
From: Laird Nelson <ljnelson@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e0160bdc680a08904ef41e479
X-Virus-Checked: Checked by ClamAV on apache.org

--089e0160bdc680a08904ef41e479
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hello; suppose I have a Collection<Artifact> in my left hand, all elements
of which are not resolved.

(As it happens, I got these indirectly from a DependencyGraphBuilder
invocation.)

What is the Maven Way=E2=84=A2 to resolve these Artifacts?

I know that these Artifacts are unresolved, because each of them returns
false from its isResolved() method.

I need to resolve them so that when I call someArtifact.getFile() it will
return me a non-null File object that actually exists.  At the moment, each
Artifact returns null from this method.

>From this documentation link: http://maven.apache.org/shared/ I found a
project called maven-artifact-resolver.  Great, I thought; this must be how
the innards of Maven do it.

However, that project appears to either be deprecated or incomplete or
orphaned or not used or something; it is at version 1.0 and has no
Javadocs: http://maven.apache.org/shared/maven-artifact-resolver/  All of
its Maven-related dependencies are at 2.1.0, which I've learned through
painful experience means "not the version that does dependency resolution
in the right way but the old Maven 2.x non-Aether way".  So I am led to
conclude that this project is deprecated and to the extent that it is used
anywhere it is old and busted, to quote Will Smith.

(It is true that I am using this from a plugin, and I could of course mark
the plugin as requiring dependency resolution in a particuclar scope..  But
I am now just curious, and want to know what abstraction layer, if any, I'm
missing in Maven that hides the Aether-related details in a similar way as
DependencyGraphBuilder does (from maven-dependency-tree).  I have to assume
there is one, but I haven't been able to find it.)

Thanks,
Best,
Laird

--=20
http://about.me/lairdnelson

--089e0160bdc680a08904ef41e479--

