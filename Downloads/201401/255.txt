From users-return-135195-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Jan 19 15:11:19 2014
Return-Path: <users-return-135195-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9EEC5100A7
	for <apmail-maven-users-archive@www.apache.org>; Sun, 19 Jan 2014 15:11:19 +0000 (UTC)
Received: (qmail 71577 invoked by uid 500); 19 Jan 2014 15:11:15 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 71104 invoked by uid 500); 19 Jan 2014 15:11:09 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 71096 invoked by uid 99); 19 Jan 2014 15:11:08 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 19 Jan 2014 15:11:08 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of anders.g.hammar@gmail.com designates 74.125.82.182 as permitted sender)
Received: from [74.125.82.182] (HELO mail-we0-f182.google.com) (74.125.82.182)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 19 Jan 2014 15:11:03 +0000
Received: by mail-we0-f182.google.com with SMTP id w62so6224107wes.27
        for <users@maven.apache.org>; Sun, 19 Jan 2014 07:10:42 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=U/aBgocsd91AqLhyrYoE6ZL0r1qVvt4OyqUQQgjpzZw=;
        b=mLizHNf38twmoLGHbgjlpEzdJlqj2fKXuuCjyQ8oD+wxvngXvWkyKAvTtodnihLPNU
         EaeX5BOL4fduAMn7maLetxJO44aFchf7CnNX8Ngeb5hjaCtGsgUtugXBJjNjXfkDgFP/
         g5Po7iGpMWTlrRemTvTd4rP0bfPylOLQ/ro/u2pSQRA/XQkYiW/0/RqXRRclrGgpS/GE
         jTb6BujgbQFfoZqK7svI3z7ZzhuxsUbB4hvQxQB6QTe6dQC2lD3SmFVjYVIlbL2gKDMS
         6Z0sW2CiLB9hML0w9kkHZw5X3Hu3cE+TEljmoruApmzU/rYgMiNXfdmpxNVqqlVwybXB
         MmHw==
MIME-Version: 1.0
X-Received: by 10.180.104.164 with SMTP id gf4mr6183508wib.35.1390144242335;
 Sun, 19 Jan 2014 07:10:42 -0800 (PST)
Sender: anders.g.hammar@gmail.com
Received: by 10.194.137.38 with HTTP; Sun, 19 Jan 2014 07:10:42 -0800 (PST)
In-Reply-To: <1390073715693-5781651.post@n5.nabble.com>
References: <1390073715693-5781651.post@n5.nabble.com>
Date: Sun, 19 Jan 2014 16:10:42 +0100
X-Google-Sender-Auth: O4-1sYhzB8Uytp7ilCBnJYCxg9o
Message-ID: <CAKDUN1tXXxr612ifdBEZpvnq7HPcXRb9m3Rv0=EQA6=aXDpY_g@mail.gmail.com>
Subject: Re: dependencies needed by plugin
From: Anders Hammar <anders@hammar.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=14dae9cc9f68c0479804f0542dd1
X-Virus-Checked: Checked by ClamAV on apache.org

--14dae9cc9f68c0479804f0542dd1
Content-Type: text/plain; charset=ISO-8859-1

> I have created a mvn plugin called "foo" that needs a jar file say
> "xyz.jar"
> in order to compile and run.  in the pom file of plugin project foo I have
> provided xyz.jar with "provided" scope in the dependencies section.


That is most likely not correct. If your plugin requires the xyz artifact
it should be declared with compile scope for the plugin.


> I do not want to package the xyz.jar file in the plugin.


You wouldn't package it with your plugin. It would be a dependency of your
plugin, in the same manner as you have dependencies of any Maven project.
It will be retrieved in normal Maven style, i.e. from the declared Maven
repos.


> The plugin "foo"  will be
> triggered by another project say "bar" in its install phase.


How you get that artifact into the (local) repo doesn't matter out of the
plugin's perspective. Don't think about this for solving this question of
yours.


> so I added the
> plugin foo in the <build><plugins><plugin>...</plugin></plugins></build>
> section of the project bar. project bar has the dependency of "xyz.jar"  in
> its <dependencies> section.  when I run install goal the classes present in
> the xyz.jar and which are refered by the plugin foo throw
> ClassNotFoundException at Runtime.
>

Right. When the plugin executes it will get its own classpath, which does
not include the dependencies of the project but only the ones of the
plugin. So just change the declared scope of the xyz artifact dependency in
your plugin's pom to compile and everything should just work!

/Anders


>
> Please let me know how to resolve this.
>
>
>
> --
> View this message in context:
> http://maven.40175.n5.nabble.com/dependencies-needed-by-plugin-tp5781651.html
> Sent from the Maven - Users mailing list archive at Nabble.com.
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--14dae9cc9f68c0479804f0542dd1--

