From users-return-137645-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Oct 29 08:19:45 2014
Return-Path: <users-return-137645-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 996B317E35
	for <apmail-maven-users-archive@www.apache.org>; Wed, 29 Oct 2014 08:19:45 +0000 (UTC)
Received: (qmail 49910 invoked by uid 500); 29 Oct 2014 08:19:44 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 49823 invoked by uid 500); 29 Oct 2014 08:19:44 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 49807 invoked by uid 99); 29 Oct 2014 08:19:43 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 29 Oct 2014 08:19:43 +0000
X-ASF-Spam-Status: No, hits=1.7 required=5.0
	tests=FREEMAIL_ENVFROM_END_DIGIT,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of philip584521@gmail.com designates 209.85.212.176 as permitted sender)
Received: from [209.85.212.176] (HELO mail-wi0-f176.google.com) (209.85.212.176)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 29 Oct 2014 08:19:15 +0000
Received: by mail-wi0-f176.google.com with SMTP id h11so936996wiw.3
        for <users@maven.apache.org>; Wed, 29 Oct 2014 01:18:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=9NqJ0lhw/YVKg/16ZzIll8jXyEURfWdhKVQCmE4TAMw=;
        b=oJUrxXTY5pYPDdhuctjGwoInFsug6hBCxNga67maIcHR+wpIOCitj/BywAMlWl+ROk
         U3OyYwU6DHgPuVWRxn8YkIqoIMBJcgEy1MfiD5x/ZH90Bgk5EKQMI+wk/49p8RZZWgM4
         tBMg1pdCYKg8bu8dj7gk5WJ+hocq+zqFWZkLLgkV1WTAqkQEMTbM8L5T5HJqwKLLWc5E
         eY6FwOnz7G50mEkpSIq7E+qFg6MZ/6RSZ9TBIRfuBye+gN/tWdjG/GWD7Sx1VxuOdWMs
         dSpAjOvs0Lld9khPQO8f2DxyA/K64qFa0+e4a66azPsbozV6AU2/Wi273GCvr63tiSpa
         FF7A==
MIME-Version: 1.0
X-Received: by 10.180.88.162 with SMTP id bh2mr10810693wib.77.1414570710190;
 Wed, 29 Oct 2014 01:18:30 -0700 (PDT)
Received: by 10.216.237.130 with HTTP; Wed, 29 Oct 2014 01:18:30 -0700 (PDT)
In-Reply-To: <CADVp3v9Y+HTn-JPuYz_jAd3yoayW+xN0YyZZ5Gwof5=_fd9bEQ@mail.gmail.com>
References: <CAE8kHEwi-wqWygidE88k+SkM9zvoRyTro2GFEFmsW-ypkpSSiw@mail.gmail.com>
	<CADVp3v9Y+HTn-JPuYz_jAd3yoayW+xN0YyZZ5Gwof5=_fd9bEQ@mail.gmail.com>
Date: Wed, 29 Oct 2014 16:18:30 +0800
Message-ID: <CAE8kHEy7hsUUZx9webzFgELY1HsdZrVYvbr_j34BxB1kn-boHg@mail.gmail.com>
Subject: Re: [pre-verify over deploy]
From: Fay Wong <philip584521@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=f46d04426c58b0d3e905068b6810
X-Virus-Checked: Checked by ClamAV on apache.org

--f46d04426c58b0d3e905068b6810
Content-Type: text/plain; charset=UTF-8

Many thanks to Barrie.

I think what you have clarified is the normal flow of maven practice.

The "deploy" in the context of my previous post means: our developer invoke
a "mvn deploy" command to share the output(bytecode) through the repository
so as to shorten the build time of whole project(as its code base is too
large). Our goal is modular compiling and packaging.

Currently my pain is our developer would deploy broken bytecode to our dev
repository and broken others work. Could i define a intermediate
repository, everytime they deploy, jenkins will verify it. if pass, then
depoy it into dev repository, otherwise, revert the intermediate repository
to keep sync with dev repository.

Is there a easier way to achieve this?

2014-10-29 13:07 GMT+08:00 Barrie Treloar <baerrach@gmail.com>:

> On 29 October 2014 14:00, Fay Wong <philip584521@gmail.com> wrote:
>
> > Hi all,
> >
> > Is there any solution to pre-verify the deploy before it actually got
> into
> > the repository?
> >
> > Take this usecase for example:
> >
> > In a team of 40 developer, every developer will deploy their module at
> any
> > time, once there's a error,
> >
> > the final output software won't work and blocks other developer's flow.
> >
> > So is there any pre-verify solution(such as jenkins CI-server) to be
> > enforced before the deploy overlapped the previous deploy?
>
>
> Not really, this is a process issue.
>
> You need to decide what is in a state of flux, and then when people should
> consume it.
>
> I'm assuming by "deploy" you mean a released artifact and not a snapshot
> one.
> Generally, you should not be deploying your snapshots for consumption by
> other developers, as snapshots could break at any time and you impact
> anyone who depends upon them.
> Instead, when a developer needs a snapshot version they check out the code
> and building it themselves, then when they need to import new changes they
> pull in the changes to the code and rebuild. That way the developer gets to
> choose when they will consume potentially breaking changes.
>
> If these are released artifacts then you have lots of choices on how to do
> this.
> *) By using your version control system and some form of isolation (e.g.
> branches).
>    When the new version is released the developer still needs to pull those
> changes in, and if there are breaking changes can revert back to the
> previous version.
> *) Have someone in a QA role validate that the artifact works prior to
> promoting that version in you parent pom.
>
> The act of deploying into your Maven Repository is independent from the
> consumption of that artifact, it shouldn't be breaking peoples build until
> they start using it.
>

--f46d04426c58b0d3e905068b6810--

