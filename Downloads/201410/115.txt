From users-return-137595-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Oct 20 00:26:31 2014
Return-Path: <users-return-137595-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CC29E17236
	for <apmail-maven-users-archive@www.apache.org>; Mon, 20 Oct 2014 00:26:31 +0000 (UTC)
Received: (qmail 93963 invoked by uid 500); 20 Oct 2014 00:26:29 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 93859 invoked by uid 500); 20 Oct 2014 00:26:29 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 93848 invoked by uid 99); 20 Oct 2014 00:26:29 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 20 Oct 2014 00:26:29 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_NEUTRAL
X-Spam-Check-By: apache.org
Received-SPF: neutral (athena.apache.org: local policy)
Received: from [209.85.192.43] (HELO mail-qg0-f43.google.com) (209.85.192.43)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 20 Oct 2014 00:26:24 +0000
Received: by mail-qg0-f43.google.com with SMTP id j107so2815645qga.30
        for <users@maven.apache.org>; Sun, 19 Oct 2014 17:26:02 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:date:from:to:subject:message-id:in-reply-to
         :references:mime-version:content-type:content-transfer-encoding;
        bh=3pirdUw8y+wB7DLH40jwqTz0MyEFqe47/P17s5M7KgY=;
        b=IFvyqIGx48140WvdSrqLJufJnwXKOgSvA+cFPdzsjvNISlALwpoZrL5/o5EWeh83y6
         GWVUEdM4EWN/CcaBoXGeAnuHiBoSOwr6VX4L3OA8vIa9NyTLjNAiGucBdWazxqy8X1N2
         SsElPVoMtOGbBhcsuQDY4VauEqx9PlX1hoVRq1Ug7pL5HMu8woKg+yF04fWLGgsTz61f
         OYC26vwgiAVth5GMYqCjsW5m2jMCsKgri9/+fUdF99XITkh8vTJbsD6JeTDGuiWDdPs6
         cJ6aqmW4kxE4VVO9LAURa0xav9/1VSGZiWKijCO4/MAUv7sDqdKyIa+nKBewd1Ko1+T/
         wYeQ==
X-Gm-Message-State: ALoCoQlaRacX8ny2lt2dAYSfppi2b7IHtf+skufLGNOpYFFxA/UUepkHNquaOxyeGw7OfU1pgmHp
X-Received: by 10.140.101.133 with SMTP id u5mr18249839qge.84.1413764762798;
        Sun, 19 Oct 2014 17:26:02 -0700 (PDT)
Received: from localhost (HSI-KBW-109-193-068-033.hsi7.kabel-badenwuerttemberg.de. [109.193.68.33])
        by mx.google.com with ESMTPSA id b14sm6609840qaw.6.2014.10.19.17.26.02
        for <users@maven.apache.org>
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Sun, 19 Oct 2014 17:26:02 -0700 (PDT)
Date: Mon, 20 Oct 2014 02:25:57 +0200
From: Bernd Eckenfels <ecki@zusammenkunft.net>
To: users@maven.apache.org
Subject: Re: generate maven dependency difference between two Jenkins builds
Message-ID: <20141020022557.00007108.ecki@zusammenkunft.net>
In-Reply-To: <20141019191150.0000284c.ecki@zusammenkunft.net>
References: <CACGLCJak6BzD1qnd3WWQmDYHjxcxpFrVL+jCqnim2TYZ5=jciw@mail.gmail.com>
	<20141019181952.0000769c.ecki@zusammenkunft.net>
	<CACGLCJYLsVKLNLwGZxeXmdNg_04FDvux8LGjcLKDL5MR+=FAZw@mail.gmail.com>
	<20141019191150.0000284c.ecki@zusammenkunft.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

Hello,

I was looking a bit deeper into making the dependency plugin to print
out the resolved timestamps. I noticed there is already an option
-DoutputAbsoluteArtifactFilename=true which would give me the path of
the files in the local directory. This is all good for released
versions, but it still points to the non-unique snapshot version files.

I am not wondering, is there a way to configure the maven
resolver/dependency management to actually not do that. When I look at
the build output, it does download the meta data and a specific
timestamped version:

Downloaded: https://.../2.1-SNAPSHOT/maven-metadata.xml (2 KB at 0.6
KB/sec)
Downloaded:
https://.../2.1-SNAPSHOT/commons-vfs2-2.1-20141016.153538-385.pom (12 KB
at 22.1 KB/sec)
Downloading:
https://.../2.1-SNAPSHOT/commons-vfs2-2.1-20141016.153538-385.jar
Downloaded:
https://.../2.1-SNAPSHOT/commons-vfs2-2.1-20141016.153538-385.jar
(423 KB at 209.7 KB/sec)

But it still creates a copy of that version without timestamp.

I can imagine this is not really the best situation, why does it not
stick to the uniquely named file?

BTW: whats the best API way to get the snapshot timestamp from a
Artifact object after it was resolved? I tried getDownloadURL(), but it
is null for the Artifacts which are present in the list of 

org.apache.maven.plugin.dependency.utils.DependencyStatusSets.buildArtifactListOutput(Set<Artifact>,
boolean, boolean, boolean)

Gruss
Bernd

 Am Sun, 19 Oct 2014 19:11:50 +0200
schrieb Bernd Eckenfels <ecki@zusammenkunft.net>:

> Ah another thing, I always wished there is an option to archive the
> effective POM instead of the tear downed POM with the
> maven-archiver (addMavenDesciptor).
> 
> Especially when the effective pom also contains the resolved snapshot
> timestamps (which it currently not does).
> 
> Speaking of effective pom, you can create and archive it, then you
> have at least all expressions and profiles locked down.
> 
> Gruss
> Bernd
> 
> Am Sun, 19 Oct 2014 22:17:45 +0530
> schrieb Irfan Sayed <irfu.sayed@gmail.com>:
> 
> > thanks bernd.
> > anyone has any other suggestions please?
> > 
> > regards
> > 
> > 
> > On Sun, Oct 19, 2014 at 9:49 PM, Bernd Eckenfels
> > <ecki@zusammenkunft.net> wrote:
> > 
> > > Hello,
> > >
> > > I dont have a good method for that (especially not if all
> > > dependencies arent fully version-specified. You can use and add
> > > dependencies:list as a target to the maven build, then the
> > > resolved list will be printed in the build log. This list can
> > > change depending on what is available at build time.
> > >
> > > Gruss
> > > Bernd
> > >
> > >   Am Sun, 19 Oct 2014 20:57:29 +0530
> > > schrieb Irfan Sayed <irfu.sayed@gmail.com>:
> > >
> > > > hello,
> > > >
> > > > we have java project and using maven to build the same. we are
> > > > using Jenkins. in Jenkins ,  we can generate the delta of source
> > > > code changes between two builds.
> > > > in the same way, do we have any way wherein , we can generate
> > > > the delta of maven dependencies changed between two builds.
> > > >
> > > > please suggest
> > > >
> > > > regards
> > > >
> > >
> > > ---------------------------------------------------------------------
> > > To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> > > For additional commands, e-mail: users-help@maven.apache.org
> > >
> > >
> > 


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


