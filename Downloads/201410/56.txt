From users-return-137493-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Oct  8 18:45:16 2014
Return-Path: <users-return-137493-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 92C2B175D2
	for <apmail-maven-users-archive@www.apache.org>; Wed,  8 Oct 2014 18:45:16 +0000 (UTC)
Received: (qmail 33522 invoked by uid 500); 8 Oct 2014 18:45:14 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 33443 invoked by uid 500); 8 Oct 2014 18:45:14 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 33417 invoked by uid 99); 8 Oct 2014 18:45:13 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 08 Oct 2014 18:45:13 +0000
X-ASF-Spam-Status: No, hits=1.0 required=5.0
	tests=SPF_SOFTFAIL
X-Spam-Check-By: apache.org
Received-SPF: softfail (athena.apache.org: transitioning domain of laredotornado@gmail.com does not designate 216.139.236.26 as permitted sender)
Received: from [216.139.236.26] (HELO sam.nabble.com) (216.139.236.26)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 08 Oct 2014 18:45:09 +0000
Received: from [192.168.236.26] (helo=sam.nabble.com)
	by sam.nabble.com with esmtp (Exim 4.72)
	(envelope-from <laredotornado@gmail.com>)
	id 1XbwEC-0002JY-NR
	for users@maven.apache.org; Wed, 08 Oct 2014 11:44:48 -0700
Date: Wed, 8 Oct 2014 11:44:48 -0700 (PDT)
From: laredotornado-3 <laredotornado@gmail.com>
To: users@maven.apache.org
Message-ID: <1412793888704-5808128.post@n5.nabble.com>
Subject: Why do running modules in parallel take longer to execute than
 running them in sequence?
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Virus-Checked: Checked by ClamAV on apache.org

Hi,

I=E2=80=99m using Maven 3.2.3, Spring 3.2.11.RELEASE, JUnit 4.11, Java 6, a=
nd the
Surefire/Failsafe 2.17 plugins.  I=E2=80=99m trying to figure out why when =
running a
couple of modules in parallel, it takes much longer than when I run them
individually.  I=E2=80=99m trying to figure out ways to speed up my build. =
 I have
this in my parent pom =E2=80=A6

        <modules>
                <module>core</module>
                =E2=80=A6
=09=09<module>module-x</module>
                <module>module-y</module>
        </modules>

When I run =E2=80=9Cmvn clean install -T 4=E2=80=9D, modules =E2=80=9Cmodul=
e-x=E2=80=9D and =E2=80=9Cmodule-y=E2=80=9D run
in parallel.  Both have a number of integration tests, all using

=09@RunWith(SpringJUnit4ClassRunner.class)
=09@ContextConfiguration({ "classpath:test-context.xml" })
=09public class MyServiceIT=20
=09{

Below are my surefire/failsafe configurations =E2=80=A6

                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                              =20
<artifactId>maven-surefire-plugin</artifactId>
                                <version>2.17</version>
                                <configuration>
                                        <reuseForks>true</reuseForks>
                                        <argLine>-Xmx2048m
-XX:MaxPermSize=3D512M </argLine>
                                      =20
<skipTests>${skipAllTests}</skipTests>
                                </configuration>
                        </plugin>
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                              =20
<artifactId>maven-failsafe-plugin</artifactId>
                                <version>2.17</version>
                                <configuration>
                                        <reuseForks>true</reuseForks>
                                        <argLine>-Xmx4096m
-XX:MaxPermSize=3D512M </argLine>
                                      =20
<skipTests>${skipAllTests}</skipTests>
                                </configuration>
                                <executions>
                                        <execution>
                                                <goals>
                                                      =20
<goal>integration-test</goal>
                                                        <goal>verify</goal>
                                                </goals>
                                        </execution>
                                </executions>
                        </plugin>

When I run the tests in parallel, the modules take 11 minutes and 13
minutes, respectively, to run.  However, running them concurrently (without
the =E2=80=9C-T=E2=80=9D option), they execute in 6 minutes and 9 minutes, =
respectively.=20
I=E2=80=99m confused about why they take so much longer to run when they bo=
th run at
the same time and was hoping some folks could suggest some ways I can
troubleshoot this further.=20



--
View this message in context: http://maven.40175.n5.nabble.com/Why-do-runni=
ng-modules-in-parallel-take-longer-to-execute-than-running-them-in-sequence=
-tp5808128.html
Sent from the Maven - Users mailing list archive at Nabble.com.

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


