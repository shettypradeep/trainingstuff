From users-return-137484-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Oct  8 06:11:25 2014
Return-Path: <users-return-137484-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9291C17513
	for <apmail-maven-users-archive@www.apache.org>; Wed,  8 Oct 2014 06:11:25 +0000 (UTC)
Received: (qmail 20838 invoked by uid 500); 8 Oct 2014 06:11:24 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 20735 invoked by uid 500); 8 Oct 2014 06:11:24 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 20717 invoked by uid 99); 8 Oct 2014 06:11:23 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 08 Oct 2014 06:11:23 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.218.53 as permitted sender)
Received: from [209.85.218.53] (HELO mail-oi0-f53.google.com) (209.85.218.53)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 08 Oct 2014 06:10:57 +0000
Received: by mail-oi0-f53.google.com with SMTP id v63so6318298oia.26
        for <users@maven.apache.org>; Tue, 07 Oct 2014 23:10:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=LboLNbsyDmwVs8bLN9cXQSsR3Xhvmy1Ik6tKh87rOIE=;
        b=j16WV9bKcCmNTmwt0rB4D+hxPmG3tJFkn6OqCiQ5NPROK/ut6KwJkTskYJSnKS23P+
         HgROtZ4CyKOibeN830rKrOiIpVJNIfncV3FNDwP42Y3dOlPyILG6SNyCMIfjJk6ov6N9
         rQjzWhPBPZI53OwtFM9CABmQ4Z4LiD2SgKuY8Y7BRG8amqRdw49MaiPi9BNBqQ+FMR82
         fujtAkTyLOrPm84M7kVxId67mgGSMUZfxtk8TFqPyLbBzwaH6wrbQHtD6lufe0eVNrhE
         MKcx+EwWG5NToZA24uVOIKBHHKsdZ9a4p2i9Em0dBkXcyG+TOtBrHxoBC1BGGwyoLVtT
         RYJA==
MIME-Version: 1.0
X-Received: by 10.60.51.227 with SMTP id n3mr9377080oeo.52.1412748656466; Tue,
 07 Oct 2014 23:10:56 -0700 (PDT)
Received: by 10.60.116.39 with HTTP; Tue, 7 Oct 2014 23:10:56 -0700 (PDT)
In-Reply-To: <CAFDw+_O82zhNQ-=Mo4PcfZpK5Uf13b_YvAUEE0ckDj+pXqhxOQ@mail.gmail.com>
References: <CAFDw+_MfUVBB=t_REqDSniErVuw9CXVpfsnmc9Krv=L69ZkZUA@mail.gmail.com>
	<CA+nPnMyajL-2WYQojVG8RC6LCFeOns-P3TAHJgz+WE09irHoNg@mail.gmail.com>
	<CAFDw+_O82zhNQ-=Mo4PcfZpK5Uf13b_YvAUEE0ckDj+pXqhxOQ@mail.gmail.com>
Date: Wed, 8 Oct 2014 07:10:56 +0100
Message-ID: <CA+nPnMx_F=eDxEKRVyXzBhPELWi6M2z_4Q-KsXkhX68wRPpRug@mail.gmail.com>
Subject: Re: Running integration tests
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a11c2fdf6d35fbd0504e32de8
X-Virus-Checked: Checked by ClamAV on apache.org

--001a11c2fdf6d35fbd0504e32de8
Content-Type: text/plain; charset=UTF-8

Then all I ask is you pay your newfound enlightenment forward...

With this information you can answer some maven newbie questions on the M/L

On Wednesday, 8 October 2014, Robert Mark Bram <robertmarkbram@gmail.com>
wrote:

> Thank you Stephen - this was very useful and came just when I am ready
> to start piecing together this level of detail.
>
> > > 1) Default vs non-default plugins
> > > suddenly a White Rabbit with pink eyes ran close by Alice
>
> So, what I understood from this trip down the rabbit-hole.
> - Maven defines various lifecycles.
> - Each lifecycle defines a list of phases.
> - Each phase will execute a list of goals (defined in plugins).
> - What specific goals get executed in each phase depends on the
> packaging defined for the pom.xml. Generally package defines what sort
> of artifact you are dealing with: jar, war, ear etc.
> - I am using ear packaging, so it binds the surefire:test goal to the
> test phase, but binds nothing to integration-test - which is why I
> need to add the failsafe plugin to my pom.xml. I didn't need to define
> a phase for it, because failsafe's default phase is integration-test.
>
> > > 2) Just run integration tests?
> > > I can see that unit tests are all classes with names like *Test.java
> > > and integration tests are all classes with names like IT.java. But mvn
> > > verify and mvn test seem to run all tests (unit and integrations). Is
> > > there a way to run just one or the other?
>
> So, going from the previous trip down the rabbit hole, I understand
> that when I run "mvn verify" I was seeing unit tests and integration
> tests being run because in order to get to the verify phase (where my
> integration tests should run from), it was running every phase before
> that - including the test phase (where unit tests are run).
>
> > tweaking of
> >
> http://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#skipTests
> > should get you there!
>
> When I was running "mvn test", I was also seeing integration tests
> being run because I had named my integration test classes
> TestBlahBlahIt.java so they were being picked up by both the test and
> integration-test phases.
>
> So, I should more strictly follow the convention of
> - unit tests being Test*.java - and NOT including IT at the end.
> - integration tests being *.IT.java - and NOT starting with Test.


Or start with IT

So failsafe will pickup

ITblahblah.java
BlahblahIT.java

And a third form that I forget


>
>
> > > 3) Run integration tests after compile?
> > > The real reason for question 2 is that I wish to run integration tests
> > > only after I have deployed the new application to ensure the
> > > integration tests run on the server with the new content. Is there a
> > > way to do this?
>
> > Sounds like you should consult my answer to a related question:
> >
> http://stackoverflow.com/questions/16935290/maven-deploy-webapp-to-tomcat-before-junit-test/16936585#16936585
>
> OK, this was very helpful too. In this case, I am working with a
> multi-module project and I decided it was best to add our selenium
> tests in a new project to keep them away from other project code. We
> have 13 pom.xml files, not counting the one I am adding. So this is my
> next challenge, to ensure I get this project executing after the
> others have done their job and deployed to the app server.


Dependencies will ensure sequencing of modules


>
> Why, sometimes I've believed as many as five impossible things before
> after-noon tea. Time for one more before I knock off at 5pm.
>
> Rob
> :)
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org <javascript:;>
> For additional commands, e-mail: users-help@maven.apache.org
> <javascript:;>
>
>

-- 
Sent from my phone

--001a11c2fdf6d35fbd0504e32de8--

