From users-return-136553-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Jun 11 05:56:03 2014
Return-Path: <users-return-136553-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id CF6C31107D
	for <apmail-maven-users-archive@www.apache.org>; Wed, 11 Jun 2014 05:56:03 +0000 (UTC)
Received: (qmail 5791 invoked by uid 500); 11 Jun 2014 05:56:02 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 5704 invoked by uid 500); 11 Jun 2014 05:56:02 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 5693 invoked by uid 99); 11 Jun 2014 05:56:02 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 11 Jun 2014 05:56:02 +0000
X-ASF-Spam-Status: No, hits=-0.7 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: local policy includes SPF record at spf.trusted-forwarder.org)
Received: from [209.85.223.179] (HELO mail-ie0-f179.google.com) (209.85.223.179)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 11 Jun 2014 05:55:59 +0000
Received: by mail-ie0-f179.google.com with SMTP id tr6so2574177ieb.24
        for <users@maven.apache.org>; Tue, 10 Jun 2014 22:55:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=h+KZKIq0tbKmayAlubfnlnB09pFX2TjobvGU5Lhyawg=;
        b=obIFtguQpLuvr1U/tH+GaQsx/sihQx5ZagSmyIWL23+E5oOfVFHJDf6FKGjEjpP3Xs
         R426RFFF8YNCU4mpX+UnJbQfS6olAxtOS2/SG8GMhLQCAhShQ245AtF1Epzvu7rA44SF
         uOd/a3Q+fXWVC8mvZ0RTUgUHoKK4pbBo3M6OjXh/nGeiDH3J+T5NOvqmWkuz49hm0blt
         FxLGY7GxtrrRT8TmdPFZA8jEC6jgjdTRJ3vDpmjZ62p+N2QfRcwbjQTr+3ZX8ZdiSJes
         tJAm2GYWRupv4DiBDWjyy+W+K/yiiddi8Cioci5v/hqwq9oIF/XdaCiOKC+OV6673eWw
         VcWQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:sender:in-reply-to:references:date
         :message-id:subject:from:to:content-type;
        bh=h+KZKIq0tbKmayAlubfnlnB09pFX2TjobvGU5Lhyawg=;
        b=X1DoijmEdBIO0uEsMMCqu0ZEFyuRsfZSzgRbND6zySaQrii3dkL91uR/DPCG81em4G
         M64tZpdkMGH7rPN8IDu+DQSc61xoLGbu0NbMBwtHrdiU7UO3K33wgohUyNa0sh+zeZAB
         UO+PXPkhLp2+WxnDcqx+KMm4UYbw7B/lY0xG4jv0KGR7HEcZe+aBO//TnEyMK0epeJk5
         IePU80hDmfBTmrZqVECL+1c7NjR0VQWy3KuQJXPHwm2cdQjIqVNy8G11RTUvffbl5SYi
         Kwbu4L4f1apKYXIMPgeNEvpcngcEXDAs+JQJ2DA55wHRqD5tiva0dTAItSImz3qgM40b
         M64w==
X-Gm-Message-State: ALoCoQndH25BhYEFJ3ZV0SuCPKZpe1APkamtV/26WLyFMZEtPJDjJ3BSuZQmiR0RKD3rcUFBhyDy
MIME-Version: 1.0
X-Received: by 10.42.26.212 with SMTP id g20mr44964998icc.14.1402466135019;
 Tue, 10 Jun 2014 22:55:35 -0700 (PDT)
Sender: kristian.rosenvold@zenior.no
Received: by 10.50.119.97 with HTTP; Tue, 10 Jun 2014 22:55:34 -0700 (PDT)
In-Reply-To: <CAC21K-4EhYedVirNOW8Yp+wbrJQzpnrdWD_nGzssQosqP0Fojg@mail.gmail.com>
References: <CAC21K-4EhYedVirNOW8Yp+wbrJQzpnrdWD_nGzssQosqP0Fojg@mail.gmail.com>
Date: Wed, 11 Jun 2014 07:55:34 +0200
X-Google-Sender-Auth: YOYMqc4B7cBbgntOhC9CrK6Xz_4
Message-ID: <CAJZRQKzmzMNBkQo97Cw5zv40KFEwhGEBbNYuTOTTz_zswv4m3Q@mail.gmail.com>
Subject: Re: Concurrent maven processes using the same repository failing when
 new snapshot version downloaded
From: Kristian Rosenvold <kristian.rosenvold@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: text/plain; charset=UTF-8
X-Virus-Checked: Checked by ClamAV on apache.org

This is a known problem (old one), which might actaully be getting a
fix "soon". In the meantime, checkout

http://blog.sonatype.com/2009/01/maven-continuous-integration-best-practices/

Kristian


2014-06-11 2:27 GMT+02:00 Ben Podgursky <bpodgursky@gmail.com>:
> Hi all,
>
> I'm running into a problem where maven processes using a shared repository
> are getting exceptions when a new snapshot dependency is deployed.  Our
> setup is:
>
> - We use Jenkins continuous integration builds.  The builds are just
> running a simple "mvn clean deploy".
> - Our build machines often run builds for two projects simultaneously.
>  When running simultaneously, the builds will share a maven respository.
>
> We have (for simplification) three projects A, B, and C.  Each of these is
> deployed as a snapshot at the end of a successful build.  Projects B and C
> each depend on a snapshot version of of project A.
>
> Intermittently, when projects B and C are running simultaneously on a
> machine, the build which started first will begin to fail all tests with
> java.lang.NoClassDefFoundError, where the classes not found belong to
> project A.  I've verified that the classfiles are present in A's deployed
> jar.
>
> I *believe* what is happening is:
>
> 1) project B begins building, and starts surefire tests.
> 2) project A deploys a new snapshot version (possibly from a different
> machine)
> 3) project C begings building.  Because our snapshot update policy is set
> to "always", it downloads the new version of "A-1.0-SNAPSHOT.jar", and
> replaces the previous version in the local respository
> 4) the tests for project B start to fail because they are using a reference
> to a file which has been deleted
>
> I've looked into what surefire is putting on the classpath, and even though
> the repository has the specific version of the snapshot available, (ex
> "A-1.0-20140610.213850-369.jar"), it's putting
> "analysis_lib-1.0-SNAPSHOT.jar" on the classpath.  I don't understand why
> maven would prefer to use the artifact which could get replaced rather than
> the semi-permanent artifact (I understand snapshot versions aren't
> permanent, but it would at least survive for the duration of the build.)
>
> My questions are:
>
> - does this sequence of events seem plausible, or is there another
> explanation to the exceptions I'm seeing?
>
> - is there a way I can force maven to put the timestamped version of
> artifacts on the classpath instead of the SNAPSHOT versions?  I understand
> I can specify the timestamp in the pom.xml, but that's not what I want--I
> just want it to choose the current version when the build starts, and use
> that for the duration of the build.  I'm also familiar with mvn
> versions:lock-snapshots, but I'd rather avoid it if possible because (1) it
> adds build complexity and (2) it doesn't lock versions pulled in
> transitively (ex D -> A -> B, if D was a snapshot), since I don't want to
> deploy artifacts with locked versions
>
>
> Thanks for your time,
>
> Ben

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


