From users-return-136820-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Jul 21 22:54:26 2014
Return-Path: <users-return-136820-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 2EABE119EC
	for <apmail-maven-users-archive@www.apache.org>; Mon, 21 Jul 2014 22:54:26 +0000 (UTC)
Received: (qmail 5739 invoked by uid 500); 21 Jul 2014 22:54:24 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 5656 invoked by uid 500); 21 Jul 2014 22:54:24 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 5645 invoked by uid 99); 21 Jul 2014 22:54:23 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 21 Jul 2014 22:54:23 +0000
X-ASF-Spam-Status: No, hits=2.2 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_NONE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of mgainty@hotmail.com designates 65.55.116.45 as permitted sender)
Received: from [65.55.116.45] (HELO BLU004-OMC1S34.hotmail.com) (65.55.116.45)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 21 Jul 2014 22:54:20 +0000
Received: from BLU172-W40 ([65.55.116.8]) by BLU004-OMC1S34.hotmail.com with Microsoft SMTPSVC(7.5.7601.22712);
	 Mon, 21 Jul 2014 15:53:55 -0700
X-TMN: [g8sf6SzUknAcU0nnKvZ4jsAHQmyr67Rj]
X-Originating-Email: [mgainty@hotmail.com]
Message-ID: <BLU172-W40C66356CCF5989329FB7BAEF00@phx.gbl>
Content-Type: multipart/alternative;
	boundary="_d8d991aa-25f0-4e26-92c7-3722c2b52323_"
From: Martin Gainty <mgainty@hotmail.com>
To: "users@maven.apache.org" <users@maven.apache.org>
Subject: RE: maven-dependency-plugin unpacking aar format?
Date: Mon, 21 Jul 2014 18:53:54 -0400
Importance: Normal
In-Reply-To:
 <CAEBcyzq7aznBgKfVH6DzyzWnVmSwTs3zpfrsOZY1xTUnfqaF6g@mail.gmail.com>
References:
 <CAA8BW8HFWKNmv_ZTE9wuYQMDJ_FxUzhkXAnW_g3wrVFjovj=cA@mail.gmail.com>,<53CD80A3.6040302@gmx.de>,<CAA8BW8FDv2vZhEg5OSOFkyWuRvUAt_Z_tYx7iV80MuQLEx2fcw@mail.gmail.com>,<CAEBcyzq7aznBgKfVH6DzyzWnVmSwTs3zpfrsOZY1xTUnfqaF6g@mail.gmail.com>
MIME-Version: 1.0
X-OriginalArrivalTime: 21 Jul 2014 22:53:55.0827 (UTC) FILETIME=[A68F7430:01CFA536]
X-Virus-Checked: Checked by ClamAV on apache.org

--_d8d991aa-25f0-4e26-92c7-3722c2b52323_
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Here is an aar straight from Axis version example:

//layout of version.aar:

   created: META-INF/
  inflated: META-INF/MANIFEST.MF
   created: sample/
   created: sample/axisversion/
  inflated: sample/axisversion/Version.class
  inflated: META-INF/services.xml


//org.apache.axis2.deployment.DeploymentEngine axis code used to populateSe=
rvice with .aar contents:

    protected ArrayList populateService(AxisServiceGroup serviceGroup=2C
                                        URL servicesURL=2C
                                        String serviceName) throws Deployme=
ntException {
        try {
            serviceGroup.setServiceGroupName(serviceName)=3B
            ClassLoader serviceClassLoader =3D Utils.createClassLoader(
                    new URL[]{servicesURL}=2C
                    axisConfig.getServiceClassLoader()=2C
                    true=2C
                    (File) axisConfig.getParameterValue(Constants.Configura=
tion.ARTIFACTS_TEMP_DIR)=2C
                    axisConfig.isChildFirstClassLoading())=3B
            String metainf =3D "meta-inf"=3B
            serviceGroup.setServiceGroupClassLoader(serviceClassLoader)=3B
            //processing wsdl.list
            InputStream wsdlfilesStream =3D
                    serviceClassLoader.getResourceAsStream("meta-inf/wsdl.l=
ist")=3B
            if (wsdlfilesStream =3D=3D null) {
                wsdlfilesStream =3D serviceClassLoader.getResourceAsStream(=
"META-INF/wsdl.list")=3B
                if (wsdlfilesStream !=3D null) {
                    metainf =3D "META-INF"=3B
                }
            }
            HashMap servicesMap =3D new HashMap()=3B
            if (wsdlfilesStream !=3D null) {
                ArchiveReader reader =3D new ArchiveReader()=3B
                BufferedReader input =3D new BufferedReader(new InputStream=
Reader(wsdlfilesStream))=3B
                String line=3B
                while ((line =3D input.readLine()) !=3D null) {
                    line =3D line.trim()=3B
                    if (line.length() > 0 && line.charAt(0) !=3D '#') {
                        line =3D metainf + "/" + line=3B
                        try {
                            List services =3D reader.getAxisServiceFromWsdl=
(
                                    serviceClassLoader.getResourceAsStream(=
line)=2C
                                    serviceClassLoader=2C line)=3B
                            if (services !=3D null) {
                                for (Object service : services) {
                                    AxisService axisService =3D (AxisServic=
e) service=3B
                                    servicesMap.put(axisService.getName()=
=2C axisService)=3B
                                }
                            }

                        } catch (Exception e) {
                            throw new DeploymentException(e)=3B
                        }
                    }
                }
            }
            InputStream servicexmlStream =3D
                    serviceClassLoader.getResourceAsStream("META-INF/servic=
es.xml")=3B
            if (servicexmlStream =3D=3D null) {
                servicexmlStream =3D serviceClassLoader.getResourceAsStream=
("meta-inf/services.xml")=3B
            } else {
                metainf =3D "META-INF"=3B
            }
            if (servicexmlStream =3D=3D null) {
                throw new DeploymentException(
                        Messages.getMessage(DeploymentErrorMsgs.SERVICE_XML=
_NOT_FOUND=2C
                                servicesURL.toString()))=3B
            }
            DescriptionBuilder builder =3D new DescriptionBuilder(servicexm=
lStream=2C configContext)=3B
            OMElement rootElement =3D builder.buildOM()=3B
            String elementName =3D rootElement.getLocalName()=3B

            if (TAG_SERVICE.equals(elementName)) {
                AxisService axisService =3D null=3B
                String wsdlLocation =3D "META-INF/service.wsdl"=3B
                InputStream wsdlStream =3D
                        serviceClassLoader.getResourceAsStream(wsdlLocation=
)=3B
                URL wsdlURL =3D serviceClassLoader.getResource(metainf + "/=
service.wsdl")=3B
                if (wsdlStream =3D=3D null) {
                    wsdlLocation =3D "META-INF/" + serviceName + ".wsdl"=3B
                    wsdlStream =3D serviceClassLoader
                            .getResourceAsStream(wsdlLocation)=3B
                    wsdlURL =3D serviceClassLoader.getResource(wsdlLocation=
)=3B
                }
                if (wsdlStream !=3D null) {
                    WSDL11ToAxisServiceBuilder wsdl2AxisServiceBuilder =3D
                            new WSDL11ToAxisServiceBuilder(wsdlStream=2C nu=
ll=2C null)=3B
                    File file =3D Utils.toFile(servicesURL)=3B
                    if (file !=3D null && file.exists()) {
                        wsdl2AxisServiceBuilder.setCustomWSDLResolver(
                                new AARBasedWSDLLocator(wsdlLocation=2C fil=
e=2C wsdlStream))=3B
                        wsdl2AxisServiceBuilder.setCustomResolver(
                                new AARFileBasedURIResolver(file))=3B
                    }
                    if (wsdlURL !=3D null) {
                        wsdl2AxisServiceBuilder.setDocumentBaseUri(wsdlURL.=
toString())=3B
                    }
                    axisService =3D wsdl2AxisServiceBuilder.populateService=
()=3B
                    axisService.setWsdlFound(true)=3B
                    axisService.setCustomWsdl(true)=3B
                    axisService.setName(serviceName)=3B
                }
                if (axisService =3D=3D null) {
                    axisService =3D new AxisService(serviceName)=3B
                }

                axisService.setParent(serviceGroup)=3B
                axisService.setClassLoader(serviceClassLoader)=3B

                ServiceBuilder serviceBuilder =3D new ServiceBuilder(config=
Context=2C axisService)=3B
                AxisService service =3D serviceBuilder.populateService(root=
Element)=3B

                ArrayList serviceList =3D new ArrayList()=3B
                serviceList.add(service)=3B
                return serviceList=3B
            } else if (TAG_SERVICE_GROUP.equals(elementName)) {
                ServiceGroupBuilder groupBuilder =3D new ServiceGroupBuilde=
r(rootElement=2C servicesMap=2C
                        configContext)=3B
                ArrayList servicList =3D groupBuilder.populateServiceGroup(=
serviceGroup)=3B
                Iterator serviceIterator =3D servicList.iterator()=3B
                while (serviceIterator.hasNext()) {
                    AxisService axisService =3D (AxisService) serviceIterat=
or.next()=3B
                    String wsdlLocation =3D "META-INF/service.wsdl"=3B
                    InputStream wsdlStream =3D
                            serviceClassLoader.getResourceAsStream(wsdlLoca=
tion)=3B
                    URL wsdlURL =3D serviceClassLoader.getResource(wsdlLoca=
tion)=3B
                    if (wsdlStream =3D=3D null) {
                        wsdlLocation =3D "META-INF/" + serviceName + ".wsdl=
"=3B
                        wsdlStream =3D serviceClassLoader
                                .getResourceAsStream(wsdlLocation)=3B
                        wsdlURL =3D
                                serviceClassLoader.getResource(wsdlLocation=
)=3B
                    }
                    if (wsdlStream !=3D null) {
                        WSDL11ToAxisServiceBuilder wsdl2AxisServiceBuilder =
=3D
                                new WSDL11ToAxisServiceBuilder(wsdlStream=
=2C axisService)=3B
                        File file =3D Utils.toFile(servicesURL)=3B
                        if (file !=3D null && file.exists()) {
                            wsdl2AxisServiceBuilder.setCustomWSDLResolver(
                                    new AARBasedWSDLLocator(wsdlLocation=2C=
 file=2C wsdlStream))=3B
                            wsdl2AxisServiceBuilder.setCustomResolver(
                                    new AARFileBasedURIResolver(file))=3B
                        }
                        if (wsdlURL !=3D null) {
                            wsdl2AxisServiceBuilder.setDocumentBaseUri(wsdl=
URL.toString())=3B
                        }
                        axisService =3D wsdl2AxisServiceBuilder.populateSer=
vice()=3B
                        axisService.setWsdlFound(true)=3B
                        axisService.setCustomWsdl(true)=3B
                        // Set the default message receiver for the operati=
ons that were
                        // not listed in the services.xml
                        Iterator operations =3D axisService.getOperations()=
=3B
                        while (operations.hasNext()) {
                            AxisOperation operation =3D (AxisOperation) ope=
rations.next()=3B
                            if (operation.getMessageReceiver() =3D=3D null)=
 {
                                operation.setMessageReceiver(loadDefaultMes=
sageReceiver(
                                        operation.getMessageExchangePattern=
()=2C axisService))=3B
                            }
                        }
                    }
                }
                return servicList=3B
            }
        } catch (IOException e) {
            throw new DeploymentException(e)=3B
        } catch (XMLStreamException e) {
            throw new DeploymentException(e)=3B
        }
        return null=3B
    }

does this answer your question?
Martin=20
______________


> Date: Tue=2C 22 Jul 2014 07:56:55 +1000
> Subject: Re: maven-dependency-plugin unpacking aar format?
> From: william.ferguson@xandar.com.au
> To: users@maven.apache.org
>=20
> David=2C what the use case for unpacking the AAR?
>=20
>=20
> William
>=20
>=20
> On Tue=2C Jul 22=2C 2014 at 7:27 AM=2C David Hoffer <dhoffer6@gmail.com> =
wrote:
>=20
> > Here is a simplified project showing my use-case=2C I hope this helps. =
 Note
> > I'm using unpack-dependencies as the aar is a module in the same projec=
t=3B
> > however I assume the same problem exists with unpack=2C if that's the c=
ase
> > that would make the test project even simpler.
> >
> > <?xml version=3D"1.0" encoding=3D"UTF-8"?>
> >
> > <project xmlns=3D"http://maven.apache.org/POM/4.0.0" xmlns:xsi=3D"
> > http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=3D"
> > http://maven.apache.org/POM/4.0.0
> > http://maven.apache.org/xsd/maven-4.0.0.xsd">
> >
> >     <modelVersion>4.0.0</modelVersion>
> >
> >     <groupId>com.company.project</groupId>
> >     <artifactId>service</artifactId>
> >     <version>1.0-SNAPSHOT</version>
> >
> >     <packaging>pom</packaging>
> >
> >     <dependencies>
> >         <!--note: maven-dependency-plug fails reporting that aar is not
> > supported-->
> >         <dependency>
> >             <groupId>com.company.project</groupId>
> >             <artifactId>axis-service</artifactId>
> >             <type>aar</type>
> >             <version>1.0-SNAPSHOT</version>
> >         </dependency>
> >         <!--note: I assume it will have the same problem unpacking a pu=
blic
> > artifact such as this-->
> >         <dependency>
> >             <groupId>com.helpshift</groupId>
> >             <artifactId>android-aar</artifactId>
> >             <version>3.4.2</version>
> >             <type>aar</type>
> >         </dependency>
> >     </dependencies>
> >
> >     <build>
> >         <plugins>
> >             <plugin>
> >                 <groupId>org.apache.maven.plugins</groupId>
> >                 <artifactId>maven-dependency-plugin</artifactId>
> >                 <executions>
> >                     <execution>
> >                         <id>unpack-axis-service</id>
> >                         <phase>generate-resources</phase>
> >                         <goals>
> >                             <goal>unpack-dependencies</goal>
> >                         </goals>
> >                         <configuration>
> >
> > <includeArtifactIds>axis-service</includeArtifactIds>
> >
> >
> > <outputDirectory>${project.build.directory}/generated-resources/axis</o=
utputDirectory>
> >                             <overWriteReleases>true</overWriteReleases>
> >                             <overWriteSnapshots>true</overWriteSnapshot=
s>
> >
> > <includes>META-INF/*.wsdl=2CMETA-INF/schema/**/*.xsd</includes>
> >                         </configuration>
> >                     </execution>
> >                 </executions>
> >             </plugin>
> >         </plugins>
> >     </build>
> >
> > </project>
> >
> >
> >
> > On Mon=2C Jul 21=2C 2014 at 3:05 PM=2C Karl Heinz Marbaise <khmarbaise@=
gmx.de>
> > wrote:
> >
> > > HI David=2C
> > >
> > >
> > >
> > > > I'm getting the following error trying to unpack some files from an
> > aar.
> > >
> > >>   Is this not supported?  Is there any way to do this?
> > >>
> > >> Failed to execute goal
> > >> org.apache.maven.plugins:maven-dependency-plugin:2.8:unpack-dependen=
cies
> > >> (unpack-service) on project service: Unknown archiver type: No such
> > >> archiver: 'aar'. -> [Help 1]
> > >>
> > >
> > > Could you please prepare a example project which reproduces the
> > > problem..so i can create a JIRA issue for this...
> > >
> > > Kind regards
> > > Karl-Heinz Marbaise
> > >
> > > ---------------------------------------------------------------------
> > > To unsubscribe=2C e-mail: users-unsubscribe@maven.apache.org
> > > For additional commands=2C e-mail: users-help@maven.apache.org
> > >
> > >
> >
 		 	   		  =

--_d8d991aa-25f0-4e26-92c7-3722c2b52323_--

