From users-return-136867-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Thu Jul 24 11:28:20 2014
Return-Path: <users-return-136867-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 15CE011EDF
	for <apmail-maven-users-archive@www.apache.org>; Thu, 24 Jul 2014 11:28:20 +0000 (UTC)
Received: (qmail 98113 invoked by uid 500); 24 Jul 2014 11:28:18 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 98031 invoked by uid 500); 24 Jul 2014 11:28:18 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 98015 invoked by uid 99); 24 Jul 2014 11:28:18 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 24 Jul 2014 11:28:18 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of anders.g.hammar@gmail.com designates 74.125.82.180 as permitted sender)
Received: from [74.125.82.180] (HELO mail-we0-f180.google.com) (74.125.82.180)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 24 Jul 2014 11:28:13 +0000
Received: by mail-we0-f180.google.com with SMTP id w61so2613050wes.39
        for <users@maven.apache.org>; Thu, 24 Jul 2014 04:27:52 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:content-type;
        bh=9Bt6JsHCappqEhkXBKWN5Mxq5JUNf1HKjQqDNqRuVNM=;
        b=SQzOnQZmrz+5UtbKtFBfZPSw3pHgAP7Envlj+lTCxZjpbgcLQ9hl86VnY9G3+WSRKc
         nem9AQEWH0lkfq7YG7vcJ0d/rvMmrb6Or7U5uHPmkg8MPM2EUWdo+3u5b4z33lRdkw6v
         9h6UjVN4sf3/0nuT+tBLDdtPJeWlM+YXofU6DNtIf7TCdEgct76odkf0/W15BsSILuje
         9pUPuTRB5JK0Q7XKaR0ZsM0H4YHo1IBJg4tkV5YpCJYEiHfjQHftXQi1gye0cBY91Yie
         w5w+sXIIQTOrhV/v64DvPnOEB/xg1VZhIPHVwmAjlsWi7A5GdnLtBjZ2r1J00JUDVDJK
         J5AQ==
MIME-Version: 1.0
X-Received: by 10.180.106.138 with SMTP id gu10mr14233642wib.21.1406201271908;
 Thu, 24 Jul 2014 04:27:51 -0700 (PDT)
Sender: anders.g.hammar@gmail.com
Received: by 10.194.32.195 with HTTP; Thu, 24 Jul 2014 04:27:51 -0700 (PDT)
In-Reply-To: <5F274ED30832C44A8778291D0DD82A7A36F7D2@ev002.EVANS6.local>
References: <5F274ED30832C44A8778291D0DD82A7A36F7D2@ev002.EVANS6.local>
Date: Thu, 24 Jul 2014 13:27:51 +0200
X-Google-Sender-Auth: ge7iL9epBhbBPhhuR-d-yxV1Ybo
Message-ID: <CAKDUN1t75kfpGCwkSjW8s-jWKqf_0nQX_qyG+mM+rd2G1jNhiw@mail.gmail.com>
Subject: Re: Upload 3rd party jars retaining original names
From: Anders Hammar <anders@hammar.net>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=e89a8f2345d34b80bc04feeebf1a
X-Virus-Checked: Checked by ClamAV on apache.org

--e89a8f2345d34b80bc04feeebf1a
Content-Type: text/plain; charset=UTF-8

The name of artifacts in a Maven repo is not possible to specify yourself.
As you've noticed, they are called artifactId-version (and you can also
have a classifier). So no, you cannot give them their "original" name if
that is different from that naming scheme.

/Anders


On Thu, Jul 24, 2014 at 1:20 PM, David Evans <david@evans6.me.uk> wrote:

> Is it possible to put a bunch of 3rd party jars into a Maven repository
> so that they can be accessed by a project using their original names?
>
> I am developing against a 3rd party software package that includes about
> a dozen supporting jar files. I am trying to upload these jars into a
> Maven repository such that I can put a dependency in my development
> project that puts all of the original jars on my classpath. I have
> tried:
>
> * insert jars individually (and as a collection) using Nexus console but
> the stored jar is named {artifactId}-{version}
>
> * create jar projects with various source structures but, again, the
> stored jar is named {artifactId}-{version}
>
> * create a jar project containing an assembly: I can make the 3rd party
> jars visible with their original names but, yet again, they are put into
> in a jar named {artifactId}-{version}.
>
> Context is that I'm just beginning to try and replace historical
> Ant/Eclipse projects with Maven/Eclipse. I've read through "Maven The
> Definitive Guide" and Googled as much as I can but I'm at a stage where
> I'm not even sure I'm asking sensible questions.  If there's a "how to"
> document around (with worked examples rather than isolated XML
> fragments) that would be great.  If I'm missing the point of Maven and
> trying to implement an Ant concept that would be good to know too.
>
> Thanks in advance
>
> David
>
>
>
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--e89a8f2345d34b80bc04feeebf1a--

