From users-return-136928-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Mon Jul 28 16:53:01 2014
Return-Path: <users-return-136928-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id C643C11DA1
	for <apmail-maven-users-archive@www.apache.org>; Mon, 28 Jul 2014 16:53:01 +0000 (UTC)
Received: (qmail 82340 invoked by uid 500); 28 Jul 2014 16:52:58 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 82247 invoked by uid 500); 28 Jul 2014 16:52:58 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 82219 invoked by uid 99); 28 Jul 2014 16:52:57 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 28 Jul 2014 16:52:57 +0000
X-ASF-Spam-Status: No, hits=0.7 required=5.0
	tests=RCVD_IN_DNSWL_NONE,SPF_NEUTRAL
X-Spam-Check-By: apache.org
Received-SPF: neutral (athena.apache.org: local policy)
Received: from [173.201.192.230] (HELO p3plsmtpa07-01.prod.phx3.secureserver.net) (173.201.192.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Mon, 28 Jul 2014 16:52:52 +0000
Received: from [192.168.1.6] ([67.173.10.68])
	by p3plsmtpa07-01.prod.phx3.secureserver.net with 
	id XssT1o00H1U4xL301ssU5W; Mon, 28 Jul 2014 09:52:28 -0700
Message-ID: <53D67FCC.1030908@javactivity.org>
Date: Mon, 28 Jul 2014 11:52:28 -0500
From: Steve Cohen <scohen@javactivity.org>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.5.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: Best way to use closed-source jars with maven repository
References: <53D280A5.6050704@javactivity.org>	<CAA5t8VpVnwZTkXSxfF6H_3FKip00BEMrgEq0Q9HxuH-TRSxMww@mail.gmail.com>	<53D28AF1.3070205@javactivity.org>	<53D28EC1.7010700@javactivity.org>	<CADN69y=K-uPh6oTp7Qvg_SU_skQYNMb-HMb+LpHjdWSSPHkpxg@mail.gmail.com>	<53D2978A.9080605@javactivity.org>	<53D29C73.4080906@javactivity.org>	<53D65A7F.5020102@javactivity.org>	<53D6618E.5080802@javactivity.org> <CA+nPnMy8abQPcjjVV7ff087Kdd1-K2vYEDkXFqDWWRVNmNT9Tw@mail.gmail.com>
In-Reply-To: <CA+nPnMy8abQPcjjVV7ff087Kdd1-K2vYEDkXFqDWWRVNmNT9Tw@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

Actually, given my requirements, I think scope system is exactly what I 
need and your blanket statement that I shouldn't use this seems too rigid.

To review, these are my requirements.

1) Project already built with Maven and don't want to change that.  We 
want to continue using Maven both within eclipse for development and to 
build the deployable artifacts for production.

2) We need to turn on a feature of IBM Websphere MQ (trace logging) that 
requires that all mq jars and libraries be in the same directory and 
named as IBM names them, and not with version numbers appended.  (I 
don't know if this is actually required, but IBM technical support will 
not provide support if they know that jars are packaged differently than 
how they supply them.)

3) In view of 2, the easiest way to get this layout is simply to install 
websphere MQ on the client machine using IBM's install package and that 
is what we need to do.  Much easier than some scheme of renaming them 
back to their original name in the assembly plugin as some have suggested.

4) Websphere MQ further requires that -Djava.library.path be included in 
of the initial java command and defined to point to the directory where 
the jars and a few DLLs are deployed in order to turn on logging traces.

Using system scope in this manner quickly enables the compiler both in 
the build and with eclipse to build the project and run it.

It seems ideal for this situation.

Maven documentation says this:

"Dependencies with the scope system are always available and are not 
looked up in repository. They are usually used to tell Maven about 
dependencies which are provided by the JDK or the VM." ( 
http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#System_Dependencies 
).

The key point is that they are not looked up in the repository and don't 
require renaming of the jar files.  And "usually" doesn't sound like an 
absolute prohibition.

The only problem, and it's relatively minor, is this bug(?) that system 
dependencies are treated in the archiver's manifest generator as if they 
were not system dependencies.  Either they should not be included at all 
on the manifest classpath or they should use the correct system path.






On 07/28/2014 11:05 AM, Stephen Connolly wrote:
> <scope>system</scope> is for JAR files that are supposed to be put in the
> JVM's ext directory or equivalent.
>
> You do not want to use <scope>system</scope>
>
>
> On 28 July 2014 15:43, Steve Cohen <scohen@javactivity.org> wrote:
>
>> Sadly, my hopes were not completely fulfilled.
>>
>> In spite of specifying the MQ jars as system dependencies with their own
>> paths, the maven manifest generator ignored these paths.  This means that I
>> must no longer run my application with java -jar, relying on the classpath
>> manifest, but must specify the classpath on the command line.  Doable, but
>> annoying.
>>
>> This is arguably a bug.  If system dependencies are required to list their
>> path, should not the manifest classpath generator respect these?
>>
>>





---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


