From users-return-136949-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Thu Jul 31 12:56:00 2014
Return-Path: <users-return-136949-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 916EA1179D
	for <apmail-maven-users-archive@www.apache.org>; Thu, 31 Jul 2014 12:56:00 +0000 (UTC)
Received: (qmail 89225 invoked by uid 500); 31 Jul 2014 12:55:58 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 89142 invoked by uid 500); 31 Jul 2014 12:55:58 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 89126 invoked by uid 99); 31 Jul 2014 12:55:58 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 31 Jul 2014 12:55:58 +0000
X-ASF-Spam-Status: No, hits=1.0 required=5.0
	tests=SPF_SOFTFAIL
X-Spam-Check-By: apache.org
Received-SPF: softfail (athena.apache.org: transitioning domain of francois.marot@gmail.com does not designate 216.139.236.26 as permitted sender)
Received: from [216.139.236.26] (HELO sam.nabble.com) (216.139.236.26)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 31 Jul 2014 12:55:54 +0000
Received: from [192.168.236.26] (helo=sam.nabble.com)
	by sam.nabble.com with esmtp (Exim 4.72)
	(envelope-from <francois.marot@gmail.com>)
	id 1XCptN-0003Yn-71
	for users@maven.apache.org; Thu, 31 Jul 2014 05:55:33 -0700
Date: Thu, 31 Jul 2014 05:55:33 -0700 (PDT)
From: Francois MAROT <francois.marot@gmail.com>
To: users@maven.apache.org
Message-ID: <1406811333126-5801435.post@n5.nabble.com>
Subject: How to avoid unzip of large test data on each "mvn test"
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Virus-Checked: Checked by ClamAV on apache.org

Hi all,

I'm in the process of switching to Maven for a large ANT project and have a
question regarding my test data.
I'd like those data to be versionned and stored in the Maven repo. But
currently those data are huge (let's say a 1-2 gigabytes once zipped). So I
imagine that if stored in the repo, each time I will run "mvn test" Maven
will have to unzip this big zip. It will take a lot of time...
Is there a best practise about it ?
Is there a way to store the data already unzipped somewhere and have mvn
test unzip the archive only if the version has changed ?
Any idea ?

Fran=C3=A7ois

PS: currently, the existing test code rely on the data being manually
unzipped once and for all at a hardcoded location on the disk :/ . Those
test data are currently not versionned (with all the related problems).



--
View this message in context: http://maven.40175.n5.nabble.com/How-to-avoid=
-unzip-of-large-test-data-on-each-mvn-test-tp5801435.html
Sent from the Maven - Users mailing list archive at Nabble.com.

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


