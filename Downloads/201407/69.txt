From users-return-136772-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Jul 12 04:55:51 2014
Return-Path: <users-return-136772-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8366D11017
	for <apmail-maven-users-archive@www.apache.org>; Sat, 12 Jul 2014 04:55:51 +0000 (UTC)
Received: (qmail 88647 invoked by uid 500); 12 Jul 2014 04:55:48 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 88561 invoked by uid 500); 12 Jul 2014 04:55:48 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 88546 invoked by uid 99); 12 Jul 2014 04:55:48 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 12 Jul 2014 04:55:48 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of dantran@gmail.com designates 209.85.217.173 as permitted sender)
Received: from [209.85.217.173] (HELO mail-lb0-f173.google.com) (209.85.217.173)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 12 Jul 2014 04:55:45 +0000
Received: by mail-lb0-f173.google.com with SMTP id v6so1227100lbi.4
        for <users@maven.apache.org>; Fri, 11 Jul 2014 21:55:20 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=TwBOk4SnhuMwxaNHrVhXLJ4aGFSGFkZoVmVzGN0m7U0=;
        b=SESWDkItI9psPv+fjCYxCp//KANZjN1ssvK+x/uG7grRlV/5KogzpM9v8zTY5TgGhP
         6sKv2aHmjTbp+UzUQTygGTmqPeefHyoZmR/KXd1oI3qk9mc/je1tiXyN6LVIRK/yS+x4
         E3pUUQE+Vpz5QYsNnP7+pILyqo4SG61nRnjkBEiwqyLb5o2NJf4QDOLQSYR7B5jV7IOc
         qRG0CHmGFe5y4iZSib/0h+JSrFfoBvkeMvl/FVOJZtLuQTgdodE/bVjdEHGTZyHd+JdL
         ir4vl2mAvOr6OT7aNEtG/2gzyfFkHEF3T/+rdJb1f8SIF61BYjta4vivqYuxzv+dpEGu
         ceRg==
MIME-Version: 1.0
X-Received: by 10.112.97.202 with SMTP id ec10mr2708494lbb.20.1405140920610;
 Fri, 11 Jul 2014 21:55:20 -0700 (PDT)
Received: by 10.114.122.194 with HTTP; Fri, 11 Jul 2014 21:55:20 -0700 (PDT)
Date: Fri, 11 Jul 2014 21:55:20 -0700
Message-ID: <CAPCjjnHveboAYm4KKcsDLSE3HYZro8Yti4ZXZ0dYzmp5=+w9xA@mail.gmail.com>
Subject: Generate A Maven artifact's dependencies and licenses ( how to
 instantiate a MavenProject using a giving artifact coordinate)
From: Dan Tran <dantran@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a1133b1c46eb97304fdf7dd42
X-Virus-Checked: Checked by ClamAV on apache.org

--001a1133b1c46eb97304fdf7dd42
Content-Type: text/plain; charset=UTF-8

Hello,

I have a need to create an spreadsheet ( for legal purpose) containing a
Maven artifact, base on a given coordinate,  and all of its transitive
dependencies and associated license info

There are 2 plugins having this kind of requirements:
maven-project-info-report-plugin and license-maven-plugin, both of these
projects  have a maven project to work with. ( ie MavenProject )

For my case,  I need to  instantiate MavenProject from the provided
artifact using ProjectBuilder component, but this gives all kind of problem
from stack overflow to NPE

here is code

    private MavenProject getMavenProjectFromArtifact( Artifact artifact )
        throws ProjectBuildingException
    {
        ProjectBuildingRequest request = new
DefaultProjectBuildingRequest();
        request.setLocalRepository( localRepository );
        request.setPluginArtifactRepositories( pluginArtifactRepositories );
        request.setRemoteRepositories( remoteRepositories );
        request.setResolveDependencies( true );
        request.setResolveVersionRanges( true );


        ProjectBuildingResult result = projectBuilder.build( artifact,
request );

        return result.getProject();
    }


Am I using the right builder?


Any advice to get this working is very much appreciated.


Thanks

-Dan

--001a1133b1c46eb97304fdf7dd42--

