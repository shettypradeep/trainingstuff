From users-return-137888-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Nov 30 18:16:40 2014
Return-Path: <users-return-137888-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id EC7CACE1B
	for <apmail-maven-users-archive@www.apache.org>; Sun, 30 Nov 2014 18:16:40 +0000 (UTC)
Received: (qmail 91745 invoked by uid 500); 30 Nov 2014 18:16:39 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 91659 invoked by uid 500); 30 Nov 2014 18:16:39 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 91647 invoked by uid 99); 30 Nov 2014 18:16:38 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 30 Nov 2014 18:16:38 +0000
X-ASF-Spam-Status: No, hits=2.5 required=5.0
	tests=FREEMAIL_REPLY,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.214.181 as permitted sender)
Received: from [209.85.214.181] (HELO mail-ob0-f181.google.com) (209.85.214.181)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 30 Nov 2014 18:16:34 +0000
Received: by mail-ob0-f181.google.com with SMTP id gq1so6910108obb.40
        for <users@maven.apache.org>; Sun, 30 Nov 2014 10:15:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=IgFW5h4hv3S8BJ10XfNN6B9QKskQ6Vs6jY9oAjLKohI=;
        b=sITGW9orNYF4OKgHZUFPqvQr9H3TEs9S2b2IKvRKavqGf6lXoCD6THOvvSfZFRfsMu
         f2LrcGIWTN2la67u4XeD/lThvqyGRCrZHxsctE0/azqTQ+ZG4VxdxEOV8+7JnMSOsLXg
         v9ukSQ/bJhAsvqO+2iSox82HIXpXyzJ3v1rkz9Pz7LMfNz62DnJJT/8F0F83KKnCg52h
         57zWJirPGzCQWgT01R7/e/zvq8payZ8/vZ0D5eSIL9CxqTFEMVUi+qElW1PU959vyQZd
         yl/2dIfEfmXamfCMyk5LtdpGr7xRIZpnNEj0HE14vIbWqVTENeT/kf/8jmdWqyqnJk23
         dEXg==
MIME-Version: 1.0
X-Received: by 10.60.115.227 with SMTP id jr3mr33560131oeb.33.1417371328582;
 Sun, 30 Nov 2014 10:15:28 -0800 (PST)
Received: by 10.60.37.103 with HTTP; Sun, 30 Nov 2014 10:15:28 -0800 (PST)
In-Reply-To: <7860a71d9a894fc185a680c8c31d46f6@AMSPR05MB0611.eurprd05.prod.outlook.com>
References: <4D781E28644D7B46878137FBCBC852F01269EB@gf0vswex001p.corp.int>
	<op.xp1p28hrkdkhrr@robertscholte.dynamic.ziggo.nl>
	<46b88b5354ce4ec3a8ef5307adcb4381@AMSPR05MB0611.eurprd05.prod.outlook.com>
	<CALhtWkfwxNPgoxpHfXik-Y2H4XgH=DR5TpQA6h80eA5MqzbhZA@mail.gmail.com>
	<7860a71d9a894fc185a680c8c31d46f6@AMSPR05MB0611.eurprd05.prod.outlook.com>
Date: Sun, 30 Nov 2014 18:15:28 +0000
Message-ID: <CA+nPnMy9a1usXwDNycq+T7hxrd4EbRmzr0ibViFza4t1UNvEfw@mail.gmail.com>
Subject: Re: Problems with the release plugin
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=089e011842428e198d0509177a4f
X-Virus-Checked: Checked by ClamAV on apache.org

--089e011842428e198d0509177a4f
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On Sunday, 30 November 2014, Christofer Dutz <christofer.dutz@c-ware.de>
wrote:

> Unfortunately the world isn't as ideal as I would like it to be. There ar=
e
> sometimes constraints that lie outside of the reach of the developer(s)
> working on the projects build.
>
> In one case the company I worked for desperately needed to release parts
> of a multi module build separately. I know that this comes with problems,
> but as long as no other option comes up to reduce the amount of binary da=
ta
> of a new release having to be transfered over an Edge mobile connection,
> they will have to do partial releases.
>
> In my current case the entire company is being switched from Ant to Maven=
.
> Switching everything in one big step is completely out of the question. T=
he
> amount of simultaneous training needed for this is simply not possible. S=
o
> we have to go a migration path which brings us closer and closer to the
> final goal of having everything in Maven and be able to use the default
> maven-release-plugin. But till we are there it feels like there is no way
> without patching this plugin in order to have an easy transition path.


Keep in mind that the release *plugin* is just the recommended best
practice.

The real work is done by the jar dependency.

If you have different constraints you can reuse that shared jar to build a
plugin that meets your requirements... That is "the maven way" and shotgun
will applaud you efforts ;-)


>
> What about some "legacy" or "quirks" mode for the plugin that allows such
> a thing ... it might even output warnings and pages of text explaining wh=
y
> this mode sucks and should be avoided. All I am asking for is a way to us=
e
> the plugin without having to hack it which acknowledging that I know this
> is not ideal, but I am willing to accept the consequences.
>
> Chris
>
> -----Urspr=C3=BCngliche Nachricht-----
> Von: Benson Margulies [mailto:bimargulies@gmail.com <javascript:;>]
> Gesendet: Sonntag, 30. November 2014 13:52
> An: Maven Users List
> Betreff: Re: Problems with the release plugin
>
> I'm going to attempt a summary here.
>
> The release plugin has a requirement. It must be true that you can go to
> the SCM, checkout a brand new copy of the tree rooted at the <scm/>
> element, _change the versions_ in the pom(s), and run a build as configur=
ed
> by the profiles and goals. If that's not true, the release process will
> fail, and possibly leave you with a manual cleanup in the SCM. There are
> many ways to set up a build that seems just fine but fails this test.
>
> The top of this thread is a plea for a 'dry run' that is a perfect
> simulation of this, so that users can flush this out before it bites them=
,
> and that it should not be hard to ask for this.
>
> It seems to me that it should not be hard, in a typical automated build
> system (Jenkins, etc.) to set up a build that does exactly this.
> Checkout a clean tree, run the maven-versions-plugin to set a dummy
> version, and run a build, with profiles and goals to match the eventual
> release. Eat one of these apples every day, and you won't be visiting the
> maven doctor so often.
>
> It seems to me that it should also not be terribly hard to make this a
> feature of the maven-release-plugin.
>
> As a further wrinkle, there's the question of tag management, which might
> be seen as interrelated to the lengthy threads here and elsewhere about
> never, ever, deleting a tag. I wonder about yet another m-r-p parameter: =
a
> staging SCM URL, distinct from the <scm/> stock identifiers. m-r-p would
> pull from <scm/> but push to this other place. Then, a human could decide
> if the release is real, and, if so, push the commits and tag to the real,
> immutable, repo. I'm not qualifier to judge whether this can work for
> anything other than git, but git sure is popular.
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org <javascript:;>
> For additional commands, e-mail: users-help@maven.apache.org
> <javascript:;>
>
>

--=20
Sent from my phone

--089e011842428e198d0509177a4f--

