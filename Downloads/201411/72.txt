From users-return-137768-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Nov 19 13:57:23 2014
Return-Path: <users-return-137768-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id ABF9810D36
	for <apmail-maven-users-archive@www.apache.org>; Wed, 19 Nov 2014 13:57:23 +0000 (UTC)
Received: (qmail 37097 invoked by uid 500); 19 Nov 2014 13:57:22 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 37011 invoked by uid 500); 19 Nov 2014 13:57:22 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 37000 invoked by uid 99); 19 Nov 2014 13:57:21 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Nov 2014 13:57:21 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Nov 2014 13:57:16 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id 038276A657F
	for <users@maven.apache.org>; Wed, 19 Nov 2014 08:56:24 -0500 (EST)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id wNqEgxxpvpNY for <users@maven.apache.org>;
	Wed, 19 Nov 2014 08:56:23 -0500 (EST)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id BEC3F6A657E
	for <users@maven.apache.org>; Wed, 19 Nov 2014 08:56:23 -0500 (EST)
Message-ID: <546CA186.6020109@artifact-software.com>
Date: Wed, 19 Nov 2014 08:56:22 -0500
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: rwheeler@artifact-software.com
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.6.0
MIME-Version: 1.0
To: Maven Users List <users@maven.apache.org>
Subject: Re: Sorting javadoc output by importance of documentation and length
 of docs?
References: <CAAZU44k8XqAWsKCbnYuXVTrvXcaKYNT7pnVP8Xi6Fj6oZDYWqw@mail.gmail.com> <CAMH6+axKyrs0OPko+NppwjpG0whsaDD=NAznjKvN0j8Wu4R05g@mail.gmail.com>
In-Reply-To: <CAMH6+axKyrs0OPko+NppwjpG0whsaDD=NAznjKvN0j8Wu4R05g@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Virus-Checked: Checked by ClamAV on apache.org


Here are a couple of articles on how the problem can be solved in a 
professional way using standard tools.
This allows you to mix Javadoc with other documents in an automated way 
to produce a PDF or web site that documents your system.
DITA is an XML_based OASIS standard for producing documents of all 
types. I have used it for a manual and for a training methodology study 
for a client.

Generate DITA Java API reference documentation using DITADoclet and DITA 
API specialization
http://www.ibm.com/developerworks/library/x-DITAdoclet/

Using Javadoc and XML to Produce API Reference Documentation
http://wenku.baidu.com/view/88d0420f4a7302768e99392f.html

Ron



On 19/11/2014 8:22 AM, James Green wrote:
> If your project contains a large number of classes, perhaps for 
> summation purposes you could wrap these up into a higher level project 
> with fewer classes that expose the essentials with documentation? 
> Another alternative I'm seeing "out there" is a docs folder alongside 
> src that holds information for web site publication. Static site 
> generators can then kick in during the build and publish. On 16 
> November 2014 19:28, Kevin Burton <burton@spinn3r.com> wrote:
>> This is slightly off topic so I apologize. Javadoc is great for the 
>> developer but the main problem is that important documents can be 
>> hidden in a sea of classes. My Javadoc tends to have say 20-40 
>> important documents on the design of a system but the rest of the 
>> Javadoc just tends to have an overview. I’d like a way to organize it 
>> more as a book, maybe even by the length of the documentation instead 
>> of being organized as a table of contents. This way my ops guys and 
>> other members of the team can find the documentation they’re looking 
>> for and not necessarily how a specific component behaves. -- 
>> Founder/CEO Spinn3r.com Location: *San Francisco, CA* blog: 
>> http://burtonator.wordpress.com … or check out my Google+ profile 
>> <https://plus.google.com/102718274791889610666/posts> 
>> <http://spinn3r.com> 
>


-- Ron Wheeler President Artifact Software Inc email: 
rwheeler@artifact-software.com skype: ronaldmwheeler phone: 
866-970-2435, ext 102

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


