From users-return-137872-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Thu Nov 27 23:54:58 2014
Return-Path: <users-return-137872-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D317010EC1
	for <apmail-maven-users-archive@www.apache.org>; Thu, 27 Nov 2014 23:54:58 +0000 (UTC)
Received: (qmail 49443 invoked by uid 500); 27 Nov 2014 23:54:57 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 49363 invoked by uid 500); 27 Nov 2014 23:54:57 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 49352 invoked by uid 99); 27 Nov 2014 23:54:56 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 27 Nov 2014 23:54:56 +0000
X-ASF-Spam-Status: No, hits=-0.1 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_MED,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of prvs=4408609040=Alejandro.Endo@grassvalley.com designates 12.161.118.91 as permitted sender)
Received: from [12.161.118.91] (HELO mx2.belden.com) (12.161.118.91)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 27 Nov 2014 23:54:51 +0000
X-AuditID: 0a01015b-b7fb28e000000cb3-ef-5477b9b59d5c
Received: from bdcnotes1.belden.com ( [10.1.1.71])
	by mx2.belden.com (Service Ready) with SMTP id E5.CB.03251.5B9B7745; Thu, 27 Nov 2014 18:54:29 -0500 (EST)
To: users@maven.apache.org
MIME-Version: 1.0
Subject: release plugin issue
X-KeepSent: A2E1BE63:3A77C845-85257D9D:00817D6E;
 type=4; name=$KeepSent
X-Mailer: Lotus Notes Release 8.5.3FP2 SHF99 September 04, 2012
From: Alejandro.Endo@grassvalley.com
Message-ID: <OFA2E1BE63.3A77C845-ON85257D9D.00817D6E-85257D9D.008354E4@belden.com>
Date: Thu, 27 Nov 2014 18:54:29 -0500
X-MIMETrack: Serialize by Router on BDCNotes1/BeldenCDT(Release 9.0.1FP2|August  03, 2014) at
 11/27/2014 06:54:30 PM,
	Serialize complete at 11/27/2014 06:54:30 PM
Content-Type: multipart/alternative; boundary="=_alternative 008354D385257D9D_="
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFrrKIsWRmVeSWpSXmKPExsXCxcjorrt1Z3mIwflXmhaPtl5ndGD0aH8q
	FMAY1cBok5RYUhacmZ6nb2eTmJeXX5JYkqqQklqcbKvklJqTkpqn4JJZnJyTmJmbWqTrGeyv
	a2FhaqmkkJliq2SkpFCQk5icmpuaV2KrlFhQkJqXomTHpYABbIDKMvMUUvOS81My89JtlUJD
	3HQtlOxcPIOdE1pZM3qfvWUtmKFU0fhnKWMD42/pLkZODgkBE4lz/3uYIGwxiQv31rN1MXJx
	CAnMZ5Ro3v+SFSQhIiAl8fPVdUYQm1dAUOLkzCcsILawgKzEocmP2SGaPSWW3HzCCGHbS3x/
	9AGshk1ARWLa3ztQvUESh698BlvGIqAqMeXtM2aQZRICyxglOrbuBFvGLBAg8efxPPYJjLyz
	kOybhSQFYetInFh1jBnC1pZYdOUn+wJGllWMfLkVRnpJ4DDVS87P3cQIiZroHYzHfqgeYhTg
	YFTi4e15UhYixJpYVlyZe4hRgoNZSYRXZHp5iBBvSmJlVWpRfnxRaU5q8SHGIKA7JzJLcSfn
	AyM6ryTe2MCASI6SOO+pSzkhQgLpwJjOTk0tSC2CGcrEwQmylEtKpBgYlalFiaUlGfGg9BFf
	DEwgUg2Mk+pdd6x/UZle5y8UcYw3VmF7yZ/Np3j2hh75anfy6YYVB/VtQm8ffvDEXd7k//79
	TGxCaQafZnv8LWSV+bt/xfzjDv8nn00NcL+YGpjB7dHsdIulYaGT4c6C9fG8vLvLDmnMOnuL
	4+u0yS/WPDRVWyf/R2zG+roN3etuHVnJVpIb8nHGiuisTiWW4oxEQy3mouJEAAU2G7voAgAA
X-Virus-Checked: Checked by ClamAV on apache.org

--=_alternative 008354D385257D9D_=
Content-Type: text/plain; charset="US-ASCII"

I'm using the release-plugin v2.5.1 and I'm often encountering two 
recurring stories with failed releases

1) Now the release can fail due to errors in the javadoc. This is not a 
problem, the problem is that IF there are problems in the javadoc the 
release doesn't complete but the two commits and the tag has been done so 
after fixing the javadoc I need to reset the git repo to right before the 
failed released AND I have to remove the tag to try again. I am releasing 
from jenkins so the resume flag is set to false. if something fails we 
start from the beginning, which makes sense in a build server IMO. My 
suggestion here would be to generate all those artifacts (javadoc and 
source) before committing and tagging the code, that way if they fail, the 
repo is not in an invalid state. Another option would be improvement #2

2) Very often the dryRun succeeds but the real release fails, to the point 
where the dryRun is meaningless. This defeats the whole purpose of a 
dry-run. The problem is that the dry run is over simplified. For example, 
again, if there are javadoc problems they won't be spotted because the 
dry-run doesn't run javadoc generation. Anything that's part of the real 
build should be run on the dry-run except for things that make persistent 
changes. Another problem I encounter often is that the real release fails 
because the tag already exists in SCM (leftover from a previous failed 
release). This should also be validated by the dryRun. If a real release 
can fail because a tag is already present then the dry run should fail if 
the tag is already present

What do you guys think? If these points are considered valid I will open a 
ticket at least for the second one, which is the worse of the two


Alejandro Endo | Software Designer/Concepteur de logiciels 


DISCLAIMER:
Privileged and/or Confidential information may be contained in this
message. If you are not the addressee of this message, you may not
copy, use or deliver this message to anyone. In such event, you
should destroy the message and kindly notify the sender by reply
e-mail. It is understood that opinions or conclusions that do not
relate to the official business of the company are neither given
nor endorsed by the company.
Thank You.

--=_alternative 008354D385257D9D_=--

