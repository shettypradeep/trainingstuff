From users-return-137681-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Nov  2 21:15:23 2014
Return-Path: <users-return-137681-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 7BFD717FBF
	for <apmail-maven-users-archive@www.apache.org>; Sun,  2 Nov 2014 21:15:23 +0000 (UTC)
Received: (qmail 47147 invoked by uid 500); 2 Nov 2014 21:15:22 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 47078 invoked by uid 500); 2 Nov 2014 21:15:22 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 47066 invoked by uid 99); 2 Nov 2014 21:15:21 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 02 Nov 2014 21:15:21 +0000
X-ASF-Spam-Status: No, hits=0.3 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_SOFTFAIL
X-Spam-Check-By: apache.org
Received-SPF: softfail (nike.apache.org: transitioning domain of jeroen@lable.org does not designate 209.85.216.176 as permitted sender)
Received: from [209.85.216.176] (HELO mail-qc0-f176.google.com) (209.85.216.176)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 02 Nov 2014 21:14:55 +0000
Received: by mail-qc0-f176.google.com with SMTP id x3so8137182qcv.7
        for <users@maven.apache.org>; Sun, 02 Nov 2014 13:14:09 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:content-type:content-transfer-encoding;
        bh=sjm64Yeo0lVGReOBGPFWTyW17Ehut2xdDoWzBizjGvg=;
        b=dPU+nWc8aHZA877B0A6pAozX/O57oIrzAPvd7hoG6PW8+u00BN2pkLJGq22CzZUSaq
         Cgs9mf5QRFZXVLB8JkkyaeaREhHV7Nt4hhUDsgPaE/BjP4rP5ZccdnWGumPvOgOBgiCj
         uiLKzOtBPXnN8J2VSZAuvYixEha/TYEbOmDVRoBrpvhhYycs1SmHI50fcrBuYn2SMpOY
         ePKeHBQYrLdy9Vw0Pmni+SgDES1OXjmt2GO21CTijPPcIZl13lSELYGI4mf6cmj+wktb
         GRUenM9w4MFQAy+kWbcYSyKbMgqw19AUfzumiouvTVoAMcvw0LPUiKQ9QogIH7SPrsge
         82fg==
X-Gm-Message-State: ALoCoQkLhnzh0IwXZ5YVaE65uSHbXHtFXCvkdWVRFAw6yBKVCDX6nvxtubSr7xkCnO7hyZ/3wQOA
MIME-Version: 1.0
X-Received: by 10.140.109.68 with SMTP id k62mr9916099qgf.46.1414962849007;
 Sun, 02 Nov 2014 13:14:09 -0800 (PST)
Received: by 10.140.22.6 with HTTP; Sun, 2 Nov 2014 13:14:08 -0800 (PST)
X-Originating-IP: [85.151.160.140]
In-Reply-To: <54567FA8.6080808@gmx.de>
References: <CAPJcxA-xz9LnOvJiBXQE_-3p7O1DOTjNFLzLRjE6pJguG71=NQ@mail.gmail.com>
	<CAPJcxA93+c7U+FAuAk8mg6dQCysorxZF4NzzB46zuQ9=HXwQbA@mail.gmail.com>
	<54567FA8.6080808@gmx.de>
Date: Sun, 2 Nov 2014 22:14:08 +0100
Message-ID: <CAPJcxA9021f17Sn2CXCKOEb=LiFkNxNLqfmJVrObgP7+QO+5bg@mail.gmail.com>
Subject: Re: Client-side SSL certifcates and Maven
From: Jeroen Hoek <jeroen@lable.org>
To: Maven Users List <users@maven.apache.org>, info@soebes.de
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Virus-Checked: Checked by ClamAV on apache.org

Hello Karl,

Are you sure it is possible to override the Wagon version used by
Maven internally? (As opposed to the Wagon provider configured to
deploy artefacts.)

It does not seem to work for me. Artefact "wagon" won't resolve, and
when I use "wagon-http" it does not change the behaviour of Maven; the
SSL certificate is not passed to the server.

2014-11-02 20:02 GMT+01:00 Karl Heinz Marbaise <khmarbaise@gmx.de>:
> Hi,
>
> may be i miss a thing but wagon can be configured outside of maven via
> extensions ...
>
> <project>
>   ...
>   <build>
>     <extensions>
>       <extension>
>         <groupId>org.apache.maven.wagon</groupId>
>          <artifactId>wagon</artifactId>
>          <version>2.7</version>
>       </extension>
>     </extensions>
>   </build>
>   ...
> </project>
>
>
> shouldn't that work too?
>
>
> Kind regards
> Karl Heinz Marbaise
>
>
> On 11/2/14 7:53 PM, Jeroen Hoek wrote:
>>
>> Some further research on my part shows that a simple connection test
>> using HttpComponents httpclient 4.3.5 does work, but that the version
>> of httpclient used in Wagon 2.6 (httpclient 4.3.1) fails. Apparently
>> the newer version of httpclient fixes the problem I ran into, although
>> I do not know what the problem is exactly.
>>
>> For completeness sake: the simple connection test with httpclient 4.3.5 =
I
>> used:
>> https://gist.github.com/jdhoek/192a965fc63f459b2bee
>>
>> As it turns out, Wagon 2.7 already uses httpclient 4.3.5. A custom
>> build of Maven 3.2.3 with the Wagon dependency set to 2.7 works!
>>
>> When will a version of Maven 3.2.x built with Wagon 2.7 be released?
>>
>> Is something blocking Maven from depending on Wagon 2.7?
>>
>> 2014-10-29 16:14 GMT+01:00 Jeroen Hoek <jeroen@lable.org>:
>>>
>>> Hello,
>>>
>>> I am trying to get Maven (3.2.2) to work with an instance of Archiva
>>> hosted behind a webserver secured with client-side SSL certificates.
>>>
>>> I have followed the guide at
>>> https://maven.apache.org/guides/mini/guide-repository-ssl.html, and
>>> imported the server-side SSL certificate into a Java .jks file. The
>>> client-side certificate is a PKCS12 file, which works correctly in
>>> Firefox and Chromium.
>>>
>>> I have a simple project that depends on an artifact hosted on my
>>> Archiva server. When client-side SSL verification is disabled on the
>>> server, `mvn clean install` works as expected, and the dependency is
>>> downloaded.
>>>
>>> But it doesn't work when I activate client-side SSL verification, and
>>> try the following command:
>>>
>>> mvn clean install -Djavax.net.debug=3Dssl
>>> -Djavax.net.ssl.trustStore=3DPATH_TO_TRUSTDB.jks
>>> -Djavax.net.ssl.trustStorePassword=3D****************
>>> -Djavax.net.ssl.keyStore=3DPATH_TO_MY_CERT.p12
>>> -Djavax.net.ssl.keyStoreType=3Dpkcs12
>>> -Djavax.net.ssl.keyStorePassword=3D****************
>>>
>>>  From what I can see in the output, my .p12 file is read by Maven at
>>> the start, as is the trust-store, but it fails to complete requests to
>>> the Archiva server, although TLS handshaking appears to work, so the
>>> server-side certificate is trusted and accepted. The server throws the
>>> "400: No required SSL certificate was sent" error message you get when
>>> trying to talk to it without a client-side SSL certificate installed.
>>> In the server log I am indeed seeing HTTP GET requests from Maven
>>> without any client-side SSL certificate, whereas GETs by a browser do
>>> show access with the valid certificate there.
>>>
>>> Any idea why Maven isn't using the client-side SSL certificate passed
>>> via -Djavax.net.ssl.keyStoreType? Is there some configuration option I
>>> am overlooking?
>>>
>>> Kind regards,
>>>
>>> Jeroen Hoek
>>> Lable
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>



--=20
Vriendelijke groeten,

Jeroen Hoek

Lable
=E2=9C=89 jeroen@lable.org
=E2=84=A1 088 44 20 202

http://lable.org
KvK =E2=84=96 55984037
BTW =E2=84=96 NL8519.32.411.B.01

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


