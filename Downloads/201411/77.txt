From users-return-137882-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Nov 29 23:40:40 2014
Return-Path: <users-return-137882-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id D386B10BD3
	for <apmail-maven-users-archive@www.apache.org>; Sat, 29 Nov 2014 23:40:40 +0000 (UTC)
Received: (qmail 73297 invoked by uid 500); 29 Nov 2014 23:40:39 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 73214 invoked by uid 500); 29 Nov 2014 23:40:39 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 73198 invoked by uid 99); 29 Nov 2014 23:40:38 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Nov 2014 23:40:38 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of stephen.alan.connolly@gmail.com designates 209.85.214.175 as permitted sender)
Received: from [209.85.214.175] (HELO mail-ob0-f175.google.com) (209.85.214.175)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Nov 2014 23:40:34 +0000
Received: by mail-ob0-f175.google.com with SMTP id wp4so6395397obc.6
        for <users@maven.apache.org>; Sat, 29 Nov 2014 15:40:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=vsXNqQarOKnBPwJuExgf+PvNyH8MhkIfScK9sQmZFLY=;
        b=m0Nj52l+wFg8aZhBrefnt9siikHGGB7veoSEtHTyv1+rAo18MZLTtcl/Tfu8qQ0KPu
         wn9PGMuYzKI4ZupJBVoN6mAayAuxuVO0dza3Qaa61moM4ZCSmr1vCMPSytM2G9oWYIsW
         7NIcSu/7/OXr95gyGEA2yA1mSzzFBZlC9DkJ2x3oYhWkBx3AUk6BrljKsPPuS7Is/+l6
         ij2zn0IrOE4A+YHA8Q7ZGNgWIvJ9zwx0QY9jFoEmS2JEIocOnkYCE1Y3pSkuAerTc1I2
         9Nq9vb5IfgfaE4+fOZ7CRBIWqk5zC+mHn/Bm91tJQTpCCMG90ypi5rwvziDhThfaoPMx
         0bLQ==
MIME-Version: 1.0
X-Received: by 10.202.44.213 with SMTP id s204mr6241873ois.77.1417304413952;
 Sat, 29 Nov 2014 15:40:13 -0800 (PST)
Received: by 10.60.37.103 with HTTP; Sat, 29 Nov 2014 15:40:13 -0800 (PST)
In-Reply-To: <CAK8jvqwwMR_AbkSjhQOBd=yU1wt1qPK0Pu4RPreZPTZ5j6E5kw@mail.gmail.com>
References: <OFA2E1BE63.3A77C845-ON85257D9D.00817D6E-85257D9D.008354E4@belden.com>
	<op.xp1qawdgkdkhrr@robertscholte.dynamic.ziggo.nl>
	<OF98967939.A808FCCE-ON85257D9E.00673D66-85257D9E.006762B9@belden.com>
	<CAK8jvqwwMR_AbkSjhQOBd=yU1wt1qPK0Pu4RPreZPTZ5j6E5kw@mail.gmail.com>
Date: Sat, 29 Nov 2014 23:40:13 +0000
Message-ID: <CA+nPnMwdTtw_aFytZrL0VSo0cGhiE6DfE=oH8njJd=+43M_wXA@mail.gmail.com>
Subject: Re: release plugin issue
From: Stephen Connolly <stephen.alan.connolly@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a1137c25221e221050907e652
X-Virus-Checked: Checked by ClamAV on apache.org

--001a1137c25221e221050907e652
Content-Type: text/plain; charset=UTF-8

On Saturday, November 29, 2014, Mirko Friedenhagen <mfriedenhagen@gmail.com>
wrote:

> Alejandro,
>
> I have a completely different approach as we use a staging maven repository
> anyway:
> - make sure your workspace has no extra files by using your SCM clean
> function.
> - only run mvn release:prepare with the following preparationGoals property
> -DperformRelease=true -DinstallAtEnd=true -DdeployAtEnd=true clean deploy
> - this ensures that only the tested  and successfully deployed version of
> your software gets the tag.
> - I expect tagging to be the least dangerous part of the process compared
> to tests, integration tests or the whole maven run with all it's plugins.
> - additionally this speeds up the whole process.


But you are not building the checked out tag. If there are ignores that
ignore files that get incorporated in the build you could have a
non-reproducible build.

(For example, I have a build (zendesk-java-client) where there is a
.gitignore in src/test/resources to allow testing with a .properties file
containing the credentials of a test zendesk. That gets released to
Central. If I had a source assembly as part of it (I cannot recall, I think
I do though) then releasing your way would publish the credentials to
Central in that source bundle... Better would be to have preparationGoals
trivial (ie `initialize`) and then don't push the tag until the very end...
(Though in my case I keep both as I want the additional tests to run with
the credentials and the standard tests to run without so that anyone else
can still build from the tag). The point being that most people just don't
see all the good stuff the release plugin does for you by default and
instead they try to hack around it... Your trick may work for you, but we
can't let people think it should work for everyone and every case)


> Regards
> Mirko
> --
> Sent from my mobile
> On Nov 28, 2014 7:49 PM, <Alejandro.Endo@grassvalley.com <javascript:;>>
> wrote:
>
> > That's good to know Robert, thank you
> >
> > I will add that to our release dryrun and hopefully it will catch more of
> > the uncaught problems early on
> >
> > Alejandro Endo | Software Designer/Concepteur de logiciels
> >
> >
> >
> >
> >
> > From:   "Robert Scholte" <rfscholte@apache.org <javascript:;>>
> > To:     "Maven Users List" <users@maven.apache.org <javascript:;>>,
> > Date:   2014-11-28 12:46 PM
> > Subject:        Re: release plugin issue
> >
> >
> >
> > Op Fri, 28 Nov 2014 00:54:29 +0100 schreef
> > <Alejandro.Endo@grassvalley.com <javascript:;>>:
> >
> > > I'm using the release-plugin v2.5.1 and I'm often encountering two
> > > recurring stories with failed releases
> > >
> > > 1) Now the release can fail due to errors in the javadoc. This is not a
> > > problem, the problem is that IF there are problems in the javadoc the
> > > release doesn't complete but the two commits and the tag has been done
> > so
> > > after fixing the javadoc I need to reset the git repo to right before
> > the
> > > failed released AND I have to remove the tag to try again. I am
> > releasing
> > > from jenkins so the resume flag is set to false. if something fails we
> > > start from the beginning, which makes sense in a build server IMO. My
> > > suggestion here would be to generate all those artifacts (javadoc and
> > > source) before committing and tagging the code, that way if they fail,
> > > the
> > > repo is not in an invalid state. Another option would be improvement #2
> > >
> > > 2) Very often the dryRun succeeds but the real release fails, to the
> > > point
> > > where the dryRun is meaningless. This defeats the whole purpose of a
> > > dry-run. The problem is that the dry run is over simplified. For
> > example,
> > > again, if there are javadoc problems they won't be spotted because the
> > > dry-run doesn't run javadoc generation. Anything that's part of the
> real
> > > build should be run on the dry-run except for things that make
> > persistent
> > > changes. Another problem I encounter often is that the real release
> > fails
> > > because the tag already exists in SCM (leftover from a previous failed
> > > release). This should also be validated by the dryRun. If a real
> release
> > > can fail because a tag is already present then the dry run should fail
> > if
> > > the tag is already present
> > >
> > > What do you guys think? If these points are considered valid I will
> open
> >
> > > a
> > > ticket at least for the second one, which is the worse of the two
> > >
> >
> > It's also possible to do a dryrun for the release:perform since version
> > 2.3 [1]
> > That's still not the default of the jenkins m2-release-plugin, but it
> > works.
> >
> > Robert
> >
> > [1] https://jira.codehaus.org/browse/MRELEASE-736
> >
> > >
> > > Alejandro Endo | Software Designer/Concepteur de logiciels
> > >
> > >
> > > DISCLAIMER:
> > > Privileged and/or Confidential information may be contained in this
> > > message. If you are not the addressee of this message, you may not
> > > copy, use or deliver this message to anyone. In such event, you
> > > should destroy the message and kindly notify the sender by reply
> > > e-mail. It is understood that opinions or conclusions that do not
> > > relate to the official business of the company are neither given
> > > nor endorsed by the company.
> > > Thank You.
> >
> > ---------------------------------------------------------------------
> > To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> <javascript:;>
> > For additional commands, e-mail: users-help@maven.apache.org
> <javascript:;>
> >
> >
> >
> > DISCLAIMER:
> > Privileged and/or Confidential information may be contained in this
> > message. If you are not the addressee of this message, you may not
> > copy, use or deliver this message to anyone. In such event, you
> > should destroy the message and kindly notify the sender by reply
> > e-mail. It is understood that opinions or conclusions that do not
> > relate to the official business of the company are neither given
> > nor endorsed by the company.
> > Thank You.
> >
>


-- 
Sent from my phone

--001a1137c25221e221050907e652--

