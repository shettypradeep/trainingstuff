From users-return-137747-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Nov 14 15:29:38 2014
Return-Path: <users-return-137747-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 78DF7F084
	for <apmail-maven-users-archive@www.apache.org>; Fri, 14 Nov 2014 15:29:38 +0000 (UTC)
Received: (qmail 61711 invoked by uid 500); 14 Nov 2014 15:29:34 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 61618 invoked by uid 500); 14 Nov 2014 15:29:34 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 61489 invoked by uid 99); 14 Nov 2014 15:29:34 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Nov 2014 15:29:33 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 14 Nov 2014 15:29:08 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id 62A686A6580
	for <users@maven.apache.org>; Fri, 14 Nov 2014 10:29:07 -0500 (EST)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id SRicm5mk4hWl for <users@maven.apache.org>;
	Fri, 14 Nov 2014 10:29:07 -0500 (EST)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id 271656A657E
	for <users@maven.apache.org>; Fri, 14 Nov 2014 10:29:07 -0500 (EST)
Message-ID: <54661FBC.3090703@artifact-software.com>
Date: Fri, 14 Nov 2014 10:29:00 -0500
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: Maven Users List <users@maven.apache.org>
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.6.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: Change dependency version through property
References: <CAGr9p8CxcuY7L5UQkRAi2kSBLAYR4eDNkmshvebgp5fiGYDHCQ@mail.gmail.com>
In-Reply-To: <CAGr9p8CxcuY7L5UQkRAi2kSBLAYR4eDNkmshvebgp5fiGYDHCQ@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

You are asking the right question in the right forum.

I can give you a bit of background that describes why you are having 
trouble with Maven.

Maven has a mind of its own.
At the core of its belief system is the basic principle that anyone 
should be able to go to your SCM, download some version of your sources 
and pom files and tell Maven to build the project and get exactly what 
you got when you did this.
Allowing command line arguments to affect the build would violate Maven 
core beliefs

Maven will fight any attempt to bend or break its resolve in this regard.
The phrase "Resistence if futile!" comes up in this forum from time to time.

Given that you can't do what you want, here are some ideas that might 
give you some better ideas for a solution.
1) Does any of your code actually care at compile time what version of 
Hadoop it builds with? If not, you have a run-time issue not really a 
build issue.
2) Is you problem really one of testing with different Hadoop versions? 
In that case, you can just build your jar with a "typical/generic"Hadoop 
<scope>provided</scope> and use that jar with different combinations of 
Hadoop versions in various test environments to certify that it works.
2) What if a neutral version of Hadoop was used at compile time but not 
included in your jar <scope>provided</scope>and a different one was used 
at run-time, would your application run. If so, you could distribute 
your application without Hadoop and let the user add their own Hadoop 
jars to the classpath at run-time.
3) Are you going to distribute your software with an installer that 
would allow you to build various versions of your installer (or add 
options to your installer) to install the "right" Hadoop as part of the 
installation.

I know that these are not the answers that you wanted or expected but I 
hope it gives you some ideas that moves you forward.


On 14/11/2014 9:23 AM, Robert Metzger wrote:
> Hi,
>
> I'm a developer at the Apache Flink (incubating) project. I'm trying to
> pass the version of a dependency using a property from the command line to
> the binary build. But it seems that the version I've set is not respected
> everywhere.
>
>
> We have the following setup:
> - flink-parent
>     - flink-core
>     - ... more modules ...
>     - flink-yarn
>     - flink-dist
>
> The "flink-yarn" module (and others) have dependencies to Apache Hadoop. We
> have a property (called hadoop.version) to have one place for setting the
> Hadoop version. The default Hadoop version 2.2.0.
>
> The "flink-dist" module is creating the binary release for Flink. It is
> using the maven-assembly-plugin for that. All jars we depend on are placed
> in the "lib" directory.
> The "flink-dist" module has most of our modules (also the flink-yarn)
> module as a dependency so that we can use the modules in the assembly.
>
>
>
> What I'm trying to do is building Flink for a different Hadoop version, say
> "2.2.0-cdh5.0.0-beta-2". Therefore, I'm passing this version as
> "-Dhadoop.version=2.2.0-cdh5.0.0-beta-2".
>
> However, some files from Hadoop "2.2.0" end up in the "lib" directory.
>
> mvn dependency:tree reveals for "flink-dist":
>
> [INFO] +- org.apache.flink:flink-yarn:jar:0.8-incubating-SNAPSHOT:compile
> [INFO] |  +- org.apache.hadoop:hadoop-yarn-client:jar:2.2.0:compile
> [INFO] |  |  +- org.apache.hadoop:hadoop-yarn-api:jar:2.2.0:compile
> [INFO] |  |  +- org.apache.hadoop:hadoop-yarn-common:jar:2.2.0:compile
>
> however, for "flink-yarn" the versions are correct:
>
> [INFO] +-
> org.apache.hadoop:hadoop-yarn-client:jar:2.2.0-cdh5.0.0-beta-2:compile
> [INFO] |  +- commons-logging:commons-logging:jar:1.1.3:compile
> [INFO] |  +- commons-lang:commons-lang:jar:2.6:compile
>
> Here is the full dependency:tree output:
> https://gist.github.com/rmetzger/70c5f35d4cfd06a91169
>
>
> How can I create builds for different Hadoop versions using Maven?
>
>
> Regards,
> Robert
>


-- 
Ron Wheeler
President
Artifact Software Inc
email: rwheeler@artifact-software.com
skype: ronaldmwheeler
phone: 866-970-2435, ext 102


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


