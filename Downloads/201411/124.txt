From users-return-137881-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Nov 29 22:12:21 2014
Return-Path: <users-return-137881-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9C49110A8E
	for <apmail-maven-users-archive@www.apache.org>; Sat, 29 Nov 2014 22:12:21 +0000 (UTC)
Received: (qmail 6966 invoked by uid 500); 29 Nov 2014 22:12:19 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 6890 invoked by uid 500); 29 Nov 2014 22:12:19 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 6878 invoked by uid 99); 29 Nov 2014 22:12:19 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Nov 2014 22:12:19 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of mfriedenhagen@gmail.com designates 209.85.218.52 as permitted sender)
Received: from [209.85.218.52] (HELO mail-oi0-f52.google.com) (209.85.218.52)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 29 Nov 2014 22:11:53 +0000
Received: by mail-oi0-f52.google.com with SMTP id h136so5899513oig.39
        for <users@maven.apache.org>; Sat, 29 Nov 2014 14:11:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=ogR3Go8hATyquuQapvYvVmA+QMICLS0/iEFpTT1ns00=;
        b=YGmFmfZvt18SkDJA4wWc/G3slJBcyRfdOmPOSAzcQmPj/RAohkiDe9HpPqZ8kr4ryY
         ii9YALPD7XL9rCAgFXt4aBCuKudVMAh2FwOQq1wACMV3mHmu2ZK1gmV/m2AtLClBCMkG
         iO8ItG+zBSwBMmJxYnZVXVO9EKqjk63oM93wvgwRJZGNCdtYzb9uErocBDBAaCnAUBDk
         X46+QcTc2pk76E3nFlJ4F6G/Me8DPGMnhchFw8FNQ1rT+HsCCHktFzAn8xwv2jZMO+Ly
         3XAJvGgyjG3690RWD2sda75sA4k+VBLm8bMoTOWJ/WvMP5pFwnh+szEyPKzmEc2ENlF5
         +3yg==
MIME-Version: 1.0
X-Received: by 10.202.50.84 with SMTP id y81mr15123092oiy.122.1417299112612;
 Sat, 29 Nov 2014 14:11:52 -0800 (PST)
Received: by 10.182.135.14 with HTTP; Sat, 29 Nov 2014 14:11:52 -0800 (PST)
Received: by 10.182.135.14 with HTTP; Sat, 29 Nov 2014 14:11:52 -0800 (PST)
In-Reply-To: <OF98967939.A808FCCE-ON85257D9E.00673D66-85257D9E.006762B9@belden.com>
References: <OFA2E1BE63.3A77C845-ON85257D9D.00817D6E-85257D9D.008354E4@belden.com>
	<op.xp1qawdgkdkhrr@robertscholte.dynamic.ziggo.nl>
	<OF98967939.A808FCCE-ON85257D9E.00673D66-85257D9E.006762B9@belden.com>
Date: Sat, 29 Nov 2014 23:11:52 +0100
Message-ID: <CAK8jvqwwMR_AbkSjhQOBd=yU1wt1qPK0Pu4RPreZPTZ5j6E5kw@mail.gmail.com>
Subject: Re: release plugin issue
From: Mirko Friedenhagen <mfriedenhagen@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a113cae1c2606da050906aacd
X-Virus-Checked: Checked by ClamAV on apache.org

--001a113cae1c2606da050906aacd
Content-Type: text/plain; charset=UTF-8

Alejandro,

I have a completely different approach as we use a staging maven repository
anyway:
- make sure your workspace has no extra files by using your SCM clean
function.
- only run mvn release:prepare with the following preparationGoals property
-DperformRelease=true -DinstallAtEnd=true -DdeployAtEnd=true clean deploy
- this ensures that only the tested  and successfully deployed version of
your software gets the tag.
- I expect tagging to be the least dangerous part of the process compared
to tests, integration tests or the whole maven run with all it's plugins.
- additionally this speeds up the whole process.

Regards
Mirko
-- 
Sent from my mobile
On Nov 28, 2014 7:49 PM, <Alejandro.Endo@grassvalley.com> wrote:

> That's good to know Robert, thank you
>
> I will add that to our release dryrun and hopefully it will catch more of
> the uncaught problems early on
>
> Alejandro Endo | Software Designer/Concepteur de logiciels
>
>
>
>
>
> From:   "Robert Scholte" <rfscholte@apache.org>
> To:     "Maven Users List" <users@maven.apache.org>,
> Date:   2014-11-28 12:46 PM
> Subject:        Re: release plugin issue
>
>
>
> Op Fri, 28 Nov 2014 00:54:29 +0100 schreef
> <Alejandro.Endo@grassvalley.com>:
>
> > I'm using the release-plugin v2.5.1 and I'm often encountering two
> > recurring stories with failed releases
> >
> > 1) Now the release can fail due to errors in the javadoc. This is not a
> > problem, the problem is that IF there are problems in the javadoc the
> > release doesn't complete but the two commits and the tag has been done
> so
> > after fixing the javadoc I need to reset the git repo to right before
> the
> > failed released AND I have to remove the tag to try again. I am
> releasing
> > from jenkins so the resume flag is set to false. if something fails we
> > start from the beginning, which makes sense in a build server IMO. My
> > suggestion here would be to generate all those artifacts (javadoc and
> > source) before committing and tagging the code, that way if they fail,
> > the
> > repo is not in an invalid state. Another option would be improvement #2
> >
> > 2) Very often the dryRun succeeds but the real release fails, to the
> > point
> > where the dryRun is meaningless. This defeats the whole purpose of a
> > dry-run. The problem is that the dry run is over simplified. For
> example,
> > again, if there are javadoc problems they won't be spotted because the
> > dry-run doesn't run javadoc generation. Anything that's part of the real
> > build should be run on the dry-run except for things that make
> persistent
> > changes. Another problem I encounter often is that the real release
> fails
> > because the tag already exists in SCM (leftover from a previous failed
> > release). This should also be validated by the dryRun. If a real release
> > can fail because a tag is already present then the dry run should fail
> if
> > the tag is already present
> >
> > What do you guys think? If these points are considered valid I will open
>
> > a
> > ticket at least for the second one, which is the worse of the two
> >
>
> It's also possible to do a dryrun for the release:perform since version
> 2.3 [1]
> That's still not the default of the jenkins m2-release-plugin, but it
> works.
>
> Robert
>
> [1] https://jira.codehaus.org/browse/MRELEASE-736
>
> >
> > Alejandro Endo | Software Designer/Concepteur de logiciels
> >
> >
> > DISCLAIMER:
> > Privileged and/or Confidential information may be contained in this
> > message. If you are not the addressee of this message, you may not
> > copy, use or deliver this message to anyone. In such event, you
> > should destroy the message and kindly notify the sender by reply
> > e-mail. It is understood that opinions or conclusions that do not
> > relate to the official business of the company are neither given
> > nor endorsed by the company.
> > Thank You.
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>
>
> DISCLAIMER:
> Privileged and/or Confidential information may be contained in this
> message. If you are not the addressee of this message, you may not
> copy, use or deliver this message to anyone. In such event, you
> should destroy the message and kindly notify the sender by reply
> e-mail. It is understood that opinions or conclusions that do not
> relate to the official business of the company are neither given
> nor endorsed by the company.
> Thank You.
>

--001a113cae1c2606da050906aacd--

