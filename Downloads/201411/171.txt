From users-return-137810-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Tue Nov 25 03:03:18 2014
Return-Path: <users-return-137810-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 22F4D10D10
	for <apmail-maven-users-archive@www.apache.org>; Tue, 25 Nov 2014 03:03:18 +0000 (UTC)
Received: (qmail 55821 invoked by uid 500); 25 Nov 2014 03:03:16 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 55741 invoked by uid 500); 25 Nov 2014 03:03:16 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 55724 invoked by uid 99); 25 Nov 2014 03:03:15 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Nov 2014 03:03:15 +0000
X-ASF-Spam-Status: No, hits=-0.7 required=5.0
	tests=RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of nhrdls@gmail.com designates 209.85.192.180 as permitted sender)
Received: from [209.85.192.180] (HELO mail-pd0-f180.google.com) (209.85.192.180)
    by apache.org (qpsmtpd/0.29) with ESMTP; Tue, 25 Nov 2014 03:02:49 +0000
Received: by mail-pd0-f180.google.com with SMTP id p10so11044663pdj.11
        for <users@maven.apache.org>; Mon, 24 Nov 2014 19:02:03 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :content-type:content-transfer-encoding;
        bh=xq89Mq7ZOXZ87qF1HYzunjXb7gth871a0vhXJiU1i68=;
        b=q9SQFbWum9E3PO+VizWUZc5BrwjhJydPtuaGabM7gdIm3ohkUDpr1rfOUSD4fYKdXu
         CUv1iePZht0sUTqJRsd8Za8q2FM1P1khWJdjCksJD5bHtF4Eu02s8Tum6w+L66KtL1bF
         n5u3TQapTN6U7SE83059FguIR3loAQuXAHUKf1mECEoWLgZtJDdh0+MmxWDvNnGs1lP8
         0z9VRkxg0NfiMDZpweexcZuHavJ4fexGtLRt4Ff90nI7DP1cNcCZ6EjEk0L5xFm9ujma
         uHlyPuXL5BBE+N2R9nANjilHqLW2ultqKFMINlrFnYcu9ly6PC7qZWOec1J4V1I00Kmk
         kGcA==
X-Received: by 10.68.234.9 with SMTP id ua9mr38518453pbc.2.1416884522971;
        Mon, 24 Nov 2014 19:02:02 -0800 (PST)
Received: from [10.0.0.119] (173-164-138-60-SFBA.hfc.comcastbusiness.net. [173.164.138.60])
        by mx.google.com with ESMTPSA id oe6sm3784186pbc.68.2014.11.24.19.02.00
        for <users@maven.apache.org>
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 24 Nov 2014 19:02:01 -0800 (PST)
Message-ID: <5473F127.8010201@gmail.com>
Date: Mon, 24 Nov 2014 19:01:59 -0800
From: Niranjan Rao <nhrdls@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101 Thunderbird/31.2.0
MIME-Version: 1.0
To: Maven <users@maven.apache.org>
Subject: Enforcing annotations
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

Since this was not a maven question directly, I tried posting this at 
stackoverflow first at 
https://stackoverflow.com/questions/27068654/how-to-enforce-verify-spring-scope-annotation-on-spring-beans. 
Did not get much traction.

We do use spring and its dependency injection mechanism using 
annotations only. No XML files for spring.  However the trouble starts 
when developers start mixing beans of different scopes - most of the 
time by accident. Many developers forget that beans are singleton in 
scope by default and end up creating beans (or services) that has state. 
They are happy because if it works on their machine but creates 
interesting mix/match of data when more than one user logs in to the 
application.

Right now, I am thinking of simple solution - enforce that every spring 
component needs to have scope annotation also. Thought behind this is it 
will force developer to think about the scope by explicitly declaring 
the value.

Are there any plugins that can do this? If not, can I extend maven 
enforcer plugin or findbugs in anyway to do this? Open to any other 
suggestions also.

Regards,

Niranjan

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


