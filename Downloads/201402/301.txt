From users-return-135571-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Feb 19 23:07:10 2014
Return-Path: <users-return-135571-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 8B53710699
	for <apmail-maven-users-archive@www.apache.org>; Wed, 19 Feb 2014 23:07:10 +0000 (UTC)
Received: (qmail 15264 invoked by uid 500); 19 Feb 2014 23:07:06 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 15212 invoked by uid 500); 19 Feb 2014 23:07:06 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 15204 invoked by uid 99); 19 Feb 2014 23:07:06 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Feb 2014 23:07:06 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 19 Feb 2014 23:07:00 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id 3FE886A76F2
	for <users@maven.apache.org>; Wed, 19 Feb 2014 18:06:38 -0500 (EST)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 256I74xNG_RJ for <users@maven.apache.org>;
	Wed, 19 Feb 2014 18:06:28 -0500 (EST)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id 96CE76A76F1
	for <users@maven.apache.org>; Wed, 19 Feb 2014 18:06:28 -0500 (EST)
Message-ID: <530538F1.3070803@artifact-software.com>
Date: Wed, 19 Feb 2014 18:06:25 -0500
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: rwheeler@artifact-software.com
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.3.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: Solution for handeling many conflicts in maven dependencies.
References: <CAMrx5DxqhShDEsWMS2nRRVVn78XhC5dZGNYD-FG=7MAkSg-FMw@mail.gmail.com>
In-Reply-To: <CAMrx5DxqhShDEsWMS2nRRVVn78XhC5dZGNYD-FG=7MAkSg-FMw@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

http://blog.artifact-software.com/tech/?p=121
This describes how we solved the problem.
We built libraries that had groups of related libraries aggregated into 
a single jar where we fixed all of the version conflicts.
Then developers only have to depend on a small number of jars that have 
the versions set the way we want.
We have jars for
Spring
CXF
Jasper Reports
JSF
Jetspeed
Tomcat and Java
Hibernate&MySQL
and so on. About 10 in total. These represent about 70Mb of code and 
configuration.

We have one called "shared" that picks up all the little utilities from 
Apache and others like logging, mail, document production, XML parsing.

The  approved set is issued with the same version number so that 
developers know which set to use.
This makes their lives easier.

We also provide those libraries as jar files so that project jars only 
have their own code in them so they build quickly.
Once you load the libraries into your container, you only have small 
files to handle each time you want to refresh your test site.

On 19/02/2014 6:55 AM, Egor Pahomov wrote:
> Problem: I need to combine using of many artifacts in my maven project:
> hbase, hadoop-client, akka, spray, netflix-curator, spark. All these
> artifacts depend on different versions of other artifacts: zookeper-client,
> protobuf, jetty, etc. I've spent 3 days just to write all excludes
> correctly to archive version compatibility. So now I've got pretty
> consistent configuration. I want to create a framework to help my
> colleagues, who work on a similar stack, to use results of my work and
> don't spend 3 days on writing excludes.
>
>      I'm aware of maven-enforcer-plugin, which doesn't allow you to use the
> same artifacts with a different version. It helps, but it's not enough.
>
> I would love to hear about solutions you might suggest. Here's my vision: I
> create a parent pom with dependency management only. In this dependency
> management I write all the excludes and make the artifacts compatible. Then
> someone can use this pom as a parent and just write dependencies. But there
> is a problem. We excluded zookeeper from netflix-curator and hadoop, but
> not from hbase. So when we use all 3 artifacts we receive zookeeper from
> hbase, but when use only netflix-curator and hadoop we can lost needed
> artifacts. And we would recognize it only when in Runtime we receive
> "ClassNotFoundException". That's why I want to write an additional plugin
> for this case. This plugin would check: if you have dependency on some
> artifact, you should depend on artifacts, which were excluded from that
> artifact. If you lost some artifact, you need to add it or configure an
> exception.
>
> What do you think about such solution?
>
>


-- 
Ron Wheeler
President
Artifact Software Inc
email: rwheeler@artifact-software.com
skype: ronaldmwheeler
phone: 866-970-2435, ext 102


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


