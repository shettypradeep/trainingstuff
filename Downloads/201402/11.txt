From users-return-135360-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Wed Feb  5 20:06:55 2014
Return-Path: <users-return-135360-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 26E3A105BB
	for <apmail-maven-users-archive@www.apache.org>; Wed,  5 Feb 2014 20:06:55 +0000 (UTC)
Received: (qmail 56036 invoked by uid 500); 5 Feb 2014 20:06:48 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 55910 invoked by uid 500); 5 Feb 2014 20:06:47 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 55868 invoked by uid 99); 5 Feb 2014 20:06:43 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 05 Feb 2014 20:06:43 +0000
X-ASF-Spam-Status: No, hits=1.0 required=5.0
	tests=FORGED_YAHOO_RCVD,RCVD_IN_DNSWL_NONE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: local policy)
Received: from [212.82.96.79] (HELO nm1-vm8.bullet.mail.ir2.yahoo.com) (212.82.96.79)
    by apache.org (qpsmtpd/0.29) with ESMTP; Wed, 05 Feb 2014 20:06:36 +0000
Received: from [212.82.98.55] by nm1.bullet.mail.ir2.yahoo.com with NNFMP; 05 Feb 2014 20:06:15 -0000
Received: from [46.228.39.71] by tm8.bullet.mail.ir2.yahoo.com with NNFMP; 05 Feb 2014 20:06:15 -0000
Received: from [127.0.0.1] by smtp108.mail.ir2.yahoo.com with NNFMP; 05 Feb 2014 20:06:15 -0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo.com; s=s1024; t=1391630775; bh=HJb6seGRhc5wocxpxtDQ3WiHyhRl0IulKkr9JT4gjLA=; h=X-Yahoo-Newman-Id:X-Yahoo-Newman-Property:X-YMail-OSG:X-Yahoo-SMTP:X-Rocket-Received:Message-ID:Date:From:User-Agent:MIME-Version:To:Subject:References:In-Reply-To:Content-Type:Content-Transfer-Encoding:X-Antivirus:X-Antivirus-Status; b=ZMbO6OsOkb4V7oq+6PuhsSyT0f2RelMq/jKwFRauNlweDkaeJmFMsINDk0td4VydNCylD/hxg1sqEUQI0muQXQ/5D7w3gtfpFmJ/YymBwmg+pnWBRyHVBw1Ga9ctmcIU/mGa8vLCuZOFfVhdjzCSJ0DmQ4GUKX5InwMZW0BpS7A=
X-Yahoo-Newman-Id: 826550.8960.bm@smtp108.mail.ir2.yahoo.com
X-Yahoo-Newman-Property: ymail-3
X-YMail-OSG: SuM3YlwVM1k7Eh51xqNjA8cbCfDfC8sAQQEuWgg9TBFAEXn
 30fQs6VMG21DGpTlYdqzoHGbSRO7aO_gAzgHX2tq4K7HQ8WxU0gLDPNXyNBf
 KKdltUSr68aWEGZ8.VpjpBeSgvc272fAjLcfPcJaohXPCnV8eAcXTbGZp3u3
 pNFZSY22R173uGwXFx7cZjgOzfO_MbjYk77O7An3GoKeOyp7DEndnTo7t4bO
 mKXZDOTao1LuBDschWytlbYIOn3dawolLumPxvZT2tXtbVxwDu9HrxH16U2o
 87o8ybUpTx.HFjLiBhODDE7beBDVrkVYYwvKbymPkh0s6NGtaimd_tVSH2YE
 qEd56_CS.gLGxatfkmnOZtneYGNcAGhXYooz85QB0LvX_3R3pGi4YnDdcpyA
 XsP23S3lE6BE59Y79849KCdMQx0xnyjYD9uoYG5.LV27kogkaIquo4xnyPeu
 2l.Np9M3z365nhXJD5elfbYTnU0cAvCtsnpkRiFXHePEi__fuTR5EZPQkA85
 z_qhi.2QUYPPPAl6FOcir0yfgOd7XwTSeFW6jn44qIvGIuCbIPsszi0hgguy
 FZOXbQLim435BX3YWpY_jT1RU7fFPuvEVKI_BENu69BQI0zyzBxF.K34zU8M
 MZtXy9TUHVS68CUqaxL7eZ3AQqpNcYdzdDp.zLkyMSd2Cqpth894BjsEoBLn
 Q2HNjtmiNhfTYSaQHOPkxs9I-
X-Yahoo-SMTP: PKuT8k2swBCeFOHzkGy5rTOUTa2hBxlR
X-Rocket-Received: from [127.0.0.1] (its_toasted@108.13.36.11 with plain [188.125.69.59])
        by smtp108.mail.ir2.yahoo.com with SMTP; 05 Feb 2014 20:06:15 +0000 UTC
Message-ID: <52F2998D.4060703@yahoo.com>
Date: Wed, 05 Feb 2014 12:05:33 -0800
From: Mark Eggers <its_toasted@yahoo.com>
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.3.0
MIME-Version: 1.0
To: Maven Users List <users@maven.apache.org>
Subject: Re: Build is successful but can't run?
References: <1391622778030-5783294.post@n5.nabble.com> <52F28A38.4090909@yahoo.com> <CALDR_3c9BHW88+OqpeTgxhD7jXt+6if1o=RhBgUC69Fv4q8cCw@mail.gmail.com>
In-Reply-To: <CALDR_3c9BHW88+OqpeTgxhD7jXt+6if1o=RhBgUC69Fv4q8cCw@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Antivirus: avast! (VPS 140205-0, 02/05/2014), Outbound message
X-Antivirus-Status: Clean
X-Virus-Checked: Checked by ClamAV on apache.org

On 2/5/2014 11:40 AM, TenLeftFingers wrote:
> Hi Mark,
>
> Thanks for that. I changed the pom as you suggested. When I ran with java
> -jar myApp.jar I got the output:
> *Failed to load Main-Class manifest attribute from target/myApp.jar*
>

A couple of things:

1. the main-class-name was supposed to be your main class

> I opened the manifest and the *Main-Class* attribute was entered as
> *mainClass.* So I changed it to the former and that got rid of that error.
> But now  I *still *get the original error.
>
> The only pom change I'm not sure about is
> *<classpathPrefix>lib/</classpathPrefix>*. What classes is that classpath
> trying to capture?
>

You need to change to the project target directory in order for it to 
run and find the supporting jars.

The classpathPrefix line sets where to look for additional JAR files. It 
is relative to where you are.

Maven compiles and packages your program into a JAR. It copies all of 
the supporting JAR files listed in your dependencies into target/lib.

Before you run, make sure that target/lib exists and has all of the JAR 
files you need.

Now, change to the target directory on the command line, and execute the 
program. The keys here are the following:

1. change to the target directory on the command line
2. execute the program with the following:

java -jar my-app-1.0-SNAPSHOT.jar

Now the lib directory will be in the correct relative path, and your 
dependencies should be found.

> Thanks,
> Ten
>

The exec plugin (http://mojo.codehaus.org/exec-maven-plugin/) as Wayne 
has mentioned is another way to accomplish this. This will help you run 
from within an IDE or by using mvn exec:exec, but it won't help you 
package and ship your code out for other users.

You can combine both. I've not used the exec-maven-plugin, so creating 
the plugin configuration for that is left as an exercise for the reader. 
However, the documentation on the link listed above should get you started.

/mde/

>
> On Wed, Feb 5, 2014 at 7:01 PM, Mark Eggers [via Maven] <
> ml-node+s40175n5783298h15@n5.nabble.com> wrote:
>
>> On 2/5/2014 9:52 AM, TenLeftFingers wrote:
>>
>>> When I build my Maven project with dependencies (using Netbeans but
>> pointing
>>> to a vanilla Maven installation), I get BUILD SUCCESS. Great!
>>>
>>> When I try to /run /it in the form of *java -cp
>>> target/my-app-1.0-SNAPSHOT.jar com.mycompany.app.App* I get this:
>>> *java.lang.NoClassDefFoundError: org/slf4j/LoggerFactory*
>>>
>>> How come this dependency fails at this late stage?
>>>
>>> Trying to run the class from NetBeans itself gives a different error:
>>> *Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.2.1:exec*
>>>
>>> Please enlighten me as to how I can run this thing. It works fine in
>> Eclipse
>>> when I run it as a Java Application - but Eclipse has other problems
>> that
>>> I'm avoiding so I need to do this either from CLI or NetBeans
>> (preferable).
>>>
>>> Thanks,
>>> Ten
>>
>> I normally use NetBeans . . . .
>>
>> One way to handle this (and it'll end up looking like a standard
>> NetBeans project) is the following.
>>
>> 1. Modify the manifest via the maven-jar-plugin
>>
>> <plugin>
>>     <groupId>org.apache.maven.plugins</groupId>
>>     <artifactId>maven-jar-plugin</artifactId>
>>     <version>2.4</version>
>>     <configuration>
>>       <archive>
>>         <manifest
>> <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
>>           <mainClass>main-class-name</mainClass>
>>           <addClasspath>true</addClasspath>
>>           <classpathPrefix>lib/</classpathPrefix>
>>         </manifest>
>>       </archive>
>>     </configuration>
>> </plugin>
>>
>> 2. Use the maven-dependency-plugin to copy over the libraries
>>
>> <plugin>
>>     <groupId>org.apache.maven.plugins</groupId>
>>     <artifactId>maven-dependency-plugin</artifactId>
>>     <version>2.8</version>
>>     <executions>
>>       <execution>
>>         <phase>package</phase>
>>         <goals>
>>           <goal>copy-dependencies</goal>
>>         </goals>
>>         <configuration>
>> <outputDirectory>${project.build.directory}/lib</outputDirectory>
>>           <includeScope>compile</includeScope>
>>         </configuration>
>>       </execution>
>>     </executions>
>> </plugin>
>>
>> 3. Run from the command line to test
>>
>> mvn package
>> cd target
>> java -jar jarFileName.jar
>>
>> To ship the binaries, use the maven-assembly-plugin and package both the
>> JAR and the supporting libraries. That way when someone unpacks the zip
>> (or tar or tar.gz, etc.), the directory structure will be maintained.
>>
>> Here's an assembly.xml file. I've left out the xml namespace declarations:
>>
>> <?xml version="1.0" encoding="UTF-8"?>
>> <assembly>
>>       <id>bin</id>
>>       <formats>
>>           <format>tar.gz</format>
>>           <format>zip</format>
>>       </formats>
>>       <includeBaseDirectory>false</includeBaseDirectory>
>>       <includeSiteDirectory>false</includeSiteDirectory>
>>       <fileSets>
>>           <fileSet>
>>               <directory>target</directory>
>>               <outputDirectory></outputDirectory>
>>               <includes>
>>                   <include>*.jar</include>
>>                   <include>lib/</include>
>>               </includes>
>>           </fileSet>
>>       </fileSets>
>> </assembly>
>>
>> Other ways include creating an uber-jar.
>>
>> . . . . just my two cents.
>> /mde/



---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


