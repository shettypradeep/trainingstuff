From users-return-135438-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Thu Feb 13 06:14:32 2014
Return-Path: <users-return-135438-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 9D85910651
	for <apmail-maven-users-archive@www.apache.org>; Thu, 13 Feb 2014 06:14:31 +0000 (UTC)
Received: (qmail 86614 invoked by uid 500); 13 Feb 2014 06:14:20 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 86155 invoked by uid 500); 13 Feb 2014 06:14:14 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 86142 invoked by uid 99); 13 Feb 2014 06:14:12 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 13 Feb 2014 06:14:12 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=RCVD_IN_DNSWL_NONE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of benoit@berthonneau.com designates 188.165.54.143 as permitted sender)
Received: from [188.165.54.143] (HELO mo4.mail-out.ovh.net) (188.165.54.143)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 13 Feb 2014 06:14:07 +0000
Received: from mail624.ha.ovh.net (b6.ovh.net [213.186.33.56])
	by mo4.mail-out.ovh.net (Postfix) with SMTP id 18D14FFB19F
	for <users@maven.apache.org>; Thu, 13 Feb 2014 07:18:43 +0100 (CET)
Received: from b0.ovh.net (HELO queueout) (213.186.33.50)
	by b0.ovh.net with SMTP; 13 Feb 2014 08:14:53 +0200
Received: from 128-79-78-59.hfc.dyn.abo.bbox.fr (HELO ?192.168.1.1?) (benoit@berthonneau.com@128.79.78.59)
  by ns0.ovh.net with SMTP; 13 Feb 2014 08:14:52 +0200
References: <9e5201cf2831$52f17c60$f8d47520$@berthonneau.com> <CABLGb9yyWxO8om2YE2Y-3v0RwLgB4RmY6cG9UK330DY4UVGHpQ@mail.gmail.com> <008101cf2834$fcf8d4d0$f6ea7e70$@berthonneau.com> <CAFBdXRp0KqmGHnDjjD3=_U94nh4HNo1zWrV5KNVRRxDeVSBjoQ@mail.gmail.com> <CAK8jvqytpdu2aa11qOrBjZhvjBShf97scfSVc4yRNnGQ9GVK_g@mail.gmail.com> <52FBF4F1.8090701@artifact-software.com>
Mime-Version: 1.0 (1.0)
In-Reply-To: <52FBF4F1.8090701@artifact-software.com>
Content-Type: text/plain;
	charset=utf-8
Content-Transfer-Encoding: quoted-printable
Message-Id: <7AFDDD6F-AC2B-4D54-A161-1A71618D308D@berthonneau.com>
Cc: "users@maven.apache.org" <users@maven.apache.org>
X-Mailer: iPad Mail (11B554a)
From: =?utf-8?Q?Beno=C3=AEt_Berthonneau?= <benoit@berthonneau.com>
Subject: Re: Code coverage with debug logs: 100% branch coverage not possible?...
Date: Thu, 13 Feb 2014 07:13:43 +0100
To: Maven Users List <users@maven.apache.org>
X-Ovh-Tracer-Id: 7123568712132372752
X-Ovh-Remote: 128.79.78.59 (128-79-78-59.hfc.dyn.abo.bbox.fr)
X-Ovh-Local: 213.186.33.20 (ns0.ovh.net)
X-OVH-SPAMSTATE: OK
X-OVH-SPAMSCORE: -100
X-OVH-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrfeejtddrjedvucetufdoteggodetrfcurfhrohhfihhlvgemucfqggfjnecuuegrihhlohhuthemuceftddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
X-Spam-Check: DONE|U 0.5/N
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: -100
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrfeejtddrkeejucetufdoteggodetrfcurfhrohhfihhlvgemucfqggfjnecuuegrihhlohhuthemuceftddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmd
X-Virus-Checked: Checked by ClamAV on apache.org

Ron, Mirko, Kevin,

Thanks for your feedback : you're right with Slf4j implementation. Unfortuna=
tely, it is not. It is a home made logger interface implemented by Log4j.

Beno=C3=AEt

> Le 12 f=C3=A9vr. 2014 =C3=A0 23:25, Ron Wheeler <rwheeler@artifact-softwar=
e.com> a =C3=A9crit :
>=20
>=20
>=20
> Not really a Maven issue but if you do your logging like this:
>=20
> package com.myco.testapp;
> import org.slf4j.Logger;
> import org.slf4j.LoggerFactory;
>=20
> public class MyClass{
>            private Logger _logger=3DLoggerFactory.getLogger(this.getClass(=
));
>=20
>      logger.debug(=E2=80=9Cblah {} in the loop that contains {}=E2=80=9D, i=
, max);
>=20
> }
>=20
> You can sort out the enabling of logs and destination of your logging by s=
everity and class(I think by package as well) in the log configuration at ru=
n-time.
>=20
> Ron
>=20
>> On 12/02/2014 4:20 PM, Mirko Friedenhagen wrote:
>> Hello Benoit,
>>=20
>> Kevin is right, using slf4j[0] one would use sth. like:
>>=20
>> logger.debug(=E2=80=9Cblah {} in the loop that contains {}=E2=80=9D, i, m=
ax);
>>=20
>> No need for iffing :-).
>>=20
>> [0] http://www.slf4j.org/manual.html
>> Regards Mirko
>> --
>> http://illegalstateexception.blogspot.com/
>> https://github.com/mfriedenhagen/ (http://osrc.dfm.io/mfriedenhagen)
>> https://bitbucket.org/mfriedenhagen/
>>=20
>>=20
>>> On Wed, Feb 12, 2014 at 10:10 PM, Kevin Krumwiede <kjkrum@gmail.com> wro=
te:
>>> It does matter which implementation.  The main reason it was recommended=
 to
>>> check the logging level was because string concatenation can be expensiv=
e,
>>> and you want to avoid doing it for a message that won't be logged.  But i=
f
>>> you're using a logging API like slf4j that uses parameter replacement
>>> tokens in the message string, if the message isn't logged, the replaceme=
nt
>>> won't be performed and the call will be cheap.
>>> On Feb 12, 2014 1:57 PM, "Beno=C3=AEt Berthonneau" <benoit@berthonneau.c=
om>
>>> wrote:
>>>=20
>>>> Hi Paul,
>>>>=20
>>>>=20
>>>>=20
>>>> Don't think that I could play with exclusions. Here is an example :
>>>>=20
>>>>=20
>>>>=20
>>>> *A Unit Test :*
>>>>=20
>>>>=20
>>>>=20
>>>> *The tested class with ALL traces activated:*
>>>>=20
>>>>=20
>>>>=20
>>>> *And the same tested class with INFO traces activated:*
>>>>=20
>>>>=20
>>>>=20
>>>>=20
>>>>=20
>>>> -----Message d'origine-----
>>>> De : paulus.benedictus@gmail.com [mailto:paulus.benedictus@gmail.com] D=
e
>>>> la part de Paul Benedict
>>>> Envoy=C3=A9 : mercredi 12 f=C3=A9vrier 2014 21:36
>>>> =C3=80 : Maven Users List
>>>> Objet : Re: Code coverage with debug logs: 100% branch coverage not
>>>> possible?...
>>>>=20
>>>>=20
>>>>=20
>>>> IIRC, there should be an option in Emma/Cobertura that allows you to
>>>> exclude coverage on certain classes. So if you can exclude your log4j
>>>> classes (you don't really want to test your logging, do you?), then you=

>>>> should be able to raise your percentage.
>>>>=20
>>>>=20
>>>>=20
>>>>=20
>>>>=20
>>>> On Wed, Feb 12, 2014 at 2:30 PM, Beno=C3=AEt Berthonneau
>>>>=20
>>>> <benoit@berthonneau.com>wrote:
>>>>=20
>>>>=20
>>>>=20
>>>>> Hi all,
>>>>> I need your opinion/way to tackle the following problem:
>>>>> In many projects we use a Logger (doesn't matter which
>>>>> implementation). It is often recommend to test if the debug level is
>>>>> activated before logging a debug trace like the following:
>>>>> if (logger.isDebugEnabled()) {
>>>>>     logger.debug("blah " + i + " in the loop that contains " + max);
>>>>> }
>>>>> Now when you run unit tests on this kind of code you need to make a
>>>> choice:
>>>>=20
>>>>> run tests with INFO level or run tests with ALL traces activated. I
>>>>> choose the second option in order to:
>>>>> *         Check that debug traces doesn't throw unwanted exception (li=
ke
>>>>> NPE)
>>>>> *         Have a better code coverage in term of covered lines
>>>>> But in term of branches coverage we could never have a 100% :(
>>>>> To me the only way to cover this is to run the tests suite 2 times:
>>>>> one with INFO traces configured, and another one with ALL traces
>>>>> activated.
>>>>> Did you face this issue and how did you solve it ?
>>>>> Thanks,
>>>>> Beno=C3=AEt.
>>>>=20
>>>>=20
>>>>=20
>>>>=20
>>>> --
>>>>=20
>>>> Cheers,
>>>>=20
>>>> Paul
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
>> For additional commands, e-mail: users-help@maven.apache.org
>=20
>=20
> --=20
> Ron Wheeler
> President
> Artifact Software Inc
> email: rwheeler@artifact-software.com
> skype: ronaldmwheeler
> phone: 866-970-2435, ext 102
>=20
>=20
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>=20

---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


