From users-return-135514-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sun Feb 16 07:16:08 2014
Return-Path: <users-return-135514-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 087DC10C05
	for <apmail-maven-users-archive@www.apache.org>; Sun, 16 Feb 2014 07:16:08 +0000 (UTC)
Received: (qmail 74734 invoked by uid 500); 16 Feb 2014 07:16:01 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 73715 invoked by uid 500); 16 Feb 2014 07:15:55 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 73706 invoked by uid 99); 16 Feb 2014 07:15:53 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Feb 2014 07:15:53 +0000
X-ASF-Spam-Status: No, hits=2.4 required=5.0
	tests=FREEMAIL_ENVFROM_END_DIGIT,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of skriver79@gmail.com designates 209.85.192.41 as permitted sender)
Received: from [209.85.192.41] (HELO mail-qg0-f41.google.com) (209.85.192.41)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sun, 16 Feb 2014 07:15:46 +0000
Received: by mail-qg0-f41.google.com with SMTP id i50so3347258qgf.0
        for <users@maven.apache.org>; Sat, 15 Feb 2014 23:15:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=XqMnH5LgDa7C/ASeyXeUeKDIvuJ590JGjSL6uQxP3MU=;
        b=H0aJufOAVM1IqBnmyErVz2jTPlXfmDkzll/O7tOEgr7JLqaZWf29M6aSbxUNBPBgOp
         1wqdpr1maLsCxHexZVJ5yOl53YqzpQtW5qA3Bs/fSPbAjV5O+ZuPCThcloR8mJMwDgjP
         nV046G9J2Zne6Fwvk/ZUBhQT0oEx5WK+bNN4Hfq9CaPyAWAK3Jn/qd3acemk5nNFtlnc
         Y2j2j8zbFjoWEHl4XugHnUbfHGZATZSTblzzzBJbAlURR/cNGz3Ma65vWzp/SQUkkapB
         YsblJJKip61C94469NLiNrlI5g5vGqdbqT4+53H/kZC3tdBUx9oabJZdwbuv9cq/jEQO
         kssw==
MIME-Version: 1.0
X-Received: by 10.140.50.131 with SMTP id s3mr24977920qga.12.1392534925275;
 Sat, 15 Feb 2014 23:15:25 -0800 (PST)
Received: by 10.96.28.72 with HTTP; Sat, 15 Feb 2014 23:15:25 -0800 (PST)
In-Reply-To: <CAKDUN1siUg+ac5Zr_mceGE63yuc5t5U3d5G-MduNWVe8b7vt-Q@mail.gmail.com>
References: <CAARODrivJ_wMZ9dxxsPWTxskHTnEL0O0O=wtNmJDV42aE1TptQ@mail.gmail.com>
	<CAARODriPrUAm6KTf6ppK1xstyVaO9bZ8xkY8swRwF7KcEp+kJw@mail.gmail.com>
	<CAKDUN1v39-sf_dq=8A-1dF2cQyi8v+k_dVqsRJzwHwNsnhUHgQ@mail.gmail.com>
	<CAARODrhvS5yH8pUyz+7SWFA4pQ5DkcFEmggwnBHnSA1MFJC3-Q@mail.gmail.com>
	<CAKDUN1siUg+ac5Zr_mceGE63yuc5t5U3d5G-MduNWVe8b7vt-Q@mail.gmail.com>
Date: Sun, 16 Feb 2014 11:15:25 +0400
Message-ID: <CAARODrhXO2xt05wkxDo7qa8KPwuVyejcbPg28bw_zv-6AFE4vQ@mail.gmail.com>
Subject: Re: Maven deploy plugin 2.8.1 - deploy-file goal - unable to avoid
 attachedArtifacts from being deployed in execute
From: Henrik Skriver Rasmussen <skriver79@gmail.com>
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a113522968ef90704f280cd73
X-Virus-Checked: Checked by ClamAV on apache.org

--001a113522968ef90704f280cd73
Content-Type: text/plain; charset=ISO-8859-1

Thanks for the advice on how to restructure.
Could you have a look at the deploy-plugin project and the file
org.apache.maven.plugin.deploy.DeployFileMojo execute method line 376 in
version 2.8.1 ? I would really like to understand the following:
1) What controls which artifacts are attached the model for the given
project?
2) Is it possible to state that no artifacts except explicitly stated
should be created/attached?
3) Is it really the intended behaviour of the deploy:file goal to also
deploy the attached artifacts? To me that is a very non-intuitive
behaviour.

I Basically have a working setup which deploys the zip file I generate to
repo with the name I have specified. But the only thing that bothers me is
that for some unclear reason the same zip is deployed again with the name
of the project in the same deploy:file goal. To me - that is a bug.
Should I open an issue instead somewhere and provide the patch which fixes
this??
I already mailed the email listed in the top of the java file in question
but he does not reply.



Med venlig hilsen
Henrik Skriver Rasmussen


On Thu, Feb 13, 2014 at 2:54 PM, Anders Hammar <anders@hammar.net> wrote:

> You should really restart with the module 2 pom.
>
> Your multi-module structure is good. You have a separate projekt/module
> which creates your distro. What you should do is to create the "distro"
> (zip or whatever) to be created as part of the normal build and then
> deployed as the project's artifact it is.
> This is done in many projects and you could for example have a look at the
> Maven core project where we create a zip and a tar file.
>
> https://git-wip-us.apache.org/repos/asf?p=maven.git;a=tree;f=apache-maven;hb=HEAD
>
> So in the end, you will not use deploy:deploy-file. Also, your pom will be
> very small with pretty much only the m-assembly-p being bound to the build
> lifecycle.
>
> /Anders
>
>
> On Thu, Feb 13, 2014 at 11:36 AM, Henrik Skriver Rasmussen <
> skriver79@gmail.com> wrote:
>
> > Hi Anders
> >
> > I have a multi-module project with this structure:
> >
> >  A (root and parent pom project)
> >  - module 1 - builds a jar as artifact
> >  - module 2  - uses module 1 jar artifact in assembly tries to deploy the
> > assembled zip file to artifactory.
> >
> > This is the module 2 pom file with YYYY inserted to replace project
> > specific names.
> >
> > <project xmlns="http://maven.apache.org/POM/4.0.0"
> >
> > xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
> >
> > xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
> > http://maven.apache.org/xsd/maven-4.0.0.xsd">
> >
> > <modelVersion>4.0.0</modelVersion>
> >
> > <parent>
> >
> >  <groupId>YYYY</groupId>
> >
> >  <artifactId>YYYY</artifactId>
> >
> >  <version>1.1-SNAPSHOT</version>
> >
> > </parent>
> >
> >  <artifactId>scripts</artifactId>
> >
> > <packaging>pom</packaging>
> >
> > <name>scripts</name>
> >
> > <description>YYYY</description>
> >
> >  <properties>
> >
> >  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
> >
> >
>  <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
> >
> >  <main.basedir>${project.parent.basedir}</main.basedir>
> >
> > </properties>
> >
> >   <build>
> >
> >  <plugins>
> >
> >  <plugin>
> >
> >   <groupId>org.apache.maven.plugins</groupId>
> >
> >   <artifactId>maven-install-plugin</artifactId>
> >
> >   <version>2.5.1</version>
> >
> >   <configuration>
> >
> >   <skip>true</skip>
> >
> >   </configuration>
> >
> >  </plugin>
> >
> >  <plugin>
> >
> >   <groupId>org.apache.maven.plugins</groupId>
> >
> >   <artifactId>maven-assembly-plugin</artifactId>
> >
> >   <version>2.4</version>
> >
> >   <configuration>
> >
> >   <skip>true</skip>
> >
> >   </configuration>
> >
> >  </plugin>
> >
> >  <plugin>
> >
> >   <groupId>org.apache.maven.plugins</groupId>
> >
> >   <artifactId>maven-deploy-plugin</artifactId>
> >
> >   <version>2.8.1</version>
> >
> >   <configuration>
> >
> >   <skip>true</skip>
> >
> >   </configuration>
> >
> >  </plugin>
> >
> >    </plugins>
> >
> > </build>
> >
> >  <profiles>
> >
> >  <profile>
> >
> > <id>deployprofile</id>
> >
> >  <build>
> >
> >   <plugins>
> >
> >   <plugin>
> >
> >    <groupId>org.codehaus.mojo</groupId>
> >
> >    <artifactId>exec-maven-plugin</artifactId>
> >
> >    <version>1.2.1</version>
> >
> >    <executions>
> >
> >    <execution>
> >
> >     <id>Copy  into target folder and copy service jar into files/default
> > </id>
> >
> >     <phase>package</phase>
> >
> >     <goals>
> >
> >     <goal>exec</goal>
> >
> >     </goals>
> >
> >     <configuration>
> >
> >     <executable>${project.basedir}/build_cookbook.sh</executable>
> >
> >     <arguments>
> >
> >      <argument>${project.parent.artifactId}</argument>
> >
> >      <argument>${project.parent.version}</argument>
> >
> >     </arguments>
> >
> >     </configuration>
> >
> >    </execution>
> >
> >    </executions>
> >
> >   </plugin>
> >
> >   <plugin>
> >
> >    <groupId>org.apache.maven.plugins</groupId>
> >
> >    <artifactId>maven-assembly-plugin</artifactId>
> >
> >    <version>2.4</version>
> >
> >       <executions>
> >
> >    <execution>
> >
> >     <id>deployprofile</id>
> >
> >     <phase>package</phase>
> >
> >     <goals>
> >
> >     <goal>single</goal>
> >
> >     </goals>
> >
> >     <configuration>
> >
> >     <finalName>${project.parent.artifactId}-${project.parent.version}
> > </finalName>
> >
> >     <outputDirectory>${project.build.directory}/</outputDirectory>
> >
> >     <filtering>true</filtering>
> >
> >     <descriptors>
> >
> >      <descriptor>assembly/dist.xml</descriptor>
> >
> >     </descriptors>
> >
> >     </configuration>
> >
> >    </execution>
> >
> >    </executions>
> >
> >   </plugin>
> >
> >   <plugin>
> >
> >    <groupId>org.apache.maven.plugins</groupId>
> >
> >    <artifactId>maven-deploy-plugin</artifactId>
> >
> >    <executions>
> >
> >    <execution>
> >
> >     <id>cookbook</id>
> >
> >     <phase>deploy</phase>
> >
> >     <goals>
> >
> >     <goal>deploy-file</goal>
> >
> >     </goals>
> >
> >     <configuration>
> >
> >                       <primaryArtifact>false</primaryArtifact>
> >
> >     <repositoryId>artifactory</repositoryId>
> >
> >     <packaging>zip</packaging>
> >
> >     <url>${project.distributionManagement.snapshotRepository.url}</url>
> >
> >     <generatePom>false</generatePom>
> >
> >     <artifactId>${project.parent.artifactId}</artifactId>
> >
> >     <groupId>${project.parent.groupId}</groupId>
> >
> >     <version>${project.parent.version}</version>
> >
> >     <classifier>deploymentfile</classifier>
> >
> >     <file>
> >
> >
> >
> >
> ${project.build.directory}/${project.parent.artifactId}-${project.parent.version}-deploymentfile.zip
> >
> >     </file>
> >
> >     </configuration>
> >
> >    </execution>
> >
> >    </executions>
> >
> >   </plugin>
> >
> >   </plugins>
> >
> >  </build>
> >
> >  </profile>
> >
> > </profiles>
> >
> > </project>
> >
> >
> > Med venlig hilsen
> > Henrik Skriver Rasmussen
> >
> >
> > On Thu, Feb 13, 2014 at 2:15 PM, Anders Hammar <anders@hammar.net>
> wrote:
> >
> > > You need to provide more info on what you're doing! Is the
> > > deploy:deploy-file bound to the build lifecycle of a project? How?
> > >
> > > /Anders
> > >
> > >
> > > On Thu, Feb 13, 2014 at 11:06 AM, Henrik Skriver Rasmussen <
> > > skriver79@gmail.com> wrote:
> > >
> > > > Hi
> > > >
> > > > I have a question about the expected behaviour of the
> > deploy:deploy-file
> > > > goal in the maven deploy plugin 2.8.1 which I am currently using to
> > > deploy
> > > > one file.
> > > >
> > > > It surprised me that no matter what I did I kept getting more
> artifacts
> > > > deployed that I asked for and the reason is in the
> > > > org.apache.maven.plugin.deploy.DeployFileMojo.execute line 376 where
> > the
> > > > attached artifacts are also deployed.
> > > >
> > > > Is this intended behaviour and if so how can I avoid this from
> > happening?
> > > >
> > > > The goal name deploy-file indicates that one artifact (possible incl.
> > > > pom/metadata) is to be deployed and not also a throng of other
> > artifacts.
> > > >
> > > > I will be happy to provide a patch where this is aspect is removed.
> > > >
> > > > Thank you in advance
> > > >
> > > > regards
> > > > Henrik Skriver Rasmussen
> > > >
> > >
> >
>

--001a113522968ef90704f280cd73--

