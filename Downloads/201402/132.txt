From users-return-135371-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Thu Feb  6 20:12:40 2014
Return-Path: <users-return-135371-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id BF52310237
	for <apmail-maven-users-archive@www.apache.org>; Thu,  6 Feb 2014 20:12:40 +0000 (UTC)
Received: (qmail 61265 invoked by uid 500); 6 Feb 2014 20:12:36 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 61193 invoked by uid 500); 6 Feb 2014 20:12:35 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 61185 invoked by uid 99); 6 Feb 2014 20:12:35 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 06 Feb 2014 20:12:35 +0000
X-ASF-Spam-Status: No, hits=1.5 required=5.0
	tests=HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: domain of ctrueden.wisc@gmail.com designates 209.85.212.45 as permitted sender)
Received: from [209.85.212.45] (HELO mail-vb0-f45.google.com) (209.85.212.45)
    by apache.org (qpsmtpd/0.29) with ESMTP; Thu, 06 Feb 2014 20:12:29 +0000
Received: by mail-vb0-f45.google.com with SMTP id m10so1817594vbh.4
        for <users@maven.apache.org>; Thu, 06 Feb 2014 12:12:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date:message-id
         :subject:to:content-type;
        bh=9a7a0tF12s0Ll0mu+lpA4xztBnRlIQDLqJd+1r1dQnw=;
        b=Ftnm3WPutpGb7Zqhm5iTrItJp5c4TehcngepnMvvID0ovwSTOxEHXoLBperhwsRqZi
         a4g6UfLskAp7KEhltIlqeOOl4aDDxEQqaNBZXGWn7uiByu0Tfhb1YEW0lNASQDlcyphh
         T4oqVr2osApVQovbWykX6I/yUgWW2x6JWnjt/INqOtcve0e1nJVKTm2r1/xXVy2pji0V
         c/inIb9bkylNgx/f4SL6GqqZfVEqSqjUBbdkrJ7+Hl3JherdMQe4sDDMIY+lA42pPWgl
         T6395yNY1rU6/7xamwxmttOAR0kFoFHqZwUpkJfSDlM/EBo2OLtGNTgPD1JBJYIY+8Vg
         ZiEA==
X-Received: by 10.220.58.202 with SMTP id i10mr7198941vch.23.1391717528301;
 Thu, 06 Feb 2014 12:12:08 -0800 (PST)
MIME-Version: 1.0
Sender: ctrueden.wisc@gmail.com
Received: by 10.58.34.198 with HTTP; Thu, 6 Feb 2014 12:11:38 -0800 (PST)
In-Reply-To: <lcsqnt$u6r$1@ger.gmane.org>
References: <CAOonohfsbrJ-7pxsEYFhLJvzb9KS+V6tnM0Je46Ep3m8YLFWSg@mail.gmail.com>
 <CAKDUN1vjCWVKV8BQZkjAW4Xb96z_41mhRmP=TNzLHxaX=YdCGg@mail.gmail.com>
 <CAOonohc6YwtXH-LtEHv3PGnv57cQ0YjWUvcTp9VZ1+Bj8DN7sQ@mail.gmail.com>
 <CAKDUN1v-0t+DhVnYi3CXFa_0UBs+KXXnR3jeDWqaETFQOO8r=Q@mail.gmail.com>
 <CAOonoheiu4EWX6p_g=FJHkRHqmBaG+PJoFbeS=7M9nh+DQhA5g@mail.gmail.com>
 <CAKDUN1swy7w7bjj12f7kffY=d-fD=eOThpz-tLgMg7dfBjaC_g@mail.gmail.com>
 <CADN69y=Z8psWea1bgSozguQZJtLW+-Wd0eJqVsTC9SfRM42ifw@mail.gmail.com>
 <lcqfv3$ftq$1@ger.gmane.org> <CADN69y=oO1XA9FwKAhGKZuoZN-xQA4uDR4t-Tdj+PsfmgSwk+g@mail.gmail.com>
 <lcsqnt$u6r$1@ger.gmane.org>
From: Curtis Rueden <ctrueden@wisc.edu>
Date: Thu, 6 Feb 2014 14:11:38 -0600
X-Google-Sender-Auth: wfgVjCGVuh_bS3-dGvLrpO6Hi_g
Message-ID: <CADN69ykPjvmcupqqLH8EHkhqqo5rXrmsG8H0Rs_S-Fgyn2KABw@mail.gmail.com>
Subject: Re: dependency management across projects
To: Maven Users List <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=001a11c2d70ee6faa304f1c27cd1
X-Virus-Checked: Checked by ClamAV on apache.org

--001a11c2d70ee6faa304f1c27cd1
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Hi J=F6rg,

> What do you mean with "irreproducible builds"?

I mean that you may build the same source code today, and then again next
week, and the two build results may differ.

With our projects we wanted the certainty that if you checked out *any*
revision from the SCM history, you would still be able to build it in, say,
5 years... at least as long as you use the same versions of the tooling
(Java version etc.).

With a SNAPSHOT parent, that is not guaranteed. You may introduce a change
in the parent that causes a build to fail when it used to succeed, which
makes "bisect" style debugging no longer feasible. That is, if old SCM
revisions no longer build properly due to changes in the parent, you will
no longer be able to perform a binary search through the SCM history to
determine the exact commit which introduced a bug.

> This scheme works well for us now for several years.

Sure, and I'm not dissing it, just pointing out the pros and cons. We
wanted fully reproducible builds, which meant that even our SNAPSHOT
revisions have only release dependencies, including the parent POM
reference. This indeed has some negative consequences, such as needing that
script to bump things for us, rather than everything "Just Working" with no
changes. And you're right that *release* version builds are still
reproducible either way.

Regards,
Curtis


On Wed, Feb 5, 2014 at 1:54 AM, J=F6rg Schaible
<joerg.schaible@swisspost.com>wrote:

> Hi Curtis,
>
> Curtis Rueden wrote:
>
> > Hi J=F6rg,
> >
> >> We use simply "x-SNAPSHOT" for the parent version. That way no
> >> unreleased project has to be touched, it simply uses the "lastest"
> >> SNAPSHOT of the parent. No script required.
> >
> > Yeah, that is very convenient, if you are willing to accept the two-edg=
ed
> > sword of irreproducible builds.
>
> What do you mean with "irreproducible builds"? Definitely, if you project
> relies on a SNAPSHOT parent, it does not matter if you call it 1-SNAPSHOT
> or
> x-SNAPSHOT.
>
> > A breaking change in the parent will break
> > all builds that consume it... but can be fixed just as easily too witho=
ut
> > touching the downstream projects.
>
> Well, somebody obviously made the choice for the SNAPSHOT parent ... with
> all consequences.
>
> > Of course, it's a decision every project has to make for themselves. My
> > projects opted for build reproducibility by using only release linkages
> > (for parent POMs, dependencies and plugins). This has many advantages:
> > e.g., "git bisect" fully works as one might hope, allowing you to
> > resurrect the state of the code even from years prior and still build
> > successfully. The downside is that you must make releases in order to b=
e
> > able to pin to them.
>
> Once a project is released, you also have a released parent. No surprises
> anymore. And the project can then make its own decision if it creates als=
o
> a
> branch for the parent and rely on e.g. 254.x-SNAPSHOT either for
> maintenance
> releases or further development.
>
> This scheme works well for us now for several years.
>
> Cheers,
> J=F6rg
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>

--001a11c2d70ee6faa304f1c27cd1--

