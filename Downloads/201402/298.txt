From users-return-135324-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Sat Feb  1 18:39:12 2014
Return-Path: <users-return-135324-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 75F90C1CB
	for <apmail-maven-users-archive@www.apache.org>; Sat,  1 Feb 2014 18:39:12 +0000 (UTC)
Received: (qmail 53284 invoked by uid 500); 1 Feb 2014 18:39:08 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 53119 invoked by uid 500); 1 Feb 2014 18:39:08 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 53108 invoked by uid 99); 1 Feb 2014 18:39:07 -0000
Received: from nike.apache.org (HELO nike.apache.org) (192.87.106.230)
    by apache.org (qpsmtpd/0.29) with ESMTP; Sat, 01 Feb 2014 18:39:07 +0000
X-ASF-Spam-Status: No, hits=2.3 required=5.0
	tests=FROM_12LTRDOM,HTML_MESSAGE,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (nike.apache.org: local policy includes SPF record at spf.trusted-forwarder.org)
Received: from [69.89.30.42] (HELO gproxy3-pub.mail.unifiedlayer.com) (69.89.30.42)
    by apache.org (qpsmtpd/0.29) with SMTP; Sat, 01 Feb 2014 18:39:01 +0000
Received: (qmail 15312 invoked by uid 0); 1 Feb 2014 18:38:38 -0000
Received: from unknown (HELO cmgw3) (10.0.90.84)
  by gproxy3.mail.unifiedlayer.com with SMTP; 1 Feb 2014 18:38:38 -0000
Received: from box771.bluehost.com ([66.147.244.71])
	by cmgw3 with 
	id MDeZ1n0011Z8wLJ01DecE9; Sat, 01 Feb 2014 18:38:37 -0700
X-Authority-Analysis: v=2.1 cv=RodWckWK c=1 sm=1 tr=0
 a=0O6GR4dg+rq58f4Ot4bDVw==:117 a=0O6GR4dg+rq58f4Ot4bDVw==:17 a=cNaOj0WVAAAA:8
 a=f5113yIGAAAA:8 a=KYjM-249bvYA:10 a=cOt1cUakVBEA:10 a=QPsBhez7AAAA:8
 a=dPtamjacotgA:10 a=8qgpsH-Z-ocA:10 a=uPZiAMpXAAAA:8 a=yPCof4ZbAAAA:8
 a=1XWaLZrsAAAA:8 a=dI1wNDaqme6a0mQyQQQA:9 a=CjuIK1q_8ugA:10 a=oc9zJB6evkkA:10
 a=KjqyXYYJREcA:10 a=bX58x0QMwVM7VN9rAxoA:9 a=HySSuW_ufk2xF5HQ:21
 a=_W_S_7VecoQA:10 a=frz4AuCg-hUA:10
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=releasetools.org; s=default;
	h=Content-Type:Cc:Subject:From:To:Date:Message-Id:Mime-Version; bh=ZN4bSRuk7+Jzj2fbGagcrYRYjaSXrIr0OgJNFD9FeIw=;
	b=XnH+phZu//MPO1j0qYUGyq+LqQJ0U1oRxvASJEz5uACD3MQ9B2Gh0kkg+efxBJeWifQ8DNCqN29zsPQKjhaIRLwdW0IibZmqP5sPw5wVlRPSRKbpcFx2efV4hCptv0hD;
Received: from [75.101.50.129] (port=49551 helo=[204.68.225.24])
	by box771.bluehost.com with esmtpsa (TLSv1:RC4-SHA:128)
	(Exim 4.80)
	(envelope-from <russt@releasetools.org>)
	id 1W9fSc-0000ou-6K; Sat, 01 Feb 2014 11:38:34 -0700
Mime-Version: 1.0
Message-Id: <p0624080fcf12dd834195@[204.68.225.24]>
Date: Sat, 1 Feb 2014 10:38:30 -0800
To: users@maven.apache.org
From: Russ Tremain <russt@releasetools.org>
Subject: enough entropy for jarsigning?
Cc: jenkinsci-users@googlegroups.com
Content-Type: multipart/alternative; boundary="============_-820842582==_ma============"
X-Identified-User: {1266:box771.bluehost.com:release5:releasetools.org} {sentby:smtp auth 75.101.50.129 authed with russt+releasetools.org}
X-Virus-Checked: Checked by ClamAV on apache.org

--============_-820842582==_ma============
Content-Type: text/plain; charset="us-ascii" ; format="flowed"

Hi,

I ran into a very weird problem the other day that I thought I would 
share with the list.

We recently switched our maven builds to Fedora linux running on a 
really great VMWARE cluster with very fast SSD-based storage.

However, our average java build inexplicably increased to several 
hours.  In my own build environment under mac osx, similar builds 
would complete in minutes (some of the small builds take only 2-3 
minutes under normal circumstances).

I eventually noticed that the jobs were hanging during jarsigning.

After investigating many red herrings, it boiled down to the linux 
"secure random" device, /dev/random, not supplying enough data.  It 
is a blocking device, and therefore, if you are using the jarsigner 
plugin, the jarsigner will read from /dev/random to seed the 
encryption for the signature for each class.  If you have a jar with 
many classes that need to be signed, it can literally take hours.

In our case, a 2 minute build was taking up to 4 hours.

Note that if you are running under mac osx, this will not occur, 
because Apple maps /dev/random to the psuedo random number device 
which is /dev/urandom:

# ls -l /dev/random /dev/urandom
crw-rw-rw-  1 root  wheel    9,   0 Feb  1 09:31 /dev/random
crw-rw-rw-  1 root  wheel    9,   1 Jan 23 19:22 /dev/urandom

You may not experience this problem if you are running on real 
hardware, because the so-called "entropy pool" can be supplied with 
hardware sources of noise, even at the chip level in some cases.

However, if you are running in a virtual environment, apparently 
there is not enough noise to supply the entropy pool with a steady 
stream of data, and so /dev/random runs out and blocks very quickly.

The problem is very easy to detect:

	$ dd if=/dev/random of=/dev/null bs=1 count=1000

If dd hangs while reading from the device, or takes a very long time, 
then you have the problem.

Once you identify the problem, it is easy to solve [1,2].  In our 
case, we opted for a system-wide solution using the rngd-tools [3] 
package, since this problem can impact many things, including ssl 
connections with jenkins [4], or any other programs that consume 
encryption services.

Cheers,
-Russ

References:

[1] 
http://stackoverflow.com/questions/137212/how-to-solve-performance-problem-with-java-securerandom
[2] http://docs.oracle.com/cd/E12529_01/wlss31/configwlss/jvmrand.html
[3] on fedora/centos/etc:  sudo yum install rng-utils
     start daemon with:  rngd --rng-device=/dev/urandom
[4] 
"<https://groups.google.com/forum/?hl=en_US#!searchin/jenkinsci-users/Re$3A$20How$20does$20Jenkins$20checkout$20sources$20from$20svn$20to$20the$20slaves/jenkinsci-users/sqp6hvzdXDY/P-ZYkDO-8TgJ>How 
does Jenkins checkout sources from svn to the slaves", 
jenkinsci-users list.

--============_-820842582==_ma============--

