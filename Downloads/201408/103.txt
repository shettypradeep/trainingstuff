From users-return-136990-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Aug  8 07:12:25 2014
Return-Path: <users-return-136990-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id A55FA11821
	for <apmail-maven-users-archive@www.apache.org>; Fri,  8 Aug 2014 07:12:25 +0000 (UTC)
Received: (qmail 28349 invoked by uid 500); 8 Aug 2014 07:12:23 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 28263 invoked by uid 500); 8 Aug 2014 07:12:23 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 28252 invoked by uid 99); 8 Aug 2014 07:12:23 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 08 Aug 2014 07:12:23 +0000
X-ASF-Spam-Status: No, hits=-0.0 required=5.0
	tests=SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: local policy)
Received: from [24.37.79.202] (HELO smtp.artifact-software.com) (24.37.79.202)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 08 Aug 2014 07:12:19 +0000
Received: from localhost (localhost.localdomain [127.0.0.1])
	by smtp.artifact-software.com (Postfix) with ESMTP id 0E0C46A657F
	for <users@maven.apache.org>; Fri,  8 Aug 2014 03:11:57 -0400 (EDT)
X-Virus-Scanned: amavisd-new at artifact-software.com
Received: from smtp.artifact-software.com ([127.0.0.1])
	by localhost (smtp.artifact-software.com [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id QGbvwGNZ_zKc for <users@maven.apache.org>;
	Fri,  8 Aug 2014 03:11:53 -0400 (EDT)
Received: from [192.168.3.170] (unknown [192.168.3.170])
	by smtp.artifact-software.com (Postfix) with ESMTP id 077476A657E
	for <users@maven.apache.org>; Fri,  8 Aug 2014 03:11:51 -0400 (EDT)
Message-ID: <53E4782E.2010403@artifact-software.com>
Date: Fri, 08 Aug 2014 03:11:42 -0400
From: Ron Wheeler <rwheeler@artifact-software.com>
Reply-To: "users@maven.apache.org >> Maven Users List" <users@maven.apache.org>
Organization: Artifact Software
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:24.0) Gecko/20100101 Thunderbird/24.6.0
MIME-Version: 1.0
To: users@maven.apache.org
Subject: Re: Discovering/updating component file versions in maven dependencies
References: <53E441F8.7090603@gmail.com>
In-Reply-To: <53E441F8.7090603@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Checked: Checked by ClamAV on apache.org

On 07/08/2014 11:20 PM, Les Gasser wrote:
> I'm a new Maven user, using it almost completely through Eclipse.
> I've installed Nexus as a repository manager. It all works.
>
> 1. Suppose I set up a dependency today, say on "needed-component". I
> have to explicitly reference the specific version I want, say
> "needed-component-2.3.4".  I had hoped there would be a way to just
> make a dependency to "needed-component" and have Maven keep me up to
> date with the latest version, but I gather that's not the Maven
> concept. Am I overlooking something?
This gives you repeatable builds. If someone picks up your project and 
builds it, they will get a resulting artifact that is exactly the same 
one that you made.
This is a good thing.
>
> 2. OK so I have the explicit dependency to "needed-component-2.3.4",
> set up using Properties->Maven->Add Dependency, finding the most
> recent version in central, etc.  Now is there any way to be notified
> via Nexus/Maven/Eclipse when a newer version of needed-component
> becomes available? Kind of a "check for component updates"?
Usually you can subscribe to the forum or user group that is associated 
with that artifact.
That way, you usually get a note about what new features are included 
and what old features have been changed or eliminated.
Having new versions automatically adopted sounds pretty good until a new 
version breaks your build without you being aware that it was changed.
You will tear your hair out trying to figure why your latest code change 
caused such a strange error in your application.
It is a lot saner to try to have a stable set of dependencies from the 
start of a release cycle until the end.
If you really need to upgrade a dependency in the midst of a development 
cycle, you want to do that as a separate task so that you can test the 
new version of the library with a stable version of your code.


>
> 3. Failing that, I suppose I have to survey repositories like central
> myself and notice when new versions appear. OK so a year from now I
> see "needed-component-3.0.3" is in central. Is there any way via maven
> or maven/eclipse to update the original dependency, changing it from
> "needed-component-2.3.4" to "needed-component-2.3.4"?  Or do I have to
> go in and edit the dependency spec in the project's pom.xml file
> myself?
You should have a parent pom for your project and in that pom, you 
maintain the versions as variables. It has no code but you "install" it 
with Maven as a module.
In your code modules, you specify the parent project by its GAV and you 
use the variables names for the versions in the GAV spec for a 
dependency org.apache.jackrabbit:jackrabbit-core:${jackrabbit.version}

That way you only have to change one thing when you decide to adopt a 
new version of a dependency.
Changing the variable jackrabbit.version in the parent will make sure 
that every module will be built with the same version of jackrabbit.

You still need to rebuild each module but it will not require any 
editing of the module's pom.xml file.
> 4. Eclipse/Maven has an Add Dependency capability.  Suppose you make a
> conceptual or typing mistake when adding a dependency and want to
> revert.  Why no symmetric Delete Dependency? Again, is pom.xml editing
> the only recourse?

Make sure that you are using Eclipse/STS or have plain eclipse with all 
of the m2e plugins that support Maven.
If you do this, you have a very nice graphical editor for pom files and 
adding or deleting a dependency is just pointing and clicking and you 
will probably never use the "Add Dependency"
It has a dependency navigation that makes it easy to see all of the 
transitive dependencies and you can also easily find all of the modules 
that require a version of one of the low level dependencies.
(One click answers the question : "Who is dragging in version 1.0 of 
log4j?")

STS from the Spring guys is a very good way to get Eclipse. It comes out 
of the box with all of the plug-ins required to use Maven.
We started with plain Eclipse but every update was a really long process 
to find and load all of the plug-ins and it was hard to be sure that 
every team member had the same configuration of plug-ins.
Once we found STS, Eclipse got a lot easier. One download and a single 
configuration to set up out SVN connection and the new version is ready 
to run. Takes 15-20 minutes to upgrade Eclipse now.


Once you get your parent pom set up life gets pretty easy. Also look at 
dependency management.


> Thanks for any help.
>
> - Les
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
> For additional commands, e-mail: users-help@maven.apache.org
>
>


-- 
Ron Wheeler
President
Artifact Software Inc
email: rwheeler@artifact-software.com
skype: ronaldmwheeler
phone: 866-970-2435, ext 102


---------------------------------------------------------------------
To unsubscribe, e-mail: users-unsubscribe@maven.apache.org
For additional commands, e-mail: users-help@maven.apache.org


