From users-return-136991-apmail-maven-users-archive=maven.apache.org@maven.apache.org  Fri Aug  8 13:44:36 2014
Return-Path: <users-return-136991-apmail-maven-users-archive=maven.apache.org@maven.apache.org>
X-Original-To: apmail-maven-users-archive@www.apache.org
Delivered-To: apmail-maven-users-archive@www.apache.org
Received: from mail.apache.org (hermes.apache.org [140.211.11.3])
	by minotaur.apache.org (Postfix) with SMTP id 95E67112C5
	for <apmail-maven-users-archive@www.apache.org>; Fri,  8 Aug 2014 13:44:36 +0000 (UTC)
Received: (qmail 27176 invoked by uid 500); 8 Aug 2014 13:44:34 -0000
Delivered-To: apmail-maven-users-archive@maven.apache.org
Received: (qmail 27091 invoked by uid 500); 8 Aug 2014 13:44:34 -0000
Mailing-List: contact users-help@maven.apache.org; run by ezmlm
Precedence: bulk
List-Unsubscribe: <mailto:users-unsubscribe@maven.apache.org>
List-Help: <mailto:users-help@maven.apache.org>
List-Post: <mailto:users@maven.apache.org>
List-Id: "Maven Users List" <users.maven.apache.org>
Reply-To: "Maven Users List" <users@maven.apache.org>
Delivered-To: mailing list users@maven.apache.org
Received: (qmail 27069 invoked by uid 99); 8 Aug 2014 13:44:34 -0000
Received: from athena.apache.org (HELO athena.apache.org) (140.211.11.136)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 08 Aug 2014 13:44:34 +0000
X-ASF-Spam-Status: No, hits=1.8 required=5.0
	tests=AC_DIV_BONANZA,HTML_FONT_FACE_BAD,HTML_MESSAGE,RCVD_IN_DNSWL_LOW,SPF_PASS
X-Spam-Check-By: apache.org
Received-SPF: pass (athena.apache.org: domain of bentatham@nanometrics.ca designates 209.85.192.180 as permitted sender)
Received: from [209.85.192.180] (HELO mail-pd0-f180.google.com) (209.85.192.180)
    by apache.org (qpsmtpd/0.29) with ESMTP; Fri, 08 Aug 2014 13:44:29 +0000
Received: by mail-pd0-f180.google.com with SMTP id v10so5358918pde.11
        for <users@maven.apache.org>; Fri, 08 Aug 2014 06:43:33 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=nanometrics.ca; s=google;
        h=mime-version:from:date:message-id:subject:to:content-type;
        bh=PTPfQ0bb+skTOYBW5Y2MaqNAGJoDdOMp96bAPkrtv7Q=;
        b=Hh+iZ031YlLgH5ey/GLCNZx2cGipB8XWs25fywHKspO+1rxPvoPGnnJVHXU74f7ikp
         4aZs3LZSkUt3qCCpRAs/rPfUsomEtGBJrWiLqt1fS6qQzUj4wpOdV9/uLAOtHsEjU46V
         MreCKzuzGGnSo7QAGNg4xA4g6HwsD16TRRKes=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to
         :content-type;
        bh=PTPfQ0bb+skTOYBW5Y2MaqNAGJoDdOMp96bAPkrtv7Q=;
        b=Lb3jyL9uoeWY4iIDH6tnHiWwz/yrZ7dnfXJbCrBP4Cyjh8+nqVWpkSAuQ1hLx73F4M
         /hmUJQoqE/CEyiw4pfdhyQgRWU+A2QOqrc8ZVUUSaDY0XHoiueMMqtEShq/tSyBmh+Zn
         JHa/T021nfioHOe+kn74dvXm7ll/huDrpqY/P0+u+hXBf2UuDU8ka+Anrhd1tpW2V7nY
         qbzq2+NbMQNyoFXLcJ+to6srdjk8XUPIjnHrGbYSn5Z8wCn0r1GUE0G4uCGeHj+hSYpE
         9HCoANziJJXC2CNhHcUw4ea0HY858wfPf8AKIYY/JMd+GZyt4ghFBUC4XkntOu/13dMM
         3OHw==
X-Gm-Message-State: ALoCoQkhOhUwNrE0HDKdHRVG92JkMN3LdLvGcwVIppQdietjqilJvE6G6Qvv1Kl6P7vkXn1lNqGx
X-Received: by 10.68.213.34 with SMTP id np2mr1206142pbc.167.1407505413513;
 Fri, 08 Aug 2014 06:43:33 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.70.45.68 with HTTP; Fri, 8 Aug 2014 06:43:12 -0700 (PDT)
From: Ben Tatham <bentatham@nanometrics.ca>
Date: Fri, 8 Aug 2014 09:43:12 -0400
Message-ID: <CAB9FDbnr_53nE01Lw7kUaNabZZ_YKHvsjbcQ6mktLKYsOwPadQ@mail.gmail.com>
Subject: Defining component by hint for plexus in pom.xml
To: users <users@maven.apache.org>
Content-Type: multipart/alternative; boundary=e89a8ff1c0a4313a1a05001e646f
X-Virus-Checked: Checked by ClamAV on apache.org

--e89a8ff1c0a4313a1a05001e646f
Content-Type: text/plain; charset=UTF-8

Hi,
I'm trying to do some pretty advanced things with custom plugins with
@Components.

Basically, I want to use the same mojo with slight variations, and I want
to be able to inject those variations via the pom (or via the <packaging>
perhaps as well).  The plugin already defines a custom lifecycle, so I am
ok if I have to define that lifecycle twice, I just don't want to have to
define the 12+ mojos twice for almost the exact same thing.

Essentially, I have a mojo that define a @Component:

@Component
Parser parser;


I then I have two implementations of that Parser interface:

@Component(role=Parser.class, hint="simple")
public class SimpleParser implements Parser

and

@Component(role=Parser.class, hint="complex")
public class ComplexParser implements Parser


I know that on the mojo itself, could tell the mojo which one to use (by
setting it like this: @Component(hint = "complex")

but what I really want is to force the user to define the hint in the pom
or command line.  But as far as I can tell, there is no way to do this.  Is
there a way around this other than making two separate mojos, which then
defeats the purpose of using plexus at all here as far as I can tell,
because  I may as well just define the implementation explicitly (albeit,
plexus would still be useful for test code, I suppose).

Can I use an expression for the hint, and perhaps pass that as a separate
parameter somehow?

Any help or suggestions would be appreciated.

-Ben



-- 
Ben Tatham
Sr. Software Engineer
Nanometrics Inc.
+1 613-592-6776 x254
http://www.nanometrics.ca

--e89a8ff1c0a4313a1a05001e646f--

